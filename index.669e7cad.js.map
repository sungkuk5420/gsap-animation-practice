{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./node_modules/three/build/three.module.js","./node_modules/gsap/TweenLite.js","./node_modules/gsap/TweenMaxBase.js","./node_modules/gsap/CSSPlugin.js","./node_modules/gsap/AttrPlugin.js","./node_modules/gsap/RoundPropsPlugin.js","./node_modules/gsap/DirectionalRotationPlugin.js","./node_modules/gsap/TimelineLite.js","./node_modules/gsap/TimelineMax.js","./node_modules/gsap/BezierPlugin.js","./node_modules/gsap/EasePack.js","./node_modules/gsap/TweenMax.js","./node_modules/hover-effect/dist/hover-effect.es.js","./node_modules/@parcel/runtime-js/lib/bundle-url.js","./node_modules/@parcel/runtime-js/lib/relative-path.js","./src/index.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '99';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\treturn this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, result ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\t// Store the current background texture and its `version`\n\t// so we can recompile the material accordingly.\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, 34963 );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8B5F: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], renderer );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, 35713 ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists[ scene.id ];\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ scene.id ] = {};\n\t\t\tlists[ scene.id ][ camera.id ] = list;\n\n\t\t} else {\n\n\t\t\tlist = cameras[ camera.id ];\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras[ camera.id ] = list;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( 3042 );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) return 33326;\n\t\t\tif ( glType === 5131 ) return 33325;\n\t\t\tif ( glType === 5121 ) return 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) return 34837;\n\t\t\tif ( glType === 5131 ) return 34843;\n\t\t\tif ( glType === 5121 ) return 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) return 34836;\n\t\t\tif ( glType === 5131 ) return 34842;\n\t\t\tif ( glType === 5121 ) return 32856;\n\n\t\t}\n\n\t\treturn glFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType;\n\n\t\tif ( texture.isDataTexture3D ) {\n\n\t\t\ttextureType = 32879;\n\n\t\t} else {\n\n\t\t\ttextureType = 3553;\n\n\t\t}\n\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\t\tstate.activeTexture( 33984 + slot );\n\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( 36161, 32854, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReferenceType = 'stage';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\tvar renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( frameOfReferenceType === 'stage' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar frameOfReference = null;\n\tvar frameOfReferenceType = 'stage';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfReference !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setFrameOfReferenceType = function ( value ) {\n\n\t\tframeOfReferenceType = value;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor } );\n\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfReference = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfReference );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tif ( 'targetRay' in inputPose ) {\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\n\n\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\n\n\t\t\t\t\t\t// DEPRECATED\n\n\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = null;\n\n\tif ( typeof navigator !== 'undefined' ) {\n\n\t\tvr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\t}\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture3D = ( function () {\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture3D( texture, slot ) {\n\n\t\t\ttextures.setTexture3D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\tonLoad( animations );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\t\t\t\t\tcache[ data.uuid ] = materials[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.detune.value = this.detune;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v2 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new THREE.Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new THREE.Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, DataTexture3D, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, AnimationLoader, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, MeshMatcapMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, ACESFilmicToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RedFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, JSONLoader, SceneUtils, LensFlare };\n","/*!\n * VERSION: 2.1.3\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n *\n * @author: Jack Doyle, jack@greensock.com\n */\n/* eslint-disable */\n\n/* ES6 changes:\n\t- declare and export _gsScope at top.\n\t- set var TweenLite = the result of the main function\n\t- export default TweenLite at the bottom\n\t- return TweenLite at the bottom of the main function\n\t- pass in _gsScope as the first parameter of the main function (which is actually at the bottom)\n\t- remove the \"export to multiple environments\" in Definition().\n */\nexport var _gsScope = (typeof(window) !== \"undefined\") ? window : (typeof(module) !== \"undefined\" && module.exports && typeof(global) !== \"undefined\") ? global : this || {};\n\nexport var TweenLite = (function(window) {\n\n\t\t\"use strict\";\n\t\tvar _exports = {},\n\t\t\t_doc = window.document,\n\t\t\t_globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n\t\tif (_globals.TweenLite) {\n\t\t\treturn _globals.TweenLite; //in case the core set of classes is already loaded, don't instantiate twice.\n\t\t}\n\t\tvar _namespace = function(ns) {\n\t\t\t\tvar a = ns.split(\".\"),\n\t\t\t\t\tp = _globals, i;\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\tp[a[i]] = p = p[a[i]] || {};\n\t\t\t\t}\n\t\t\t\treturn p;\n\t\t\t},\n\t\t\tgs = _namespace(\"com.greensock\"),\n\t\t\t_tinyNum = 0.00000001,\n\t\t\t_slice = function(a) { //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\tvar b = [],\n\t\t\t\t\tl = a.length,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 0; i !== l; b.push(a[i++])) {}\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\t_emptyFunc = function() {},\n\t\t\t_isArray = (function() { //works around issues in iframe environments where the Array global isn't shared, thus if the object originates in a different window/iframe, \"(obj instanceof Array)\" will evaluate false. We added some speed optimizations to avoid Object.prototype.toString.call() unless it's absolutely necessary because it's VERY slow (like 20x slower)\n\t\t\t\tvar toString = Object.prototype.toString,\n\t\t\t\t\tarray = toString.call([]);\n\t\t\t\treturn function(obj) {\n\t\t\t\t\treturn obj != null && (obj instanceof Array || (typeof(obj) === \"object\" && !!obj.push && toString.call(obj) === array));\n\t\t\t\t};\n\t\t\t}()),\n\t\t\ta, i, p, _ticker, _tickerActive,\n\t\t\t_defLookup = {},\n\n\t\t\t/**\n\t\t\t * @constructor\n\t\t\t * Defines a GreenSock class, optionally with an array of dependencies that must be instantiated first and passed into the definition.\n\t\t\t * This allows users to load GreenSock JS files in any order even if they have interdependencies (like CSSPlugin extends TweenPlugin which is\n\t\t\t * inside TweenLite.js, but if CSSPlugin is loaded first, it should wait to run its code until TweenLite.js loads and instantiates TweenPlugin\n\t\t\t * and then pass TweenPlugin to CSSPlugin's definition). This is all done automatically and internally.\n\t\t\t *\n\t\t\t * Every definition will be added to a \"com.greensock\" global object (typically window, but if a window.GreenSockGlobals object is found,\n\t\t\t * it will go there as of v1.7). For example, TweenLite will be found at window.com.greensock.TweenLite and since it's a global class that should be available anywhere,\n\t\t\t * it is ALSO referenced at window.TweenLite. However some classes aren't considered global, like the base com.greensock.core.Animation class, so\n\t\t\t * those will only be at the package like window.com.greensock.core.Animation. Again, if you define a GreenSockGlobals object on the window, everything\n\t\t\t * gets tucked neatly inside there instead of on the window directly. This allows you to do advanced things like load multiple versions of GreenSock\n\t\t\t * files and put them into distinct objects (imagine a banner ad uses a newer version but the main site uses an older one). In that case, you could\n\t\t\t * sandbox the banner one like:\n\t\t\t *\n\t\t\t * <script>\n\t\t\t *     var gs = window.GreenSockGlobals = {}; //the newer version we're about to load could now be referenced in a \"gs\" object, like gs.TweenLite.to(...). Use whatever alias you want as long as it's unique, \"gs\" or \"banner\" or whatever.\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.7/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     window.GreenSockGlobals = window._gsQueue = window._gsDefine = null; //reset it back to null (along with the special _gsQueue variable) so that the next load of TweenMax affects the window and we can reference things directly like TweenLite.to(...)\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.6/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     gs.TweenLite.to(...); //would use v1.7\n\t\t\t *     TweenLite.to(...); //would use v1.6\n\t\t\t * </script>\n\t\t\t *\n\t\t\t * @param {!string} ns The namespace of the class definition, leaving off \"com.greensock.\" as that's assumed. For example, \"TweenLite\" or \"plugins.CSSPlugin\" or \"easing.Back\".\n\t\t\t * @param {!Array.<string>} dependencies An array of dependencies (described as their namespaces minus \"com.greensock.\" prefix). For example [\"TweenLite\",\"plugins.TweenPlugin\",\"core.Animation\"]\n\t\t\t * @param {!function():Object} func The function that should be called and passed the resolved dependencies which will return the actual class for this definition.\n\t\t\t * @param {boolean=} global If true, the class will be added to the global scope (typically window unless you define a window.GreenSockGlobals object)\n\t\t\t */\n\t\t\tDefinition = function(ns, dependencies, func, global) {\n\t\t\t\tthis.sc = (_defLookup[ns]) ? _defLookup[ns].sc : []; //subclasses\n\t\t\t\t_defLookup[ns] = this;\n\t\t\t\tthis.gsClass = null;\n\t\t\t\tthis.func = func;\n\t\t\t\tvar _classes = [];\n\t\t\t\tthis.check = function(init) {\n\t\t\t\t\tvar i = dependencies.length,\n\t\t\t\t\t\tmissing = i,\n\t\t\t\t\t\tcur, a, n, cl;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n\t\t\t\t\t\t\t_classes[i] = cur.gsClass;\n\t\t\t\t\t\t\tmissing--;\n\t\t\t\t\t\t} else if (init) {\n\t\t\t\t\t\t\tcur.sc.push(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (missing === 0 && func) {\n\t\t\t\t\t\ta = (\"com.greensock.\" + ns).split(\".\");\n\t\t\t\t\t\tn = a.pop();\n\t\t\t\t\t\tcl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n\n\t\t\t\t\t\t//exports to multiple environments\n\t\t\t\t\t\tif (global) {\n\t\t\t\t\t\t\t_globals[n] = _exports[n] = cl; //provides a way to avoid global namespace pollution. By default, the main classes like TweenLite, Power1, Strong, etc. are added to window unless a GreenSockGlobals is defined. So if you want to have things added to a custom object instead, just do something like window.GreenSockGlobals = {} before loading any GreenSock files. You can even set up an alias like window.GreenSockGlobals = windows.gs = {} so that you can access everything like gs.TweenLite. Also remember that ALL classes are added to the window.com.greensock object (in their respective packages, like com.greensock.easing.Power1, com.greensock.TweenLite, etc.)\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tif (typeof(module) !== \"undefined\" && module.exports) { //node\n\t\t\t\t\t\t\t\tif (ns === moduleName) {\n\t\t\t\t\t\t\t\t\tmodule.exports = _exports[moduleName] = cl;\n\t\t\t\t\t\t\t\t\tfor (i in _exports) {\n\t\t\t\t\t\t\t\t\t\tcl[i] = _exports[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (_exports[moduleName]) {\n\t\t\t\t\t\t\t\t\t_exports[moduleName][n] = cl;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (typeof(define) === \"function\" && define.amd){ //AMD\n\t\t\t\t\t\t\t\tdefine((window.GreenSockAMDPath ? window.GreenSockAMDPath + \"/\" : \"\") + ns.split(\".\").pop(), [], function() { return cl; });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (i = 0; i < this.sc.length; i++) {\n\t\t\t\t\t\t\tthis.sc[i].check();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.check(true);\n\t\t\t},\n\n\t\t\t//used to create Definition instances (which basically registers a class that has dependencies).\n\t\t\t_gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n\t\t\t\treturn new Definition(ns, dependencies, func, global);\n\t\t\t},\n\n\t\t\t//a quick way to create a class that doesn't have any dependencies. Returns the class, but first registers it in the GreenSock namespace so that other classes can grab it (other classes might be dependent on the class).\n\t\t\t_class = gs._class = function(ns, func, global) {\n\t\t\t\tfunc = func || function() {};\n\t\t\t\t_gsDefine(ns, [], function(){ return func; }, global);\n\t\t\t\treturn func;\n\t\t\t};\n\n\t\t_gsDefine.globals = _globals;\n\n\n\n/*\n * ----------------------------------------------------------------\n * Ease\n * ----------------------------------------------------------------\n */\n\t\tvar _baseParams = [0, 0, 1, 1],\n\t\t\tEase = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n\t\t\t\tthis._func = func;\n\t\t\t\tthis._type = type || 0;\n\t\t\t\tthis._power = power || 0;\n\t\t\t\tthis._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n\t\t\t}, true),\n\t\t\t_easeMap = Ease.map = {},\n\t\t\t_easeReg = Ease.register = function(ease, names, types, create) {\n\t\t\t\tvar na = names.split(\",\"),\n\t\t\t\t\ti = na.length,\n\t\t\t\t\tta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"),\n\t\t\t\t\te, name, j, type;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tname = na[i];\n\t\t\t\t\te = create ? _class(\"easing.\"+name, null, true) : gs.easing[name] || {};\n\t\t\t\t\tj = ta.length;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\ttype = ta[j];\n\t\t\t\t\t\t_easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tp = Ease.prototype;\n\t\tp._calcEnd = false;\n\t\tp.getRatio = function(p) {\n\t\t\tif (this._func) {\n\t\t\t\tthis._params[0] = p;\n\t\t\t\treturn this._func.apply(null, this._params);\n\t\t\t}\n\t\t\tvar t = this._type,\n\t\t\t\tpw = this._power,\n\t\t\t\tr = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\t\t\tif (pw === 1) {\n\t\t\t\tr *= r;\n\t\t\t} else if (pw === 2) {\n\t\t\t\tr *= r * r;\n\t\t\t} else if (pw === 3) {\n\t\t\t\tr *= r * r * r;\n\t\t\t} else if (pw === 4) {\n\t\t\t\tr *= r * r * r * r;\n\t\t\t}\n\t\t\treturn (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n\t\t};\n\n\t\t//create all the standard eases like Linear, Quad, Cubic, Quart, Quint, Strong, Power0, Power1, Power2, Power3, and Power4 (each with easeIn, easeOut, and easeInOut)\n\t\ta = [\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"];\n\t\ti = a.length;\n\t\twhile (--i > -1) {\n\t\t\tp = a[i]+\",Power\"+i;\n\t\t\t_easeReg(new Ease(null,null,1,i), p, \"easeOut\", true);\n\t\t\t_easeReg(new Ease(null,null,2,i), p, \"easeIn\" + ((i === 0) ? \",easeNone\" : \"\"));\n\t\t\t_easeReg(new Ease(null,null,3,i), p, \"easeInOut\");\n\t\t}\n\t\t_easeMap.linear = gs.easing.Linear.easeIn;\n\t\t_easeMap.swing = gs.easing.Quad.easeInOut; //for jQuery folks\n\n\n/*\n * ----------------------------------------------------------------\n * EventDispatcher\n * ----------------------------------------------------------------\n */\n\t\tvar EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n\t\t\tthis._listeners = {};\n\t\t\tthis._eventTarget = target || this;\n\t\t});\n\t\tp = EventDispatcher.prototype;\n\n\t\tp.addEventListener = function(type, callback, scope, useParam, priority) {\n\t\t\tpriority = priority || 0;\n\t\t\tvar list = this._listeners[type],\n\t\t\t\tindex = 0,\n\t\t\t\tlistener, i;\n\t\t\tif (this === _ticker && !_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (list == null) {\n\t\t\t\tthis._listeners[type] = list = [];\n\t\t\t}\n\t\t\ti = list.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tlistener = list[i];\n\t\t\t\tif (listener.c === callback && listener.s === scope) {\n\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t} else if (index === 0 && listener.pr < priority) {\n\t\t\t\t\tindex = i + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.splice(index, 0, {c:callback, s:scope, up:useParam, pr:priority});\n\t\t};\n\n\t\tp.removeEventListener = function(type, callback) {\n\t\t\tvar list = this._listeners[type], i;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (list[i].c === callback) {\n\t\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.dispatchEvent = function(type) {\n\t\t\tvar list = this._listeners[type],\n\t\t\t\ti, t, listener;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\tif (i > 1) {\n\t\t\t\t\tlist = list.slice(0); //in case addEventListener() is called from within a listener/callback (otherwise the index could change, resulting in a skip)\n\t\t\t\t}\n\t\t\t\tt = this._eventTarget;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tlistener = list[i];\n\t\t\t\t\tif (listener) {\n\t\t\t\t\t\tif (listener.up) {\n\t\t\t\t\t\t\tlistener.c.call(listener.s || t, {type:type, target:t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlistener.c.call(listener.s || t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * Ticker\n * ----------------------------------------------------------------\n */\n \t\tvar _reqAnimFrame = window.requestAnimationFrame,\n\t\t\t_cancelAnimFrame = window.cancelAnimationFrame,\n\t\t\t_getTime = Date.now || function() {return new Date().getTime();},\n\t\t\t_lastUpdate = _getTime();\n\n\t\t//now try to determine the requestAnimationFrame and cancelAnimationFrame functions and if none are found, we'll use a setTimeout()/clearTimeout() polyfill.\n\t\ta = [\"ms\",\"moz\",\"webkit\",\"o\"];\n\t\ti = a.length;\n\t\twhile (--i > -1 && !_reqAnimFrame) {\n\t\t\t_reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n\t\t\t_cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n\t\t}\n\n\t\t_class(\"Ticker\", function(fps, useRAF) {\n\t\t\tvar _self = this,\n\t\t\t\t_startTime = _getTime(),\n\t\t\t\t_useRAF = (useRAF !== false && _reqAnimFrame) ? \"auto\" : false,\n\t\t\t\t_lagThreshold = 500,\n\t\t\t\t_adjustedLag = 33,\n\t\t\t\t_tickWord = \"tick\", //helps reduce gc burden\n\t\t\t\t_fps, _req, _id, _gap, _nextTime,\n\t\t\t\t_tick = function(manual) {\n\t\t\t\t\tvar elapsed = _getTime() - _lastUpdate,\n\t\t\t\t\t\toverlap, dispatch;\n\t\t\t\t\tif (elapsed > _lagThreshold) {\n\t\t\t\t\t\t_startTime += elapsed - _adjustedLag;\n\t\t\t\t\t}\n\t\t\t\t\t_lastUpdate += elapsed;\n\t\t\t\t\t_self.time = (_lastUpdate - _startTime) / 1000;\n\t\t\t\t\toverlap = _self.time - _nextTime;\n\t\t\t\t\tif (!_fps || overlap > 0 || manual === true) {\n\t\t\t\t\t\t_self.frame++;\n\t\t\t\t\t\t_nextTime += overlap + (overlap >= _gap ? 0.004 : _gap - overlap);\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (manual !== true) { //make sure the request is made before we dispatch the \"tick\" event so that timing is maintained. Otherwise, if processing the \"tick\" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.\n\t\t\t\t\t\t_id = _req(_tick);\n\t\t\t\t\t}\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\t_self.dispatchEvent(_tickWord);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\tEventDispatcher.call(_self);\n\t\t\t_self.time = _self.frame = 0;\n\t\t\t_self.tick = function() {\n\t\t\t\t_tick(true);\n\t\t\t};\n\n\t\t\t_self.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t\tif (!arguments.length) { //if lagSmoothing() is called with no arguments, treat it like a getter that returns a boolean indicating if it's enabled or not. This is purposely undocumented and is for internal use.\n\t\t\t\t\treturn (_lagThreshold < 1 / _tinyNum);\n\t\t\t\t}\n\t\t\t\t_lagThreshold = threshold || (1 / _tinyNum); //zero should be interpreted as basically unlimited\n\t\t\t\t_adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n\t\t\t};\n\n\t\t\t_self.sleep = function() {\n\t\t\t\tif (_id == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_useRAF || !_cancelAnimFrame) {\n\t\t\t\t\tclearTimeout(_id);\n\t\t\t\t} else {\n\t\t\t\t\t_cancelAnimFrame(_id);\n\t\t\t\t}\n\t\t\t\t_req = _emptyFunc;\n\t\t\t\t_id = null;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = false;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_self.wake = function(seamless) {\n\t\t\t\tif (_id !== null) {\n\t\t\t\t\t_self.sleep();\n\t\t\t\t} else if (seamless) {\n\t\t\t\t\t_startTime += -_lastUpdate + (_lastUpdate = _getTime());\n\t\t\t\t} else if (_self.frame > 10) { //don't trigger lagSmoothing if we're just waking up, and make sure that at least 10 frames have elapsed because of the iOS bug that we work around below with the 1.5-second setTimout().\n\t\t\t\t\t_lastUpdate = _getTime() - _lagThreshold + 5;\n\t\t\t\t}\n\t\t\t\t_req = (_fps === 0) ? _emptyFunc : (!_useRAF || !_reqAnimFrame) ? function(f) { return setTimeout(f, ((_nextTime - _self.time) * 1000 + 1) | 0); } : _reqAnimFrame;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = true;\n\t\t\t\t}\n\t\t\t\t_tick(2);\n\t\t\t};\n\n\t\t\t_self.fps = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _fps;\n\t\t\t\t}\n\t\t\t\t_fps = value;\n\t\t\t\t_gap = 1 / (_fps || 60);\n\t\t\t\t_nextTime = this.time + _gap;\n\t\t\t\t_self.wake();\n\t\t\t};\n\n\t\t\t_self.useRAF = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _useRAF;\n\t\t\t\t}\n\t\t\t\t_self.sleep();\n\t\t\t\t_useRAF = value;\n\t\t\t\t_self.fps(_fps);\n\t\t\t};\n\t\t\t_self.fps(fps);\n\n\t\t\t//a bug in iOS 6 Safari occasionally prevents the requestAnimationFrame from working initially, so we use a 1.5-second timeout that automatically falls back to setTimeout() if it senses this condition.\n\t\t\tsetTimeout(function() {\n\t\t\t\tif (_useRAF === \"auto\" && _self.frame < 5 && (_doc || {}).visibilityState !== \"hidden\") {\n\t\t\t\t\t_self.useRAF(false);\n\t\t\t\t}\n\t\t\t}, 1500);\n\t\t});\n\n\t\tp = gs.Ticker.prototype = new gs.events.EventDispatcher();\n\t\tp.constructor = gs.Ticker;\n\n\n/*\n * ----------------------------------------------------------------\n * Animation\n * ----------------------------------------------------------------\n */\n\t\tvar Animation = _class(\"core.Animation\", function(duration, vars) {\n\t\t\t\tthis.vars = vars = vars || {};\n\t\t\t\tthis._duration = this._totalDuration = duration || 0;\n\t\t\t\tthis._delay = Number(vars.delay) || 0;\n\t\t\t\tthis._timeScale = 1;\n\t\t\t\tthis._active = !!vars.immediateRender;\n\t\t\t\tthis.data = vars.data;\n\t\t\t\tthis._reversed = !!vars.reversed;\n\n\t\t\t\tif (!_rootTimeline) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_tickerActive) { //some browsers (like iOS 6 Safari) shut down JavaScript execution when the tab is disabled and they [occasionally] neglect to start up requestAnimationFrame again when returning - this code ensures that the engine starts up again properly.\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\n\t\t\t\tvar tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n\t\t\t\ttl.add(this, tl._time);\n\n\t\t\t\tif (this.vars.paused) {\n\t\t\t\t\tthis.paused(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t_ticker = Animation.ticker = new gs.Ticker();\n\t\tp = Animation.prototype;\n\t\tp._dirty = p._gc = p._initted = p._paused = false;\n\t\tp._totalTime = p._time = 0;\n\t\tp._rawPrevTime = -1;\n\t\tp._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n\t\tp._paused = false;\n\n\n\t\t//some browsers (like iOS) occasionally drop the requestAnimationFrame event when the user switches to a different tab and then comes back again, so we use a 2-second setTimeout() to sense if/when that condition occurs and then wake() the ticker.\n\t\tvar _checkTimeout = function() {\n\t\t\t\tif (_tickerActive && _getTime() - _lastUpdate > 2000 && ((_doc || {}).visibilityState !== \"hidden\" || !_ticker.lagSmoothing())) { //note: if the tab is hidden, we should still wake if lagSmoothing has been disabled.\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\tvar t = setTimeout(_checkTimeout, 2000);\n\t\t\t\tif (t.unref) {\n\t\t\t\t\t// allows a node process to exit even if the timeout’s callback hasn't been invoked. Without it, the node process could hang as this function is called every two seconds.\n\t\t\t\t\tt.unref();\n\t\t\t\t}\n\t\t\t};\n\t\t_checkTimeout();\n\n\n\t\tp.play = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(false).paused(false);\n\t\t};\n\n\t\tp.pause = function(atTime, suppressEvents) {\n\t\t\tif (atTime != null) {\n\t\t\t\tthis.seek(atTime, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.resume = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(false);\n\t\t};\n\n\t\tp.seek = function(time, suppressEvents) {\n\t\t\treturn this.totalTime(Number(time), suppressEvents !== false);\n\t\t};\n\n\t\tp.restart = function(includeDelay, suppressEvents) {\n\t\t\treturn this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, (suppressEvents !== false), true);\n\t\t};\n\n\t\tp.reverse = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek((from || this.totalDuration()), suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(true).paused(false);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\t//stub - we override this method in subclasses.\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tthis._time = this._totalTime = 0;\n\t\t\tthis._initted = this._gc = false;\n\t\t\tthis._rawPrevTime = -1;\n\t\t\tif (this._gc || !this.timeline) {\n\t\t\t\tthis._enabled(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.isActive = function() {\n\t\t\tvar tl = this._timeline, //the 2 root timelines won't have a _timeline; they're always active.\n\t\t\t\tstartTime = this._startTime,\n\t\t\t\trawTime;\n\t\t\treturn (!tl || (!this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime(true)) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale - _tinyNum));\n\t\t};\n\n\t\tp._enabled = function (enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tthis._gc = !enabled;\n\t\t\tthis._active = this.isActive();\n\t\t\tif (ignoreTimeline !== true) {\n\t\t\t\tif (enabled && !this.timeline) {\n\t\t\t\t\tthis._timeline.add(this, this._startTime - this._delay);\n\t\t\t\t} else if (!enabled && this.timeline) {\n\t\t\t\t\tthis._timeline._remove(this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n\t\tp._kill = function(vars, target) {\n\t\t\treturn this._enabled(false, false);\n\t\t};\n\n\t\tp.kill = function(vars, target) {\n\t\t\tthis._kill(vars, target);\n\t\t\treturn this;\n\t\t};\n\n\t\tp._uncache = function(includeSelf) {\n\t\t\tvar tween = includeSelf ? this : this.timeline;\n\t\t\twhile (tween) {\n\t\t\t\ttween._dirty = true;\n\t\t\t\ttween = tween.timeline;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._swapSelfInParams = function(params) {\n\t\t\tvar i = params.length,\n\t\t\t\tcopy = params.concat();\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (params[i] === \"{self}\") {\n\t\t\t\t\tcopy[i] = this;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t};\n\n\t\tp._callback = function(type) {\n\t\t\tvar v = this.vars,\n\t\t\t\tcallback = v[type],\n\t\t\t\tparams = v[type + \"Params\"],\n\t\t\t\tscope = v[type + \"Scope\"] || v.callbackScope || this,\n\t\t\t\tl = params ? params.length : 0;\n\t\t\tswitch (l) { //speed optimization; call() is faster than apply() so use it when there are only a few parameters (which is by far most common). Previously we simply did var v = this.vars; v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n\t\t\t\tcase 0: callback.call(scope); break;\n\t\t\t\tcase 1: callback.call(scope, params[0]); break;\n\t\t\t\tcase 2: callback.call(scope, params[0], params[1]); break;\n\t\t\t\tdefault: callback.apply(scope, params);\n\t\t\t}\n\t\t};\n\n//----Animation getters/setters --------------------------------------------------------\n\n\t\tp.eventCallback = function(type, callback, params, scope) {\n\t\t\tif ((type || \"\").substr(0,2) === \"on\") {\n\t\t\t\tvar v = this.vars;\n\t\t\t\tif (arguments.length === 1) {\n\t\t\t\t\treturn v[type];\n\t\t\t\t}\n\t\t\t\tif (callback == null) {\n\t\t\t\t\tdelete v[type];\n\t\t\t\t} else {\n\t\t\t\t\tv[type] = callback;\n\t\t\t\t\tv[type + \"Params\"] = (_isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1) ? this._swapSelfInParams(params) : params;\n\t\t\t\t\tv[type + \"Scope\"] = scope;\n\t\t\t\t}\n\t\t\t\tif (type === \"onUpdate\") {\n\t\t\t\t\tthis._onUpdate = callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.delay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._delay;\n\t\t\t}\n\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\tthis.startTime( this._startTime + value - this._delay );\n\t\t\t}\n\t\t\tthis._delay = value;\n\t\t\treturn this;\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tthis._dirty = false;\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tthis._duration = this._totalDuration = value;\n\t\t\tthis._uncache(true); //true in case it's a TweenMax or TimelineMax that has a repeat - we'll need to refresh the totalDuration.\n\t\t\tif (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n\t\t\t\tthis.totalTime(this._totalTime * (value / this._duration), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tthis._dirty = false;\n\t\t\treturn (!arguments.length) ? this._totalDuration : this.duration(value);\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\treturn this.totalTime((value > this._duration) ? this._duration : value, suppressEvents);\n\t\t};\n\n\t\tp.totalTime = function(time, suppressEvents, uncapped) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._totalTime;\n\t\t\t}\n\t\t\tif (this._timeline) {\n\t\t\t\tif (time < 0 && !uncapped) {\n\t\t\t\t\ttime += this.totalDuration();\n\t\t\t\t}\n\t\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\t\tif (this._dirty) {\n\t\t\t\t\t\tthis.totalDuration();\n\t\t\t\t\t}\n\t\t\t\t\tvar totalDuration = this._totalDuration,\n\t\t\t\t\t\ttl = this._timeline;\n\t\t\t\t\tif (time > totalDuration && !uncapped) {\n\t\t\t\t\t\ttime = totalDuration;\n\t\t\t\t\t}\n\t\t\t\t\tthis._startTime = (this._paused ? this._pauseTime : tl._time) - ((!this._reversed ? time : totalDuration - time) / this._timeScale);\n\t\t\t\t\tif (!tl._dirty) { //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.\n\t\t\t\t\t\tthis._uncache(false);\n\t\t\t\t\t}\n\t\t\t\t\t//in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The startTime of that child would get pushed out, but one of the ancestors may have completed.\n\t\t\t\t\tif (tl._timeline) {\n\t\t\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\t\t\tif (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n\t\t\t\t\t\t\t\ttl.totalTime(tl._totalTime, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._gc) {\n\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t}\n\t\t\t\tif (this._totalTime !== time || this._duration === 0) {\n\t\t\t\t\tif (_lazyTweens.length) {\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t\tthis.render(time, suppressEvents, false);\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.progress = p.totalProgress = function(value, suppressEvents) {\n\t\t\tvar duration = this.duration();\n\t\t\treturn (!arguments.length) ? (duration ? this._time / duration : this.ratio) : this.totalTime(duration * value, suppressEvents);\n\t\t};\n\n\t\tp.startTime = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._startTime;\n\t\t\t}\n\t\t\tif (value !== this._startTime) {\n\t\t\t\tthis._startTime = value;\n\t\t\t\tif (this.timeline) if (this.timeline._sortChildren) {\n\t\t\t\t\tthis.timeline.add(this, value - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.endTime = function(includeRepeats) {\n\t\t\treturn this._startTime + ((includeRepeats != false) ? this.totalDuration() : this.duration()) / this._timeScale;\n\t\t};\n\n\t\tp.timeScale = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._timeScale;\n\t\t\t}\n\t\t\tvar pauseTime, t;\n\t\t\tvalue = value || _tinyNum; //can't allow zero because it'll throw the math off\n\t\t\tif (this._timeline && this._timeline.smoothChildTiming) {\n\t\t\t\tpauseTime = this._pauseTime;\n\t\t\t\tt = (pauseTime || pauseTime === 0) ? pauseTime : this._timeline.totalTime();\n\t\t\t\tthis._startTime = t - ((t - this._startTime) * this._timeScale / value);\n\t\t\t}\n\t\t\tthis._timeScale = value;\n\t\t\tt = this.timeline;\n\t\t\twhile (t && t.timeline) { //must update the duration/totalDuration of all ancestor timelines immediately in case in the middle of a render loop, one tween alters another tween's timeScale which shoves its startTime before 0, forcing the parent timeline to shift around and shiftChildren() which could affect that next tween's render (startTime). Doesn't matter for the root timeline though.\n\t\t\t\tt._dirty = true;\n\t\t\t\tt.totalDuration();\n\t\t\t\tt = t.timeline;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.reversed = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._reversed;\n\t\t\t}\n\t\t\tif (value != this._reversed) {\n\t\t\t\tthis._reversed = value;\n\t\t\t\tthis.totalTime(((this._timeline && !this._timeline.smoothChildTiming) ? this.totalDuration() - this._totalTime : this._totalTime), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.paused = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._paused;\n\t\t\t}\n\t\t\tvar tl = this._timeline,\n\t\t\t\traw, elapsed;\n\t\t\tif (value != this._paused) if (tl) {\n\t\t\t\tif (!_tickerActive && !value) {\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\traw = tl.rawTime();\n\t\t\t\telapsed = raw - this._pauseTime;\n\t\t\t\tif (!value && tl.smoothChildTiming) {\n\t\t\t\t\tthis._startTime += elapsed;\n\t\t\t\t\tthis._uncache(false);\n\t\t\t\t}\n\t\t\t\tthis._pauseTime = value ? raw : null;\n\t\t\t\tthis._paused = value;\n\t\t\t\tthis._active = this.isActive();\n\t\t\t\tif (!value && elapsed !== 0 && this._initted && this.duration()) {\n\t\t\t\t\traw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n\t\t\t\t\tthis.render(raw, (raw === this._totalTime), true); //in case the target's properties changed via some other tween or manual update by the user, we should force a render.\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._gc && !value) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * SimpleTimeline\n * ----------------------------------------------------------------\n */\n\t\tvar SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n\t\t\tAnimation.call(this, 0, vars);\n\t\t\tthis.autoRemoveChildren = this.smoothChildTiming = true;\n\t\t});\n\n\t\tp = SimpleTimeline.prototype = new Animation();\n\t\tp.constructor = SimpleTimeline;\n\t\tp.kill()._gc = false;\n\t\tp._first = p._last = p._recent = null;\n\t\tp._sortChildren = false;\n\n\t\tp.add = p.insert = function(child, position, align, stagger) {\n\t\t\tvar prevTween, st;\n\t\t\tchild._startTime = Number(position || 0) + child._delay;\n\t\t\tif (child._paused) if (this !== child._timeline) { //we only adjust the _pauseTime if it wasn't in this timeline already. Remember, sometimes a tween will be inserted again into the same timeline when its startTime is changed so that the tweens in the TimelineLite/Max are re-ordered properly in the linked list (so everything renders in the proper order).\n\t\t\t\tchild._pauseTime = this.rawTime() - (child._timeline.rawTime() - child._pauseTime);\n\t\t\t}\n\t\t\tif (child.timeline) {\n\t\t\t\tchild.timeline._remove(child, true); //removes from existing timeline so that it can be properly added to this one.\n\t\t\t}\n\t\t\tchild.timeline = child._timeline = this;\n\t\t\tif (child._gc) {\n\t\t\t\tchild._enabled(true, true);\n\t\t\t}\n\t\t\tprevTween = this._last;\n\t\t\tif (this._sortChildren) {\n\t\t\t\tst = child._startTime;\n\t\t\t\twhile (prevTween && prevTween._startTime > st) {\n\t\t\t\t\tprevTween = prevTween._prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (prevTween) {\n\t\t\t\tchild._next = prevTween._next;\n\t\t\t\tprevTween._next = child;\n\t\t\t} else {\n\t\t\t\tchild._next = this._first;\n\t\t\t\tthis._first = child;\n\t\t\t}\n\t\t\tif (child._next) {\n\t\t\t\tchild._next._prev = child;\n\t\t\t} else {\n\t\t\t\tthis._last = child;\n\t\t\t}\n\t\t\tchild._prev = prevTween;\n\t\t\tthis._recent = child;\n\t\t\tif (this._timeline) {\n\t\t\t\tthis._uncache(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tif (tween.timeline === this) {\n\t\t\t\tif (!skipDisable) {\n\t\t\t\t\ttween._enabled(false, true);\n\t\t\t\t}\n\n\t\t\t\tif (tween._prev) {\n\t\t\t\t\ttween._prev._next = tween._next;\n\t\t\t\t} else if (this._first === tween) {\n\t\t\t\t\tthis._first = tween._next;\n\t\t\t\t}\n\t\t\t\tif (tween._next) {\n\t\t\t\t\ttween._next._prev = tween._prev;\n\t\t\t\t} else if (this._last === tween) {\n\t\t\t\t\tthis._last = tween._prev;\n\t\t\t\t}\n\t\t\t\ttween._next = tween._prev = tween.timeline = null;\n\t\t\t\tif (tween === this._recent) {\n\t\t\t\t\tthis._recent = this._last;\n\t\t\t\t}\n\n\t\t\t\tif (this._timeline) {\n\t\t\t\t\tthis._uncache(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar tween = this._first,\n\t\t\t\tnext;\n\t\t\tthis._totalTime = this._time = this._rawPrevTime = time;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\tif (tween._active || (time >= tween._startTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t};\n\n\t\tp.rawTime = function() {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\treturn this._totalTime;\n\t\t};\n\n/*\n * ----------------------------------------------------------------\n * TweenLite\n * ----------------------------------------------------------------\n */\n\t\tvar TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n\t\t\t\tAnimation.call(this, duration, vars);\n\t\t\t\tthis.render = TweenLite.prototype.render; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\n\t\t\t\tif (target == null) {\n\t\t\t\t\tthrow \"Cannot tween a null target.\";\n\t\t\t\t}\n\n\t\t\t\tthis.target = target = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\n\t\t\t\tvar isSelector = (target.jquery || (target.length && target !== window && target[0] && (target[0] === window || (target[0].nodeType && target[0].style && !target.nodeType)))),\n\t\t\t\t\toverwrite = this.vars.overwrite,\n\t\t\t\t\ti, targ, targets;\n\n\t\t\t\tthis._overwrite = overwrite = (overwrite == null) ? _overwriteLookup[TweenLite.defaultOverwrite] : (typeof(overwrite) === \"number\") ? overwrite >> 0 : _overwriteLookup[overwrite];\n\n\t\t\t\tif ((isSelector || target instanceof Array || (target.push && _isArray(target))) && typeof(target[0]) !== \"number\") {\n\t\t\t\t\tthis._targets = targets = _slice(target);  //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\t\tthis._propLookup = [];\n\t\t\t\t\tthis._siblings = [];\n\t\t\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\t\t\ttarg = targets[i];\n\t\t\t\t\t\tif (!targ) {\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\ttarg = targets[i--] = TweenLite.selector(targ); //in case it's an array of strings\n\t\t\t\t\t\t\tif (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\t\ttargets.splice(i+1, 1); //to avoid an endless loop (can't imagine why the selector would return a string, but just in case)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (targ.length && targ !== window && targ[0] && (targ[0] === window || (targ[0].nodeType && targ[0].style && !targ.nodeType))) { //in case the user is passing in an array of selector objects (like jQuery objects), we need to check one more level and pull things out if necessary. Also note that <select> elements pass all the criteria regarding length and the first child having style, so we must also check to ensure the target isn't an HTML node itself.\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tthis._targets = targets = targets.concat(_slice(targ));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._siblings[i] = _register(targ, this, false);\n\t\t\t\t\t\tif (overwrite === 1) if (this._siblings[i].length > 1) {\n\t\t\t\t\t\t\t_applyOverwrite(targ, this, null, 1, this._siblings[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._propLookup = {};\n\t\t\t\t\tthis._siblings = _register(target, this, false);\n\t\t\t\t\tif (overwrite === 1) if (this._siblings.length > 1) {\n\t\t\t\t\t\t_applyOverwrite(target, this, null, 1, this._siblings);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.immediateRender || (duration === 0 && this._delay === 0 && this.vars.immediateRender !== false)) {\n\t\t\t\t\tthis._time = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n\t\t\t\t\tthis.render(Math.min(0, -this._delay)); //in case delay is negative\n\t\t\t\t}\n\t\t\t}, true),\n\t\t\t_isSelector = function(v) {\n\t\t\t\treturn (v && v.length && v !== window && v[0] && (v[0] === window || (v[0].nodeType && v[0].style && !v.nodeType))); //we cannot check \"nodeType\" if the target is window from within an iframe, otherwise it will trigger a security error in some browsers like Firefox.\n\t\t\t},\n\t\t\t_autoCSS = function(vars, target) {\n\t\t\t\tvar css = {},\n\t\t\t\t\tp;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tif (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || (_plugins[p] && _plugins[p]._autoCSS))) { //note: <img> elements contain read-only \"x\" and \"y\" properties. We should also prioritize editing css width/height rather than the element's properties.\n\t\t\t\t\t\tcss[p] = vars[p];\n\t\t\t\t\t\tdelete vars[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvars.css = css;\n\t\t\t};\n\n\t\tp = TweenLite.prototype = new Animation();\n\t\tp.constructor = TweenLite;\n\t\tp.kill()._gc = false;\n\n//----TweenLite defaults, overwrite management, and root updates ----------------------------------------------------\n\n\t\tp.ratio = 0;\n\t\tp._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n\t\tp._notifyPluginsOfEnabled = p._lazy = false;\n\n\t\tTweenLite.version = \"2.1.3\";\n\t\tTweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n\t\tTweenLite.defaultOverwrite = \"auto\";\n\t\tTweenLite.ticker = _ticker;\n\t\tTweenLite.autoSleep = 120;\n\t\tTweenLite.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t_ticker.lagSmoothing(threshold, adjustedLag);\n\t\t};\n\n\t\tTweenLite.selector = window.$ || window.jQuery || function(e) {\n\t\t\tvar selector = window.$ || window.jQuery;\n\t\t\tif (selector) {\n\t\t\t\tTweenLite.selector = selector;\n\t\t\t\treturn selector(e);\n\t\t\t}\n\t\t\tif (!_doc) { //in some dev environments (like Angular 6), GSAP gets loaded before the document is defined! So re-query it here if/when necessary.\n\t\t\t\t_doc = window.document;\n\t\t\t}\n\t\t\treturn (!_doc) ? e : (_doc.querySelectorAll ? _doc.querySelectorAll(e) : _doc.getElementById((e.charAt(0) === \"#\") ? e.substr(1) : e));\n\t\t};\n\n\t\tvar _lazyTweens = [],\n\t\t\t_lazyLookup = {},\n\t\t\t_numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t\t_relExp = /[\\+-]=-?[\\.\\d]/,\n\t\t\t//_nonNumbersExp = /(?:([\\-+](?!(\\d|=)))|[^\\d\\-+=e]|(e(?![\\-+][\\d])))+/ig,\n\t\t\t_setRatio = function(v) {\n\t\t\t\tvar pt = this._firstPT,\n\t\t\t\t\tmin = 0.000001,\n\t\t\t\t\tval;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tval = !pt.blob ? pt.c * v + pt.s : (v === 1 && this.end != null) ? this.end : v ? this.join(\"\") : this.start;\n\t\t\t\t\tif (pt.m) {\n\t\t\t\t\t\tval = pt.m.call(this._tween, val, this._target || pt.t, this._tween);\n\t\t\t\t\t} else if (val < min) if (val > -min && !pt.blob) { //prevents issues with converting very small numbers to strings in the browser\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (!pt.f) {\n\t\t\t\t\t\tpt.t[pt.p] = val;\n\t\t\t\t\t} else if (pt.fp) {\n\t\t\t\t\t\tpt.t[pt.p](pt.fp, val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.t[pt.p](val);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_blobRound = function(v) {\n\t\t\t\treturn (((v * 1000) | 0) / 1000) + \"\";\n\t\t\t},\n\t\t\t//compares two strings (start/end), finds the numbers that are different and spits back an array representing the whole value but with the changing values isolated as elements. For example, \"rgb(0,0,0)\" and \"rgb(100,50,0)\" would become [\"rgb(\", 0, \",\", 50, \",0)\"]. Notice it merges the parts that are identical (performance optimization). The array also has a linked list of PropTweens attached starting with _firstPT that contain the tweening data (t, p, s, c, f, etc.). It also stores the starting value as a \"start\" property so that we can revert to it if/when necessary, like when a tween rewinds fully. If the quantity of numbers differs between the start and end, it will always prioritize the end value(s). The pt parameter is optional - it's for a PropTween that will be appended to the end of the linked list and is typically for actually setting the value after all of the elements have been updated (with array.join(\"\")).\n\t\t\t_blobDif = function(start, end, filter, pt) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tcharIndex = 0,\n\t\t\t\t\ts = \"\",\n\t\t\t\t\tcolor = 0,\n\t\t\t\t\tstartNums, endNums, num, i, l, nonNumbers, currentNum;\n\t\t\t\ta.start = start;\n\t\t\t\ta.end = end;\n\t\t\t\tstart = a[0] = start + \"\"; //ensure values are strings\n\t\t\t\tend = a[1] = end + \"\";\n\t\t\t\tif (filter) {\n\t\t\t\t\tfilter(a); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.\n\t\t\t\t\tstart = a[0];\n\t\t\t\t\tend = a[1];\n\t\t\t\t}\n\t\t\t\ta.length = 0;\n\t\t\t\tstartNums = start.match(_numbersExp) || [];\n\t\t\t\tendNums = end.match(_numbersExp) || [];\n\t\t\t\tif (pt) {\n\t\t\t\t\tpt._next = null;\n\t\t\t\t\tpt.blob = 1;\n\t\t\t\t\ta._firstPT = a._applyPT = pt; //apply last in the linked list (which means inserting it first)\n\t\t\t\t}\n\t\t\t\tl = endNums.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tcurrentNum = endNums[i];\n\t\t\t\t\tnonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex)-charIndex);\n\t\t\t\t\ts += (nonNumbers || !i) ? nonNumbers : \",\"; //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.\n\t\t\t\t\tcharIndex += nonNumbers.length;\n\t\t\t\t\tif (color) { //sense rgba() values and round them.\n\t\t\t\t\t\tcolor = (color + 1) % 5;\n\t\t\t\t\t} else if (nonNumbers.substr(-5) === \"rgba(\") {\n\t\t\t\t\t\tcolor = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (currentNum === startNums[i] || startNums.length <= i) {\n\t\t\t\t\t\ts += currentNum;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (s) {\n\t\t\t\t\t\t\ta.push(s);\n\t\t\t\t\t\t\ts = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnum = parseFloat(startNums[i]);\n\t\t\t\t\t\ta.push(num);\n\t\t\t\t\t\ta._firstPT = {_next: a._firstPT, t:a, p: a.length-1, s:num, c:((currentNum.charAt(1) === \"=\") ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : (parseFloat(currentNum) - num)) || 0, f:0, m:(color && color < 4) ? Math.round : _blobRound}; //limiting to 3 decimal places and casting as a string can really help performance when array.join() is called!\n\t\t\t\t\t\t//note: we don't set _prev because we'll never need to remove individual PropTweens from this list.\n\t\t\t\t\t}\n\t\t\t\t\tcharIndex += currentNum.length;\n\t\t\t\t}\n\t\t\t\ts += end.substr(charIndex);\n\t\t\t\tif (s) {\n\t\t\t\t\ta.push(s);\n\t\t\t\t}\n\t\t\t\ta.setRatio = _setRatio;\n\t\t\t\tif (_relExp.test(end)) { //if the end string contains relative values, delete it so that on the final render (in _setRatio()), we don't actually set it to the string with += or -= characters (forces it to use the calculated value).\n\t\t\t\t\ta.end = null;\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\t//note: \"funcParam\" is only necessary for function-based getters/setters that require an extra parameter like getAttribute(\"width\") and setAttribute(\"width\", value). In this example, funcParam would be \"width\". Used by AttrPlugin for example.\n\t\t\t_addPropTween = function(target, prop, start, end, overwriteProp, mod, funcParam, stringFilter, index) {\n\t\t\t\tif (typeof(end) === \"function\") {\n\t\t\t\t\tend = end(index || 0, target);\n\t\t\t\t}\n\t\t\t\tvar type = typeof(target[prop]),\n\t\t\t\t\tgetterName = (type !== \"function\") ? \"\" : ((prop.indexOf(\"set\") || typeof(target[\"get\" + prop.substr(3)]) !== \"function\") ? prop : \"get\" + prop.substr(3)),\n\t\t\t\t\ts = (start !== \"get\") ? start : !getterName ? target[prop] : funcParam ? target[getterName](funcParam) : target[getterName](),\n\t\t\t\t\tisRelative = (typeof(end) === \"string\" && end.charAt(1) === \"=\"),\n\t\t\t\t\tpt = {t:target, p:prop, s:s, f:(type === \"function\"), pg:0, n:overwriteProp || prop, m:(!mod ? 0 : (typeof(mod) === \"function\") ? mod : Math.round), pr:0, c:isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : (parseFloat(end) - s) || 0},\n\t\t\t\t\tblob;\n\n\t\t\t\tif (typeof(s) !== \"number\" || (typeof(end) !== \"number\" && !isRelative)) {\n\t\t\t\t\tif (funcParam || isNaN(s) || (!isRelative && isNaN(end)) || typeof(s) === \"boolean\" || typeof(end) === \"boolean\") {\n\t\t\t\t\t\t//a blob (string that has multiple numbers in it)\n\t\t\t\t\t\tpt.fp = funcParam;\n\t\t\t\t\t\tblob = _blobDif(s, (isRelative ? (parseFloat(pt.s) + pt.c) + (pt.s + \"\").replace(/[0-9\\-\\.]/g, \"\") : end), stringFilter || TweenLite.defaultStringFilter, pt);\n\t\t\t\t\t\tpt = {t: blob, p: \"setRatio\", s: 0, c: 1, f: 2, pg: 0, n: overwriteProp || prop, pr: 0, m: 0}; //\"2\" indicates it's a Blob property tween. Needed for RoundPropsPlugin for example.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.s = parseFloat(s);\n\t\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\t\tpt.c = (parseFloat(end) - pt.s) || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pt.c) { //only add it to the linked list if there's a change.\n\t\t\t\t\tif ((pt._next = this._firstPT)) {\n\t\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t\t}\n\t\t\t\t\tthis._firstPT = pt;\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_internals = TweenLite._internals = {isArray:_isArray, isSelector:_isSelector, lazyTweens:_lazyTweens, blobDif:_blobDif}, //gives us a way to expose certain private values to other GreenSock classes without contaminating tha main TweenLite object.\n\t\t\t_plugins = TweenLite._plugins = {},\n\t\t\t_tweenLookup = _internals.tweenLookup = {},\n\t\t\t_tweenLookupNum = 0,\n\t\t\t_reservedProps = _internals.reservedProps = {ease:1, delay:1, overwrite:1, onComplete:1, onCompleteParams:1, onCompleteScope:1, useFrames:1, runBackwards:1, startAt:1, onUpdate:1, onUpdateParams:1, onUpdateScope:1, onStart:1, onStartParams:1, onStartScope:1, onReverseComplete:1, onReverseCompleteParams:1, onReverseCompleteScope:1, onRepeat:1, onRepeatParams:1, onRepeatScope:1, easeParams:1, yoyo:1, immediateRender:1, repeat:1, repeatDelay:1, data:1, paused:1, reversed:1, autoCSS:1, lazy:1, onOverwrite:1, callbackScope:1, stringFilter:1, id:1, yoyoEase:1, stagger:1},\n\t\t\t_overwriteLookup = {none:0, all:1, auto:2, concurrent:3, allOnStart:4, preexisting:5, \"true\":1, \"false\":0},\n\t\t\t_rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(),\n\t\t\t_rootTimeline = Animation._rootTimeline = new SimpleTimeline(),\n\t\t\t_nextGCFrame = 30,\n\t\t\t_lazyRender = _internals.lazyRender = function() {\n\t\t\t\tvar l = _lazyTweens.length,\n\t\t\t\t\ti, tween;\n\t\t\t\t_lazyLookup = {};\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\ttween = _lazyTweens[i];\n\t\t\t\t\tif (tween && tween._lazy !== false) {\n\t\t\t\t\t\ttween.render(tween._lazy[0], tween._lazy[1], true);\n\t\t\t\t\t\ttween._lazy = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_lazyTweens.length = 0;\n\t\t\t};\n\n\t\t_rootTimeline._startTime = _ticker.time;\n\t\t_rootFramesTimeline._startTime = _ticker.frame;\n\t\t_rootTimeline._active = _rootFramesTimeline._active = true;\n\t\tsetTimeout(_lazyRender, 1); //on some mobile devices, there isn't a \"tick\" before code runs which means any lazy renders wouldn't run before the next official \"tick\".\n\n\t\tAnimation._updateRoot = TweenLite.render = function() {\n\t\t\t\tvar i, a, p;\n\t\t\t\tif (_lazyTweens.length) { //if code is run outside of the requestAnimationFrame loop, there may be tweens queued AFTER the engine refreshed, so we need to ensure any pending renders occur before we refresh again.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\t_rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n\t\t\t\t_rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n\t\t\t\tif (_lazyTweens.length) {\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tif (_ticker.frame >= _nextGCFrame) { //dump garbage every 120 frames or whatever the user sets TweenLite.autoSleep to\n\t\t\t\t\t_nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n\t\t\t\t\tfor (p in _tweenLookup) {\n\t\t\t\t\t\ta = _tweenLookup[p].tweens;\n\t\t\t\t\t\ti = a.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i]._gc) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a.length === 0) {\n\t\t\t\t\t\t\tdelete _tweenLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//if there are no more tweens in the root timelines, or if they're all paused, make the _timer sleep to reduce load on the CPU slightly\n\t\t\t\t\tp = _rootTimeline._first;\n\t\t\t\t\tif (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n\t\t\t\t\t\twhile (p && p._paused) {\n\t\t\t\t\t\t\tp = p._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!p) {\n\t\t\t\t\t\t\t_ticker.sleep();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t_ticker.addEventListener(\"tick\", Animation._updateRoot);\n\n\t\tvar _register = function(target, tween, scrub) {\n\t\t\t\tvar id = target._gsTweenID, a, i;\n\t\t\t\tif (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + (_tweenLookupNum++))]) {\n\t\t\t\t\t_tweenLookup[id] = {target:target, tweens:[]};\n\t\t\t\t}\n\t\t\t\tif (tween) {\n\t\t\t\t\ta = _tweenLookup[id].tweens;\n\t\t\t\t\ta[(i = a.length)] = tween;\n\t\t\t\t\tif (scrub) {\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i] === tween) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _tweenLookup[id].tweens;\n\t\t\t},\n\t\t\t_onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n\t\t\t\tvar func = overwrittenTween.vars.onOverwrite, r1, r2;\n\t\t\t\tif (func) {\n\t\t\t\t\tr1 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t\t\t\t}\n\t\t\t\tfunc = TweenLite.onOverwrite;\n\t\t\t\tif (func) {\n\t\t\t\t\tr2 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t\t\t\t}\n\t\t\t\treturn (r1 !== false && r2 !== false);\n\t\t\t},\n\t\t\t_applyOverwrite = function(target, tween, props, mode, siblings) {\n\t\t\t\tvar i, changed, curTween, l;\n\t\t\t\tif (mode === 1 || mode >= 4) {\n\t\t\t\t\tl = siblings.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif ((curTween = siblings[i]) !== tween) {\n\t\t\t\t\t\t\tif (!curTween._gc) {\n\t\t\t\t\t\t\t\tif (curTween._kill(null, target, tween)) {\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (mode === 5) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\t\t\t\t//NOTE: Add tiny amount to overcome floating point errors that can cause the startTime to be VERY slightly off (when a tween's time() is set for example)\n\t\t\t\tvar startTime = tween._startTime + _tinyNum,\n\t\t\t\t\toverlaps = [],\n\t\t\t\t\toCount = 0,\n\t\t\t\t\tzeroDur = (tween._duration === 0),\n\t\t\t\t\tglobalStart;\n\t\t\t\ti = siblings.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t} else if (curTween._timeline !== tween._timeline) {\n\t\t\t\t\t\tglobalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n\t\t\t\t\t\tif (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n\t\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= _tinyNum * 2)) {\n\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ti = oCount;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tcurTween = overlaps[i];\n\t\t\t\t\tl = curTween._firstPT; //we need to discern if there were property tweens originally; if they all get removed in the next line's _kill() call, the tween should be killed. See https://github.com/greensock/GreenSock-JS/issues/278\n\t\t\t\t\tif (mode === 2) if (curTween._kill(props, target, tween)) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (mode !== 2 || (!curTween._firstPT && curTween._initted && l)) {\n\t\t\t\t\t\tif (mode !== 2 && !_onOverwrite(curTween, tween)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curTween._enabled(false, false)) { //if all property tweens have been overwritten, kill the tween.\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn changed;\n\t\t\t},\n\t\t\t_checkOverlap = function(tween, reference, zeroDur) {\n\t\t\t\tvar tl = tween._timeline,\n\t\t\t\t\tts = tl._timeScale,\n\t\t\t\t\tt = tween._startTime;\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tt += tl._startTime;\n\t\t\t\t\tts *= tl._timeScale;\n\t\t\t\t\tif (tl._paused) {\n\t\t\t\t\t\treturn -100;\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t\tt /= ts;\n\t\t\t\treturn (t > reference) ? t - reference : ((zeroDur && t === reference) || (!tween._initted && t - reference < 2 * _tinyNum)) ? _tinyNum : ((t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum) ? 0 : t - reference - _tinyNum;\n\t\t\t};\n\n\n//---- TweenLite instance methods -----------------------------------------------------------------------------\n\n\t\tp._init = function() {\n\t\t\tvar v = this.vars,\n\t\t\t\top = this._overwrittenProps,\n\t\t\t\tdur = this._duration,\n\t\t\t\timmediate = !!v.immediateRender,\n\t\t\t\tease = v.ease,\n\t\t\t\tstartAt = this._startAt,\n\t\t\t\ti, initPlugins, pt, p, startVars, l;\n\t\t\tif (v.startAt) {\n\t\t\t\tif (startAt) {\n\t\t\t\t\tstartAt.render(-1, true); //if we've run a startAt previously (when the tween instantiated), we should revert it so that the values re-instantiate correctly particularly for relative tweens. Without this, a TweenLite.fromTo(obj, 1, {x:\"+=100\"}, {x:\"-=100\"}), for example, would actually jump to +=200 because the startAt would run twice, doubling the relative change.\n\t\t\t\t\tstartAt.kill();\n\t\t\t\t}\n\t\t\t\tstartVars = {};\n\t\t\t\tfor (p in v.startAt) { //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, 1, from, to).fromTo(e, 1, to, from);\n\t\t\t\t\tstartVars[p] = v.startAt[p];\n\t\t\t\t}\n\t\t\t\tstartVars.data = \"isStart\";\n\t\t\t\tstartVars.overwrite = false;\n\t\t\t\tstartVars.immediateRender = true;\n\t\t\t\tstartVars.lazy = (immediate && v.lazy !== false);\n\t\t\t\tstartVars.startAt = startVars.delay = null; //no nesting of startAt objects allowed (otherwise it could cause an infinite loop).\n\t\t\t\tstartVars.onUpdate = v.onUpdate;\n\t\t\t\tstartVars.onUpdateParams = v.onUpdateParams;\n\t\t\t\tstartVars.onUpdateScope = v.onUpdateScope || v.callbackScope || this;\n\t\t\t\tthis._startAt = TweenLite.to(this.target || {}, 0, startVars);\n\t\t\t\tif (immediate) {\n\t\t\t\t\tif (this._time > 0) {\n\t\t\t\t\t\tthis._startAt = null; //tweens that render immediately (like most from() and fromTo() tweens) shouldn't revert when their parent timeline's playhead goes backward past the startTime because the initial render could have happened anytime and it shouldn't be directly correlated to this tween's startTime. Imagine setting up a complex animation where the beginning states of various objects are rendered immediately but the tween doesn't happen for quite some time - if we revert to the starting values as soon as the playhead goes backward past the tween's startTime, it will throw things off visually. Reversion should only happen in TimelineLite/Max instances where immediateRender was false (which is the default in the convenience methods like from()).\n\t\t\t\t\t} else if (dur !== 0) {\n\t\t\t\t\t\treturn; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a TimelineLite or TimelineMax, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (v.runBackwards && dur !== 0) {\n\t\t\t\t//from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)\n\t\t\t\tif (startAt) {\n\t\t\t\t\tstartAt.render(-1, true);\n\t\t\t\t\tstartAt.kill();\n\t\t\t\t\tthis._startAt = null;\n\t\t\t\t} else {\n\t\t\t\t\tif (this._time !== 0) { //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0\n\t\t\t\t\t\timmediate = false;\n\t\t\t\t\t}\n\t\t\t\t\tpt = {};\n\t\t\t\t\tfor (p in v) { //copy props into a new object and skip any reserved props, otherwise onComplete or onUpdate or onStart could fire. We should, however, permit autoCSS to go through.\n\t\t\t\t\t\tif (!_reservedProps[p] || p === \"autoCSS\") {\n\t\t\t\t\t\t\tpt[p] = v[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt.overwrite = 0;\n\t\t\t\t\tpt.data = \"isFromStart\"; //we tag the tween with as \"isFromStart\" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a \"from()\" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.\n\t\t\t\t\tpt.lazy = (immediate && v.lazy !== false);\n\t\t\t\t\tpt.immediateRender = immediate; //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)\n\t\t\t\t\tthis._startAt = TweenLite.to(this.target, 0, pt);\n\t\t\t\t\tif (!immediate) {\n\t\t\t\t\t\tthis._startAt._init(); //ensures that the initial values are recorded\n\t\t\t\t\t\tthis._startAt._enabled(false); //no need to have the tween render on the next cycle. Disable it because we'll always manually control the renders of the _startAt tween.\n\t\t\t\t\t\tif (this.vars.immediateRender) {\n\t\t\t\t\t\t\tthis._startAt = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this._time === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._ease = ease = (!ease) ? TweenLite.defaultEase : (ease instanceof Ease) ? ease : (typeof(ease) === \"function\") ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n\t\t\tif (v.easeParams instanceof Array && ease.config) {\n\t\t\t\tthis._ease = ease.config.apply(ease, v.easeParams);\n\t\t\t}\n\t\t\tthis._easeType = this._ease._type;\n\t\t\tthis._easePower = this._ease._power;\n\t\t\tthis._firstPT = null;\n\n\t\t\tif (this._targets) {\n\t\t\t\tl = this._targets.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tif ( this._initProps( this._targets[i], (this._propLookup[i] = {}), this._siblings[i], (op ? op[i] : null), i) ) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinitPlugins = this._initProps(this.target, this._propLookup, this._siblings, op, 0);\n\t\t\t}\n\n\t\t\tif (initPlugins) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onInitAllProps\", this); //reorders the array in order of priority. Uses a static TweenPlugin method in order to minimize file size in TweenLite\n\t\t\t}\n\t\t\tif (op) if (!this._firstPT) if (typeof(this.target) !== \"function\") { //if all tweening properties have been overwritten, kill the tween. If the target is a function, it's probably a delayedCall so let it live.\n\t\t\t\tthis._enabled(false, false);\n\t\t\t}\n\t\t\tif (v.runBackwards) {\n\t\t\t\tpt = this._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tpt.s += pt.c;\n\t\t\t\t\tpt.c = -pt.c;\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onUpdate = v.onUpdate;\n\t\t\tthis._initted = true;\n\t\t};\n\n\t\tp._initProps = function(target, propLookup, siblings, overwrittenProps, index) {\n\t\t\tvar p, i, initPlugins, plugin, pt, v;\n\t\t\tif (target == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (_lazyLookup[target._gsTweenID]) {\n\t\t\t\t_lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)\n\t\t\t}\n\n\t\t\tif (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) { //it's so common to use TweenLite/Max to animate the css of DOM elements, we assume that if the target is a DOM element, that's what is intended (a convenience so that users don't have to wrap things in css:{}, although we still recommend it for a slight performance boost and better specificity). Note: we cannot check \"nodeType\" on the window inside an iframe.\n\t\t\t\t_autoCSS(this.vars, target);\n\t\t\t}\n\t\t\tfor (p in this.vars) {\n\t\t\t\tv = this.vars[p];\n\t\t\t\tif (_reservedProps[p]) {\n\t\t\t\t\tif (v) if ((v instanceof Array) || (v.push && _isArray(v))) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tthis.vars[p] = v = this._swapSelfInParams(v, this);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this, index)) {\n\n\t\t\t\t\t//t - target \t\t[object]\n\t\t\t\t\t//p - property \t\t[string]\n\t\t\t\t\t//s - start\t\t\t[number]\n\t\t\t\t\t//c - change\t\t[number]\n\t\t\t\t\t//f - isFunction\t[boolean]\n\t\t\t\t\t//n - name\t\t\t[string]\n\t\t\t\t\t//pg - isPlugin \t[boolean]\n\t\t\t\t\t//pr - priority\t\t[number]\n\t\t\t\t\t//m - mod           [function | 0]\n\t\t\t\t\tthis._firstPT = pt = {_next:this._firstPT, t:plugin, p:\"setRatio\", s:0, c:1, f:1, n:p, pg:1, pr:plugin._priority, m:0};\n\t\t\t\t\ti = plugin._overwriteProps.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tpropLookup[plugin._overwriteProps[i]] = this._firstPT;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._priority || plugin._onInitAllProps) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._onDisable || plugin._onEnable) {\n\t\t\t\t\t\tthis._notifyPluginsOfEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tpropLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter, index);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (overwrittenProps) if (this._kill(overwrittenProps, target)) { //another tween may have tried to overwrite properties of this tween before init() was called (like if two tweens start at the same time, the one created second will run first)\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps, index);\n\t\t\t}\n\t\t\tif (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n\t\t\t\tthis._kill(propLookup, target);\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps, index);\n\t\t\t}\n\t\t\tif (this._firstPT) if ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration)) { //zero duration tweens don't lazy render by default; everything else does.\n\t\t\t\t_lazyLookup[target._gsTweenID] = true;\n\t\t\t}\n\t\t\treturn initPlugins;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar self = this,\n\t\t\t\tprevTime = self._time,\n\t\t\t\tduration = self._duration,\n\t\t\t\tprevRawPrevTime = self._rawPrevTime,\n\t\t\t\tisComplete, callback, pt, rawPrevTime;\n\t\t\tif (time >= duration - _tinyNum && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tself._totalTime = self._time = duration;\n\t\t\t\tself.ratio = self._ease._calcEnd ? self._ease.getRatio(1) : 1;\n\t\t\t\tif (!self._reversed ) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tforce = (force || self._timeline.autoRemoveChildren); //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t}\n\t\t\t\tif (duration === 0) if (self._initted || !self.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\tif (self._startTime === self._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (prevRawPrevTime < 0 || (time <= 0 && time >= -_tinyNum) || (prevRawPrevTime === _tinyNum && self.data !== \"isPause\")) if (prevRawPrevTime !== time) { //note: when this.data is \"isPause\", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.\n\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tself._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t}\n\n\t\t\t} else if (time < _tinyNum) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tself._totalTime = self._time = 0;\n\t\t\t\tself.ratio = self._ease._calcEnd ? self._ease.getRatio(0) : 0;\n\t\t\t\tif (prevTime !== 0 || (duration === 0 && prevRawPrevTime > 0)) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = self._reversed;\n\t\t\t\t}\n\t\t\t\tif (time > -_tinyNum) {\n\t\t\t\t\ttime = 0;\n\t\t\t\t} else if (time < 0) {\n\t\t\t\t\tself._active = false;\n\t\t\t\t\tif (duration === 0) if (self._initted || !self.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tif (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && self.data === \"isPause\")) {\n\t\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!self._initted || (self._startAt && self._startAt.progress())) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately. Also, we check progress() because if startAt has already rendered at its end, we should force a render at its beginning. Otherwise, if you put the playhead directly on top of where a fromTo({immediateRender:false}) starts, and then move it backwards, the from() won't revert its values.\n\t\t\t\t\tforce = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself._totalTime = self._time = time;\n\n\t\t\t\tif (self._easeType) {\n\t\t\t\t\tvar r = time / duration, type = self._easeType, pow = self._easePower;\n\t\t\t\t\tif (type === 1 || (type === 3 && r >= 0.5)) {\n\t\t\t\t\t\tr = 1 - r;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tr *= 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (pow === 1) {\n\t\t\t\t\t\tr *= r;\n\t\t\t\t\t} else if (pow === 2) {\n\t\t\t\t\t\tr *= r * r;\n\t\t\t\t\t} else if (pow === 3) {\n\t\t\t\t\t\tr *= r * r * r;\n\t\t\t\t\t} else if (pow === 4) {\n\t\t\t\t\t\tr *= r * r * r * r;\n\t\t\t\t\t}\n\t\t\t\t\tself.ratio = (type === 1) ? 1 - r : (type === 2) ? r : (time / duration < 0.5) ? r / 2 : 1 - (r / 2);\n\t\t\t\t} else {\n\t\t\t\t\tself.ratio = self._ease.getRatio(time / duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (self._time === prevTime && !force) {\n\t\t\t\treturn;\n\t\t\t} else if (!self._initted) {\n\t\t\t\tself._init();\n\t\t\t\tif (!self._initted || self._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!force && self._firstPT && ((self.vars.lazy !== false && self._duration) || (self.vars.lazy && !self._duration))) {\n\t\t\t\t\tself._time = self._totalTime = prevTime;\n\t\t\t\t\tself._rawPrevTime = prevRawPrevTime;\n\t\t\t\t\t_lazyTweens.push(self);\n\t\t\t\t\tself._lazy = [time, suppressEvents];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.\n\t\t\t\tif (self._time && !isComplete) {\n\t\t\t\t\tself.ratio = self._ease.getRatio(self._time / duration);\n\t\t\t\t} else if (isComplete && self._ease._calcEnd) {\n\t\t\t\t\tself.ratio = self._ease.getRatio((self._time === 0) ? 0 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (self._lazy !== false) { //in case a lazy render is pending, we should flush it because the new render is occurring now (imagine a lazy tween instantiating and then immediately the user calls tween.seek(tween.duration()), skipping to the end - the end render would be forced, and then if we didn't flush the lazy render, it'd fire AFTER the seek(), rendering it at the wrong time.\n\t\t\t\tself._lazy = false;\n\t\t\t}\n\t\t\tif (!self._active) if (!self._paused && self._time !== prevTime && time >= 0) {\n\t\t\t\tself._active = true;  //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.\n\t\t\t}\n\t\t\tif (prevTime === 0) {\n\t\t\t\tif (self._startAt) {\n\t\t\t\t\tif (time >= 0) {\n\t\t\t\t\t\tself._startAt.render(time, true, force);\n\t\t\t\t\t} else if (!callback) {\n\t\t\t\t\t\tcallback = \"_dummyGS\"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (self.vars.onStart) if (self._time !== 0 || duration === 0) if (!suppressEvents) {\n\t\t\t\t\tself._callback(\"onStart\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tpt = self._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](pt.c * self.ratio + pt.s);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = pt.c * self.ratio + pt.s;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\n\t\t\tif (self._onUpdate) {\n\t\t\t\tif (time < 0) if (self._startAt && time !== -0.0001) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tself._startAt.render(time, true, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents) if (self._time !== prevTime || isComplete || force) {\n\t\t\t\t\tself._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (callback) if (!self._gc || force) { //check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (time < 0 && self._startAt && !self._onUpdate && time !== -0.0001) { //-0.0001 is a special value that we use when looping back to the beginning of a repeated TimelineMax, in which case we shouldn't render the _startAt values.\n\t\t\t\t\tself._startAt.render(time, true, force);\n\t\t\t\t}\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (self._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tself._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tself._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && self.vars[callback]) {\n\t\t\t\t\tself._callback(callback);\n\t\t\t\t}\n\t\t\t\tif (duration === 0 && self._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the \"time\" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.\n\t\t\t\t\tself._rawPrevTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(vars, target, overwritingTween) {\n\t\t\tif (vars === \"all\") {\n\t\t\t\tvars = null;\n\t\t\t}\n\t\t\tif (vars == null) if (target == null || target === this.target) {\n\t\t\t\tthis._lazy = false;\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\ttarget = (typeof(target) !== \"string\") ? (target || this._targets || this.target) : TweenLite.selector(target) || target;\n\t\t\tvar simultaneousOverwrite = (overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline),\n\t\t\t\tfirstPT = this._firstPT,\n\t\t\t\ti, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (this._kill(vars, target[i], overwritingTween)) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._targets) {\n\t\t\t\t\ti = this._targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (target === this._targets[i]) {\n\t\t\t\t\t\t\tpropLookup = this._propLookup[i] || {};\n\t\t\t\t\t\t\tthis._overwrittenProps = this._overwrittenProps || [];\n\t\t\t\t\t\t\toverwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (target !== this.target) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tpropLookup = this._propLookup;\n\t\t\t\t\toverwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n\t\t\t\t}\n\n\t\t\t\tif (propLookup) {\n\t\t\t\t\tkillProps = vars || propLookup;\n\t\t\t\t\trecord = (vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof(vars) !== \"object\" || !vars._tempKill)); //_tempKill is a super-secret way to delete a particular tweening property but NOT have it remembered as an official overwritten property (like in BezierPlugin)\n\t\t\t\t\tif (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n\t\t\t\t\t\tfor (p in killProps) {\n\t\t\t\t\t\t\tif (propLookup[p]) {\n\t\t\t\t\t\t\t\tif (!killed) {\n\t\t\t\t\t\t\t\t\tkilled = [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkilled.push(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) { //if the onOverwrite returned false, that means the user wants to override the overwriting (cancel it).\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (p in killProps) {\n\t\t\t\t\t\tif ((pt = propLookup[p])) {\n\t\t\t\t\t\t\tif (simultaneousOverwrite) { //if another tween overwrites this one and they both start at exactly the same time, yet this tween has already rendered once (for example, at 0.001) because it's first in the queue, we should revert the values to where they were at 0 so that the starting values aren't contaminated on the overwriting tween.\n\t\t\t\t\t\t\t\tif (pt.f) {\n\t\t\t\t\t\t\t\t\tpt.t[pt.p](pt.s);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpt.t[pt.p] = pt.s;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (pt.pg && pt.t._kill(killProps)) {\n\t\t\t\t\t\t\t\tchanged = true; //some plugins need to be notified so they can perform cleanup tasks first\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!pt.pg || pt.t._overwriteProps.length === 0) {\n\t\t\t\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\t\t\t} else if (pt === this._firstPT) {\n\t\t\t\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpt._next = pt._prev = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete propLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (record) {\n\t\t\t\t\t\t\toverwrittenProps[p] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!this._firstPT && this._initted && firstPT) { //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tif (this._notifyPluginsOfEnabled) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onDisable\", this);\n\t\t\t}\n\t\t\tvar t = this._time;\n\t\t\tthis._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n\t\t\tthis._notifyPluginsOfEnabled = this._active = this._lazy = false;\n\t\t\tthis._propLookup = (this._targets) ? {} : [];\n\t\t\tAnimation.prototype.invalidate.call(this);\n\t\t\tif (this.vars.immediateRender) {\n\t\t\t\tthis._time = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n\t\t\t\tthis.render(t, false, this.vars.lazy !== false);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (enabled && this._gc) {\n\t\t\t\tvar targets = this._targets,\n\t\t\t\t\ti;\n\t\t\t\tif (targets) {\n\t\t\t\t\ti = targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tthis._siblings[i] = _register(targets[i], this, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._siblings = _register(this.target, this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tAnimation.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t\tif (this._notifyPluginsOfEnabled) if (this._firstPT) {\n\t\t\t\treturn TweenLite._onPluginEvent((enabled ? \"_onEnable\" : \"_onDisable\"), this);\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n//----TweenLite static methods -----------------------------------------------------\n\n\t\tTweenLite.to = function(target, duration, vars) {\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.from = function(target, duration, vars) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.fromTo = function(target, duration, fromVars, toVars) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, toVars);\n\t\t};\n\n\t\tTweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t\t\treturn new TweenLite(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, callbackScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, immediateRender:false, lazy:false, useFrames:useFrames, overwrite:0});\n\t\t};\n\n\t\tTweenLite.set = function(target, vars) {\n\t\t\treturn new TweenLite(target, 0, vars);\n\t\t};\n\n\t\tTweenLite.getTweensOf = function(target, onlyActive) {\n\t\t\tif (target == null) { return []; }\n\t\t\ttarget = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\t\t\tvar i, a, j, t;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\ta = [];\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\ta = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n\t\t\t\t}\n\t\t\t\ti = a.length;\n\t\t\t\t//now get rid of any duplicates (tweens of arrays of objects could cause duplicates)\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tt = a[i];\n\t\t\t\t\tj = i;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\tif (t === a[j]) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (target._gsTweenID) {\n\t\t\t\ta = _register(target).concat();\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (a[i]._gc || (onlyActive && !a[i].isActive())) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a || [];\n\t\t};\n\n\t\tTweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n\t\t\tif (typeof(onlyActive) === \"object\") {\n\t\t\t\tvars = onlyActive; //for backwards compatibility (before \"onlyActive\" parameter was inserted)\n\t\t\t\tonlyActive = false;\n\t\t\t}\n\t\t\tvar a = TweenLite.getTweensOf(target, onlyActive),\n\t\t\t\ti = a.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\ta[i]._kill(vars, target);\n\t\t\t}\n\t\t};\n\n\n\n/*\n * ----------------------------------------------------------------\n * TweenPlugin   (could easily be split out as a separate file/class, but included for ease of use (so that people don't need to include another script call before loading plugins which is easy to forget)\n * ----------------------------------------------------------------\n */\n\t\tvar TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n\t\t\t\t\tthis._overwriteProps = (props || \"\").split(\",\");\n\t\t\t\t\tthis._propName = this._overwriteProps[0];\n\t\t\t\t\tthis._priority = priority || 0;\n\t\t\t\t\tthis._super = TweenPlugin.prototype;\n\t\t\t\t}, true);\n\n\t\tp = TweenPlugin.prototype;\n\t\tTweenPlugin.version = \"1.19.0\";\n\t\tTweenPlugin.API = 2;\n\t\tp._firstPT = null;\n\t\tp._addTween = _addPropTween;\n\t\tp.setRatio = _setRatio;\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._overwriteProps,\n\t\t\t\tpt = this._firstPT,\n\t\t\t\ti;\n\t\t\tif (lookup[this._propName] != null) {\n\t\t\t\tthis._overwriteProps = [];\n\t\t\t} else {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i]] != null) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (lookup[pt.n] != null) {\n\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t}\n\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\tpt._prev = null;\n\t\t\t\t\t} else if (this._firstPT === pt) {\n\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp._mod = p._roundProps = function(lookup) {\n\t\t\tvar pt = this._firstPT,\n\t\t\t\tval;\n\t\t\twhile (pt) {\n\t\t\t\tval = lookup[this._propName] || (pt.n != null && lookup[ pt.n.split(this._propName + \"_\").join(\"\") ]);\n\t\t\t\tif (val && typeof(val) === \"function\") { //some properties that are very plugin-specific add a prefix named after the _propName plus an underscore, so we need to ignore that extra stuff here.\n\t\t\t\t\tif (pt.f === 2) {\n\t\t\t\t\t\tpt.t._applyPT.m = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.m = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t};\n\n\t\tTweenLite._onPluginEvent = function(type, tween) {\n\t\t\tvar pt = tween._firstPT,\n\t\t\t\tchanged, pt2, first, last, next;\n\t\t\tif (type === \"_onInitAllProps\") {\n\t\t\t\t//sorts the PropTween linked list in order of priority because some plugins need to render earlier/later than others, like MotionBlurPlugin applies its effects after all x/y/alpha tweens have rendered on each frame.\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next;\n\t\t\t\t\tpt2 = first;\n\t\t\t\t\twhile (pt2 && pt2.pr > pt.pr) {\n\t\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._prev = pt2 ? pt2._prev : last)) {\n\t\t\t\t\t\tpt._prev._next = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst = pt;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._next = pt2)) {\n\t\t\t\t\t\tpt2._prev = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast = pt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t\tpt = tween._firstPT = first;\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.pg) if (typeof(pt.t[type]) === \"function\") if (pt.t[type]()) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tTweenPlugin.activate = function(plugins) {\n\t\t\tvar i = plugins.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (plugins[i].API === TweenPlugin.API) {\n\t\t\t\t\t_plugins[(new plugins[i]())._propName] = plugins[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t//provides a more concise way to define plugins that have no dependencies besides TweenPlugin and TweenLite, wrapping common boilerplate stuff into one function (added in 1.9.0). You don't NEED to use this to define a plugin - the old way still works and can be useful in certain (rare) situations.\n\t\t_gsDefine.plugin = function(config) {\n\t\t\tif (!config || !config.propName || !config.init || !config.API) { throw \"illegal plugin definition.\"; }\n\t\t\tvar propName = config.propName,\n\t\t\t\tpriority = config.priority || 0,\n\t\t\t\toverwriteProps = config.overwriteProps,\n\t\t\t\tmap = {init:\"_onInitTween\", set:\"setRatio\", kill:\"_kill\", round:\"_mod\", mod:\"_mod\", initAll:\"_onInitAllProps\"},\n\t\t\t\tPlugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\",\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tTweenPlugin.call(this, propName, priority);\n\t\t\t\t\t\tthis._overwriteProps = overwriteProps || [];\n\t\t\t\t\t}, (config.global === true)),\n\t\t\t\tp = Plugin.prototype = new TweenPlugin(propName),\n\t\t\t\tprop;\n\t\t\tp.constructor = Plugin;\n\t\t\tPlugin.API = config.API;\n\t\t\tfor (prop in map) {\n\t\t\t\tif (typeof(config[prop]) === \"function\") {\n\t\t\t\t\tp[map[prop]] = config[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\tPlugin.version = config.version;\n\t\t\tTweenPlugin.activate([Plugin]);\n\t\t\treturn Plugin;\n\t\t};\n\n\n\t\t//now run through all the dependencies discovered and if any are missing, log that to the console as a warning. This is why it's best to have TweenLite load last - it can check all the dependencies for you.\n\t\ta = window._gsQueue;\n\t\tif (a) {\n\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\ta[i]();\n\t\t\t}\n\t\t\tfor (p in _defLookup) {\n\t\t\t\tif (!_defLookup[p].func) {\n\t\t\t\t\twindow.console.log(\"GSAP encountered missing dependency: \" + p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_tickerActive = false; //ensures that the first official animation forces a ticker.tick() to update the time when it is instantiated\n\n\t\treturn TweenLite;\n\n})(_gsScope, \"TweenLite\");\n\nexport var globals = _gsScope.GreenSockGlobals;\nvar nonGlobals = globals.com.greensock;\nexport { TweenLite as default };\nexport var SimpleTimeline = nonGlobals.core.SimpleTimeline;\nexport var Animation = nonGlobals.core.Animation;\nexport var Ease = globals.Ease;\nexport var Linear = globals.Linear;\nexport var Power0 = Linear;\nexport var Power1 = globals.Power1;\nexport var Power2 = globals.Power2;\nexport var Power3 = globals.Power3;\nexport var Power4 = globals.Power4;\nexport var TweenPlugin = globals.TweenPlugin;\nexport var EventDispatcher = nonGlobals.events.EventDispatcher;\n","/*!\n * VERSION: 2.1.3\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\n\nimport TweenLite, { _gsScope, globals, Animation, SimpleTimeline, Ease, Power0, Power1, Power2, Power3, Power4, Linear  } from \"./TweenLite.js\";\n\n\n_gsScope._gsDefine(\"TweenMax\", [\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"], function() {\n\n\t\tvar _slice = function(a) { //don't use [].slice because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\tvar b = [],\n\t\t\t\t\tl = a.length,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 0; i !== l; b.push(a[i++]));\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\t_applyCycle = function(vars, targets, i) {\n\t\t\t\tvar alt = vars.cycle,\n\t\t\t\t\tp, val;\n\t\t\t\tfor (p in alt) {\n\t\t\t\t\tval = alt[p];\n\t\t\t\t\tvars[p] = (typeof(val) === \"function\") ? val(i, targets[i], targets) : val[i % val.length];\n\t\t\t\t}\n\t\t\t\tdelete vars.cycle;\n\t\t\t},\n\t\t\t//for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following\n\t\t\t_distribute = function(v) {\n\t\t\t\tif (typeof(v) === \"function\") {\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tvar vars = (typeof(v) === \"object\") ? v : {each:v}, //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total \"amount\" that's chunked out among them all.\n\t\t\t\t\tease = vars.ease,\n\t\t\t\t\tfrom = vars.from || 0,\n\t\t\t\t\tbase = vars.base || 0,\n\t\t\t\t\tcache = {},\n\t\t\t\t\tisFromKeyword = isNaN(from),\n\t\t\t\t\taxis = vars.axis,\n\t\t\t\t\tratio = {center:0.5, end:1}[from] || 0;\n\t\t\t\treturn function(i, target, a) {\n\t\t\t\t\tvar l = (a || vars).length,\n\t\t\t\t\t\tdistances = cache[l],\n\t\t\t\t\t\toriginX, originY, x, y, d, j, max, min, wrap;\n\t\t\t\t\tif (!distances) {\n\t\t\t\t\t\twrap = (vars.grid === \"auto\") ? 0 : (vars.grid || [Infinity])[0];\n\t\t\t\t\t\tif (!wrap) {\n\t\t\t\t\t\t\tmax = -Infinity;\n\t\t\t\t\t\t\twhile (max < (max = a[wrap++].getBoundingClientRect().left) && wrap < l) { }\n\t\t\t\t\t\t\twrap--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdistances = cache[l] = [];\n\t\t\t\t\t\toriginX = isFromKeyword ? (Math.min(wrap, l) * ratio) - 0.5 : from % wrap;\n\t\t\t\t\t\toriginY = isFromKeyword ? l * ratio / wrap - 0.5 : (from / wrap) | 0;\n\t\t\t\t\t\tmax = 0;\n\t\t\t\t\t\tmin = Infinity;\n\t\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\t\tx = (j % wrap) - originX;\n\t\t\t\t\t\t\ty = originY - ((j / wrap) | 0);\n\t\t\t\t\t\t\tdistances[j] = d = !axis ? Math.sqrt(x * x + y * y) : Math.abs((axis === \"y\") ? y : x);\n\t\t\t\t\t\t\tif (d > max) {\n\t\t\t\t\t\t\t\tmax = d;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (d < min) {\n\t\t\t\t\t\t\t\tmin = d;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdistances.max = max - min;\n\t\t\t\t\t\tdistances.min = min;\n\t\t\t\t\t\tdistances.v = l = vars.amount || (vars.each * (wrap > l ? l - 1 : !axis ? Math.max(wrap, l / wrap) : axis === \"y\" ? l / wrap : wrap)) || 0;\n\t\t\t\t\t\tdistances.b = (l < 0) ? base - l : base;\n\t\t\t\t\t}\n\t\t\t\t\tl = (distances[i] - distances.min) / distances.max;\n\t\t\t\t\treturn distances.b + (ease ? ease.getRatio(l) : l) * distances.v;\n\t\t\t\t};\n\t\t\t},\n\t\t\tTweenMax = function(target, duration, vars) {\n\t\t\t\tTweenLite.call(this, target, duration, vars);\n\t\t\t\tthis._cycle = 0;\n\t\t\t\tthis._yoyo = (this.vars.yoyo === true || !!this.vars.yoyoEase);\n\t\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\t\tif (this._repeat) {\n\t\t\t\t\tthis._uncache(true); //ensures that if there is any repeat, the totalDuration will get recalculated to accurately report it.\n\t\t\t\t}\n\t\t\t\tthis.render = TweenMax.prototype.render; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\t\t\t},\n\t\t\t_tinyNum = 0.00000001,\n\t\t\tTweenLiteInternals = TweenLite._internals,\n\t\t\t_isSelector = TweenLiteInternals.isSelector,\n\t\t\t_isArray = TweenLiteInternals.isArray,\n\t\t\tp = TweenMax.prototype = TweenLite.to({}, 0.1, {}),\n\t\t\t_blankArray = [];\n\n\t\tTweenMax.version = \"2.1.3\";\n\t\tp.constructor = TweenMax;\n\t\tp.kill()._gc = false;\n\t\tTweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n\t\tTweenMax.getTweensOf = TweenLite.getTweensOf;\n\t\tTweenMax.lagSmoothing = TweenLite.lagSmoothing;\n\t\tTweenMax.ticker = TweenLite.ticker;\n\t\tTweenMax.render = TweenLite.render;\n\t\tTweenMax.distribute = _distribute;\n\n\t\tp.invalidate = function() {\n\t\t\tthis._yoyo = (this.vars.yoyo === true || !!this.vars.yoyoEase);\n\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\tthis._yoyoEase = null;\n\t\t\tthis._uncache(true);\n\t\t\treturn TweenLite.prototype.invalidate.call(this);\n\t\t};\n\n\t\tp.updateTo = function(vars, resetDuration) {\n\t\t\tvar self = this,\n\t\t\t\tcurRatio = self.ratio,\n\t\t\t\timmediate = self.vars.immediateRender || vars.immediateRender,\n\t\t\t\tp;\n\t\t\tif (resetDuration && self._startTime < self._timeline._time) {\n\t\t\t\tself._startTime = self._timeline._time;\n\t\t\t\tself._uncache(false);\n\t\t\t\tif (self._gc) {\n\t\t\t\t\tself._enabled(true, false);\n\t\t\t\t} else {\n\t\t\t\t\tself._timeline.insert(self, self._startTime - self._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (p in vars) {\n\t\t\t\tself.vars[p] = vars[p];\n\t\t\t}\n\t\t\tif (self._initted || immediate) {\n\t\t\t\tif (resetDuration) {\n\t\t\t\t\tself._initted = false;\n\t\t\t\t\tif (immediate) {\n\t\t\t\t\t\tself.render(0, true, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (self._gc) {\n\t\t\t\t\t\tself._enabled(true, false);\n\t\t\t\t\t}\n\t\t\t\t\tif (self._notifyPluginsOfEnabled && self._firstPT) {\n\t\t\t\t\t\tTweenLite._onPluginEvent(\"_onDisable\", self); //in case a plugin like MotionBlur must perform some cleanup tasks\n\t\t\t\t\t}\n\t\t\t\t\tif (self._time / self._duration > 0.998) { //if the tween has finished (or come extremely close to finishing), we just need to rewind it to 0 and then render it again at the end which forces it to re-initialize (parsing the new vars). We allow tweens that are close to finishing (but haven't quite finished) to work this way too because otherwise, the values are so small when determining where to project the starting values that binary math issues creep in and can make the tween appear to render incorrectly when run backwards.\n\t\t\t\t\t\tvar prevTime = self._totalTime;\n\t\t\t\t\t\tself.render(0, true, false);\n\t\t\t\t\t\tself._initted = false;\n\t\t\t\t\t\tself.render(prevTime, true, false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself._initted = false;\n\t\t\t\t\t\tself._init();\n\t\t\t\t\t\tif (self._time > 0 || immediate) {\n\t\t\t\t\t\t\tvar inv = 1 / (1 - curRatio),\n\t\t\t\t\t\t\t\tpt = self._firstPT, endValue;\n\t\t\t\t\t\t\twhile (pt) {\n\t\t\t\t\t\t\t\tendValue = pt.s + pt.c;\n\t\t\t\t\t\t\t\tpt.c *= inv;\n\t\t\t\t\t\t\t\tpt.s = endValue - pt.c;\n\t\t\t\t\t\t\t\tpt = pt._next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (!this._initted) if (this._duration === 0 && this.vars.repeat) { //zero duration tweens that render immediately have render() called from TweenLite's constructor, before TweenMax's constructor has finished setting _repeat, _repeatDelay, and _yoyo which are critical in determining totalDuration() so we need to call invalidate() which is a low-kb way to get those set properly.\n\t\t\t\tthis.invalidate();\n\t\t\t}\n\t\t\tvar self = this,\n\t\t\t\ttotalDur = (!self._dirty) ? self._totalDuration : self.totalDuration(),\n\t\t\t\tprevTime = self._time,\n\t\t\t\tprevTotalTime = self._totalTime,\n\t\t\t\tprevCycle = self._cycle,\n\t\t\t\tduration = self._duration,\n\t\t\t\tprevRawPrevTime = self._rawPrevTime,\n\t\t\t\tisComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime, yoyoEase;\n\t\t\tif (time >= totalDur - _tinyNum && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tself._totalTime = totalDur;\n\t\t\t\tself._cycle = self._repeat;\n\t\t\t\tif (self._yoyo && (self._cycle & 1) !== 0) {\n\t\t\t\t\tself._time = 0;\n\t\t\t\t\tself.ratio = self._ease._calcEnd ? self._ease.getRatio(0) : 0;\n\t\t\t\t} else {\n\t\t\t\t\tself._time = duration;\n\t\t\t\t\tself.ratio = self._ease._calcEnd ? self._ease.getRatio(1) : 1;\n\t\t\t\t}\n\t\t\t\tif (!self._reversed) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tforce = (force || self._timeline.autoRemoveChildren); //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t}\n\t\t\t\tif (duration === 0) if (self._initted || !self.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\tif (self._startTime === self._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (prevRawPrevTime < 0 || (time <= 0 && time >= -_tinyNum) || (prevRawPrevTime === _tinyNum && self.data !== \"isPause\")) if (prevRawPrevTime !== time) { //note: when this.data is \"isPause\", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.\n\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tself._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t}\n\n\t\t\t} else if (time < _tinyNum) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tself._totalTime = self._time = self._cycle = 0;\n\t\t\t\tself.ratio = self._ease._calcEnd ? self._ease.getRatio(0) : 0;\n\t\t\t\tif (prevTotalTime !== 0 || (duration === 0 && prevRawPrevTime > 0)) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = self._reversed;\n\t\t\t\t}\n\t\t\t\tif (time > -_tinyNum) {\n\t\t\t\t\ttime = 0;\n\t\t\t\t} else if (time < 0) {\n\t\t\t\t\tself._active = false;\n\t\t\t\t\tif (duration === 0) if (self._initted || !self.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tif (prevRawPrevTime >= 0) {\n\t\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!self._initted) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n\t\t\t\t\tforce = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself._totalTime = self._time = time;\n\t\t\t\tif (self._repeat !== 0) {\n\t\t\t\t\tcycleDuration = duration + self._repeatDelay;\n\t\t\t\t\tself._cycle = (self._totalTime / cycleDuration) >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)\n\t\t\t\t\tif (self._cycle !== 0) if (self._cycle === self._totalTime / cycleDuration && prevTotalTime <= time) {\n\t\t\t\t\t\tself._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)\n\t\t\t\t\t}\n\t\t\t\t\tself._time = self._totalTime - (self._cycle * cycleDuration);\n\t\t\t\t\tif (self._yoyo) if ((self._cycle & 1) !== 0) {\n\t\t\t\t\t\tself._time = duration - self._time;\n\t\t\t\t\t\tyoyoEase = self._yoyoEase || self.vars.yoyoEase; //note: we don't set this._yoyoEase in _init() like we do other properties because it's TweenMax-specific and doing it here allows us to optimize performance (most tweens don't have a yoyoEase). Note that we also must skip the this.ratio calculation further down right after we _init() in this function, because we're doing it here.\n\t\t\t\t\t\tif (yoyoEase) {\n\t\t\t\t\t\t\tif (!self._yoyoEase) {\n\t\t\t\t\t\t\t\tif (yoyoEase === true && !self._initted) { //if it's not initted and yoyoEase is true, this._ease won't have been populated yet so we must discern it here.\n\t\t\t\t\t\t\t\t\tyoyoEase = self.vars.ease;\n\t\t\t\t\t\t\t\t\tself._yoyoEase = yoyoEase = !yoyoEase ? TweenLite.defaultEase : (yoyoEase instanceof Ease) ? yoyoEase : (typeof(yoyoEase) === \"function\") ? new Ease(yoyoEase, self.vars.easeParams) : Ease.map[yoyoEase] || TweenLite.defaultEase;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tself._yoyoEase = yoyoEase = (yoyoEase === true) ? self._ease : (yoyoEase instanceof Ease) ? yoyoEase : Ease.map[yoyoEase];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tself.ratio = yoyoEase ? 1 - yoyoEase.getRatio((duration - self._time) / duration) : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self._time > duration) {\n\t\t\t\t\t\tself._time = duration;\n\t\t\t\t\t} else if (self._time < 0) {\n\t\t\t\t\t\tself._time = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (self._easeType && !yoyoEase) {\n\t\t\t\t\tr = self._time / duration;\n\t\t\t\t\ttype = self._easeType;\n\t\t\t\t\tpow = self._easePower;\n\t\t\t\t\tif (type === 1 || (type === 3 && r >= 0.5)) {\n\t\t\t\t\t\tr = 1 - r;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tr *= 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (pow === 1) {\n\t\t\t\t\t\tr *= r;\n\t\t\t\t\t} else if (pow === 2) {\n\t\t\t\t\t\tr *= r * r;\n\t\t\t\t\t} else if (pow === 3) {\n\t\t\t\t\t\tr *= r * r * r;\n\t\t\t\t\t} else if (pow === 4) {\n\t\t\t\t\t\tr *= r * r * r * r;\n\t\t\t\t\t}\n\t\t\t\t\tself.ratio = (type === 1) ? 1 - r : (type === 2) ? r : (self._time / duration < 0.5) ? r / 2 : 1 - (r / 2);\n\n\t\t\t\t} else if (!yoyoEase) {\n\t\t\t\t\tself.ratio = self._ease.getRatio(self._time / duration);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (prevTime === self._time && !force && prevCycle === self._cycle) {\n\t\t\t\tif (prevTotalTime !== self._totalTime) if (self._onUpdate) if (!suppressEvents) { //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.\n\t\t\t\t\tself._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (!self._initted) {\n\t\t\t\tself._init();\n\t\t\t\tif (!self._initted || self._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!force && self._firstPT && ((self.vars.lazy !== false && self._duration) || (self.vars.lazy && !self._duration))) { //we stick it in the queue for rendering at the very end of the tick - this is a performance optimization because browsers invalidate styles and force a recalculation if you read, write, and then read style data (so it's better to read/read/read/write/write/write than read/write/read/write/read/write). The down side, of course, is that usually you WANT things to render immediately because you may have code running right after that which depends on the change. Like imagine running TweenLite.set(...) and then immediately after that, creating a nother tween that animates the same property to another value; the starting values of that 2nd tween wouldn't be accurate if lazy is true.\n\t\t\t\t\tself._time = prevTime;\n\t\t\t\t\tself._totalTime = prevTotalTime;\n\t\t\t\t\tself._rawPrevTime = prevRawPrevTime;\n\t\t\t\t\tself._cycle = prevCycle;\n\t\t\t\t\tTweenLiteInternals.lazyTweens.push(self);\n\t\t\t\t\tself._lazy = [time, suppressEvents];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.\n\t\t\t\tif (self._time && !isComplete && !yoyoEase) {\n\t\t\t\t\tself.ratio = self._ease.getRatio(self._time / duration);\n\t\t\t\t} else if (isComplete && this._ease._calcEnd && !yoyoEase) {\n\t\t\t\t\tself.ratio = self._ease.getRatio((self._time === 0) ? 0 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (self._lazy !== false) {\n\t\t\t\tself._lazy = false;\n\t\t\t}\n\n\t\t\tif (!self._active) if (!self._paused && self._time !== prevTime && time >= 0) {\n\t\t\t\tself._active = true; //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.\n\t\t\t}\n\t\t\tif (prevTotalTime === 0) {\n\t\t\t\tif (self._initted === 2 && time > 0) {\n\t\t\t\t\tself._init(); //will just apply overwriting since _initted of (2) means it was a from() tween that had immediateRender:true\n\t\t\t\t}\n\t\t\t\tif (self._startAt) {\n\t\t\t\t\tif (time >= 0) {\n\t\t\t\t\t\tself._startAt.render(time, true, force);\n\t\t\t\t\t} else if (!callback) {\n\t\t\t\t\t\tcallback = \"_dummyGS\"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (self.vars.onStart) if (self._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n\t\t\t\t\tself._callback(\"onStart\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpt = self._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](pt.c * self.ratio + pt.s);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = pt.c * self.ratio + pt.s;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\n\t\t\tif (self._onUpdate) {\n\t\t\t\tif (time < 0) if (self._startAt && self._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tself._startAt.render(time, true, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents) if (self._totalTime !== prevTotalTime || callback) {\n\t\t\t\t\tself._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (self._cycle !== prevCycle) if (!suppressEvents) if (!self._gc) if (self.vars.onRepeat) {\n\t\t\t\tself._callback(\"onRepeat\");\n\t\t\t}\n\t\t\tif (callback) if (!self._gc || force) { //check gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (time < 0 && self._startAt && !self._onUpdate && self._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tself._startAt.render(time, true, force);\n\t\t\t\t}\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (self._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tself._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tself._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && self.vars[callback]) {\n\t\t\t\t\tself._callback(callback);\n\t\t\t\t}\n\t\t\t\tif (duration === 0 && self._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the \"time\" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.\n\t\t\t\t\tself._rawPrevTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n//---- STATIC FUNCTIONS -----------------------------------------------------------------------------------------------------------\n\n\t\tTweenMax.to = function(target, duration, vars) {\n\t\t\treturn new TweenMax(target, duration, vars);\n\t\t};\n\n\t\tTweenMax.from = function(target, duration, vars) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn new TweenMax(target, duration, vars);\n\t\t};\n\n\t\tTweenMax.fromTo = function(target, duration, fromVars, toVars) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn new TweenMax(target, duration, toVars);\n\t\t};\n\n\t\tTweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvar a = [],\n\t\t\t\tstaggerFunc = _distribute(vars.stagger || stagger),\n\t\t\t\tcycle = vars.cycle,\n\t\t\t\tfromCycle = (vars.startAt || _blankArray).cycle,\n\t\t\t\tl, copy, i, p;\n\t\t\tif (!_isArray(targets)) {\n\t\t\t\tif (typeof(targets) === \"string\") {\n\t\t\t\t\ttargets = TweenLite.selector(targets) || targets;\n\t\t\t\t}\n\t\t\t\tif (_isSelector(targets)) {\n\t\t\t\t\ttargets = _slice(targets);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttargets = targets || [];\n\t\t\tl = targets.length - 1;\n\t\t\tfor (i = 0; i <= l; i++) {\n\t\t\t\tcopy = {};\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tcopy[p] = vars[p];\n\t\t\t\t}\n\t\t\t\tif (cycle) {\n\t\t\t\t\t_applyCycle(copy, targets, i);\n\t\t\t\t\tif (copy.duration != null) {\n\t\t\t\t\t\tduration = copy.duration;\n\t\t\t\t\t\tdelete copy.duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromCycle) {\n\t\t\t\t\tfromCycle = copy.startAt = {};\n\t\t\t\t\tfor (p in vars.startAt) {\n\t\t\t\t\t\tfromCycle[p] = vars.startAt[p];\n\t\t\t\t\t}\n\t\t\t\t\t_applyCycle(copy.startAt, targets, i);\n\t\t\t\t}\n\t\t\t\tcopy.delay = staggerFunc(i, targets[i], targets) + (copy.delay || 0);\n\t\t\t\tif (i === l && onCompleteAll) {\n\t\t\t\t\tcopy.onComplete = function() {\n\t\t\t\t\t\tif (vars.onComplete) {\n\t\t\t\t\t\t\tvars.onComplete.apply(vars.onCompleteScope || this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\ta[i] = new TweenMax(targets[i], duration, copy);\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tTweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tTweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tTweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t\t\treturn new TweenMax(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, callbackScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, immediateRender:false, useFrames:useFrames, overwrite:0});\n\t\t};\n\n\t\tTweenMax.set = function(target, vars) {\n\t\t\treturn new TweenMax(target, 0, vars);\n\t\t};\n\n\t\tTweenMax.isTweening = function(target) {\n\t\t\treturn (TweenLite.getTweensOf(target, true).length > 0);\n\t\t};\n\n\t\tvar _getChildrenOf = function(timeline, includeTimelines) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tcnt = 0,\n\t\t\t\t\ttween = timeline._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tif (tween instanceof TweenLite) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (includeTimelines) {\n\t\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ta = a.concat(_getChildrenOf(tween, includeTimelines));\n\t\t\t\t\t\tcnt = a.length;\n\t\t\t\t\t}\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\tgetAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n\t\t\t\treturn _getChildrenOf(Animation._rootTimeline, includeTimelines).concat( _getChildrenOf(Animation._rootFramesTimeline, includeTimelines) );\n\t\t\t};\n\n\t\tTweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n\t\t\tif (tweens == null) {\n\t\t\t\ttweens = true;\n\t\t\t}\n\t\t\tif (delayedCalls == null) {\n\t\t\t\tdelayedCalls = true;\n\t\t\t}\n\t\t\tvar a = getAllTweens((timelines != false)),\n\t\t\t\tl = a.length,\n\t\t\t\tallTrue = (tweens && delayedCalls && timelines),\n\t\t\t\tisDC, tween, i;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\ttween = a[i];\n\t\t\t\tif (allTrue || (tween instanceof SimpleTimeline) || ((isDC = (tween.target === tween.vars.onComplete)) && delayedCalls) || (tweens && !isDC)) {\n\t\t\t\t\tif (complete) {\n\t\t\t\t\t\ttween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tTweenMax.killChildTweensOf = function(parent, complete) {\n\t\t\tif (parent == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar tl = TweenLiteInternals.tweenLookup,\n\t\t\t\ta, curParent, p, i, l;\n\t\t\tif (typeof(parent) === \"string\") {\n\t\t\t\tparent = TweenLite.selector(parent) || parent;\n\t\t\t}\n\t\t\tif (_isSelector(parent)) {\n\t\t\t\tparent = _slice(parent);\n\t\t\t}\n\t\t\tif (_isArray(parent)) {\n\t\t\t\ti = parent.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tTweenMax.killChildTweensOf(parent[i], complete);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ta = [];\n\t\t\tfor (p in tl) {\n\t\t\t\tcurParent = tl[p].target.parentNode;\n\t\t\t\twhile (curParent) {\n\t\t\t\t\tif (curParent === parent) {\n\t\t\t\t\t\ta = a.concat(tl[p].tweens);\n\t\t\t\t\t}\n\t\t\t\t\tcurParent = curParent.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tl = a.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (complete) {\n\t\t\t\t\ta[i].totalTime(a[i].totalDuration());\n\t\t\t\t}\n\t\t\t\ta[i]._enabled(false, false);\n\t\t\t}\n\t\t};\n\n\t\tvar _changePause = function(pause, tweens, delayedCalls, timelines) {\n\t\t\ttweens = (tweens !== false);\n\t\t\tdelayedCalls = (delayedCalls !== false);\n\t\t\ttimelines = (timelines !== false);\n\t\t\tvar a = getAllTweens(timelines),\n\t\t\t\tallTrue = (tweens && delayedCalls && timelines),\n\t\t\t\ti = a.length,\n\t\t\t\tisDC, tween;\n\t\t\twhile (--i > -1) {\n\t\t\t\ttween = a[i];\n\t\t\t\tif (allTrue || (tween instanceof SimpleTimeline) || ((isDC = (tween.target === tween.vars.onComplete)) && delayedCalls) || (tweens && !isDC)) {\n\t\t\t\t\ttween.paused(pause);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tTweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n\t\t\t_changePause(true, tweens, delayedCalls, timelines);\n\t\t};\n\n\t\tTweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n\t\t\t_changePause(false, tweens, delayedCalls, timelines);\n\t\t};\n\n\t\tTweenMax.globalTimeScale = function(value) {\n\t\t\tvar tl = Animation._rootTimeline,\n\t\t\t\tt = TweenLite.ticker.time;\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn tl._timeScale;\n\t\t\t}\n\t\t\tvalue = value || _tinyNum; //can't allow zero because it'll throw the math off\n\t\t\ttl._startTime = t - ((t - tl._startTime) * tl._timeScale / value);\n\t\t\ttl = Animation._rootFramesTimeline;\n\t\t\tt = TweenLite.ticker.frame;\n\t\t\ttl._startTime = t - ((t - tl._startTime) * tl._timeScale / value);\n\t\t\ttl._timeScale = Animation._rootTimeline._timeScale = value;\n\t\t\treturn value;\n\t\t};\n\n\n//---- GETTERS / SETTERS ----------------------------------------------------------------------------------------------------------\n\n\t\tp.progress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? (this.duration() ? this._time / this._duration : this.ratio) : this.totalTime( this.duration() * ((this._yoyo && (this._cycle & 1) !== 0) ? 1 - value : value) + (this._cycle * (this._duration + this._repeatDelay)), suppressEvents);\n\t\t};\n\n\t\tp.totalProgress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? this._totalTime / this.totalDuration() : this.totalTime( this.totalDuration() * value, suppressEvents);\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\tvar duration = this._duration,\n\t\t\t\tcycle = this._cycle,\n\t\t\t\tcycleDur = cycle * (duration + this._repeatDelay);\n\t\t\tif (value > duration) {\n\t\t\t\tvalue = duration;\n\t\t\t}\n\t\t\treturn this.totalTime((this._yoyo && (cycle & 1)) ? duration - value + cycleDur : this._repeat ? value + cycleDur : value, suppressEvents);\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._duration; //don't set _dirty = false because there could be repeats that haven't been factored into the _totalDuration yet. Otherwise, if you create a repeated TweenMax and then immediately check its duration(), it would cache the value and the totalDuration would not be correct, thus repeats wouldn't take effect.\n\t\t\t}\n\t\t\treturn Animation.prototype.duration.call(this, value);\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\t//instead of Infinity, we use 999999999999 so that we can accommodate reverses\n\t\t\t\t\tthis._totalDuration = (this._repeat === -1) ? 999999999999 : this._duration * (this._repeat + 1) + (this._repeatDelay * this._repeat);\n\t\t\t\t\tthis._dirty = false;\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (this._repeat === -1) ? this : this.duration( (value - (this._repeat * this._repeatDelay)) / (this._repeat + 1) );\n\t\t};\n\n\t\tp.repeat = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeat;\n\t\t\t}\n\t\t\tthis._repeat = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.repeatDelay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeatDelay;\n\t\t\t}\n\t\t\tthis._repeatDelay = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.yoyo = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._yoyo;\n\t\t\t}\n\t\t\tthis._yoyo = value;\n\t\t\treturn this;\n\t\t};\n\n\n\t\treturn TweenMax;\n\n\t}, true);\n\nexport var TweenMax = globals.TweenMax;\nexport var TweenMaxBase = TweenMax;\nexport { TweenMax as default };\nexport { TweenLite, Ease, Power0, Power1, Power2, Power3, Power4, Linear };\n","/*!\n * VERSION: 2.1.3\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n/* eslint-disable */\n\nimport TweenLite, { _gsScope, globals, TweenPlugin } from \"./TweenLite.js\";\n\n\t_gsScope._gsDefine(\"plugins.CSSPlugin\", [\"plugins.TweenPlugin\",\"TweenLite\"], function() {\n\n\t\t/** @constructor **/\n\t\tvar CSSPlugin = function() {\n\t\t\t\tTweenPlugin.call(this, \"css\");\n\t\t\t\tthis._overwriteProps.length = 0;\n\t\t\t\tthis.setRatio = CSSPlugin.prototype.setRatio; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\t\t\t},\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\t_hasPriority, //turns true whenever a CSSPropTween instance is created that has a priority other than 0. This helps us discern whether or not we should spend the time organizing the linked list or not after a CSSPlugin's _onInitTween() method is called.\n\t\t\t_suffixMap, //we set this in _onInitTween() each time as a way to have a persistent variable we can use in other methods like _parse() without having to pass it around as a parameter and we keep _parse() decoupled from a particular CSSPlugin instance\n\t\t\t_cs, //computed style (we store this in a shared variable to conserve memory and make minification tighter\n\t\t\t_overwriteProps, //alias to the currently instantiating CSSPlugin's _overwriteProps array. We use this closure in order to avoid having to pass a reference around from method to method and aid in minification.\n\t\t\t_specialProps = {},\n\t\t\tp = CSSPlugin.prototype = new TweenPlugin(\"css\");\n\n\t\tp.constructor = CSSPlugin;\n\t\tCSSPlugin.version = \"2.1.3\";\n\t\tCSSPlugin.API = 2;\n\t\tCSSPlugin.defaultTransformPerspective = 0;\n\t\tCSSPlugin.defaultSkewType = \"compensated\";\n\t\tCSSPlugin.defaultSmoothOrigin = true;\n\t\tp = \"px\"; //we'll reuse the \"p\" variable to keep file size down\n\t\tCSSPlugin.suffixMap = {top:p, right:p, bottom:p, left:p, width:p, height:p, fontSize:p, padding:p, margin:p, perspective:p, lineHeight:\"\"};\n\n\n\t\tvar _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g,\n\t\t\t_relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g,\n\t\t\t_valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, //finds all the values that begin with numbers or += or -= and then a number. Includes suffixes. We use this to split complex values apart like \"1px 5px 20px rgb(255,102,51)\"\n\t\t\t_valuesExpWithCommas = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b),?/gi, //finds all the values that begin with numbers or += or -= and then a number. Includes suffixes. We use this to split complex values apart like \"1px 5px 20px rgb(255,102,51)\"\n\t\t\t_NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, //also allows scientific notation and doesn't kill the leading -/+ in -= and +=\n\t\t\t_suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g,\n\t\t\t_opacityExp = /opacity *= *([^)]*)/i,\n\t\t\t_opacityValExp = /opacity:([^;]*)/i,\n\t\t\t_alphaFilterExp = /alpha\\(opacity *=.+?\\)/i,\n\t\t\t_rgbhslExp = /^(rgb|hsl)/,\n\t\t\t_capsExp = /([A-Z])/g,\n\t\t\t_camelExp = /-([a-z])/gi,\n\t\t\t_urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, //for pulling out urls from url(...) or url(\"...\") strings (some browsers wrap urls in quotes, some don't when reporting things like backgroundImage)\n\t\t\t_camelFunc = function(s, g) { return g.toUpperCase(); },\n\t\t\t_horizExp = /(?:Left|Right|Width)/i,\n\t\t\t_ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi,\n\t\t\t_ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i,\n\t\t\t_commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, //finds any commas that are not within parenthesis\n\t\t\t_complexExp = /[\\s,\\(]/i, //for testing a string to find if it has a space, comma, or open parenthesis (clues that it's a complex value)\n\t\t\t_DEG2RAD = Math.PI / 180,\n\t\t\t_RAD2DEG = 180 / Math.PI,\n\t\t\t_forcePT = {},\n\t\t\t_dummyElement = {style:{}},\n\t\t\t_doc = _gsScope.document || {createElement: function() {return _dummyElement;}},\n\t\t\t_createElement = function(type, ns) {\n\t\t\t\tvar e = _doc.createElementNS ? _doc.createElementNS(ns || \"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n\t\t\t\treturn e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://greensock.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n\t\t\t},\n\t\t\t_tempDiv = _createElement(\"div\"),\n\t\t\t_tempImg = _createElement(\"img\"),\n\t\t\t_internals = CSSPlugin._internals = {_specialProps:_specialProps}, //provides a hook to a few internal methods that we need to access from inside other plugins\n\t\t\t_agent = (_gsScope.navigator || {}).userAgent || \"\",\n\t\t\t_autoRound,\n\t\t\t_reqSafariFix, //we won't apply the Safari transform fix until we actually come across a tween that affects a transform property (to maintain best performance).\n\n\t\t\t_isSafari,\n\t\t\t_isFirefox, //Firefox has a bug that causes 3D transformed elements to randomly disappear unless a repaint is forced after each update on each element.\n\t\t\t_isSafariLT6, //Safari (and Android 4 which uses a flavor of Safari) has a bug that prevents changes to \"top\" and \"left\" properties from rendering properly if changed on the same frame as a transform UNLESS we set the element's WebkitBackfaceVisibility to hidden (weird, I know). Doing this for Android 3 and earlier seems to actually cause other problems, though (fun!)\n\t\t\t_ieVers,\n\t\t\t_supportsOpacity = (function() { //we set _isSafari, _ieVers, _isFirefox, and _supportsOpacity all in one function here to reduce file size slightly, especially in the minified version.\n\t\t\t\tvar i = _agent.indexOf(\"Android\"),\n\t\t\t\t\ta = _createElement(\"a\");\n\t\t\t\t_isSafari = (_agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || parseFloat(_agent.substr(i+8, 2)) > 3));\n\t\t\t\t_isSafariLT6 = (_isSafari && (parseFloat(_agent.substr(_agent.indexOf(\"Version/\")+8, 2)) < 6));\n\t\t\t\t_isFirefox = (_agent.indexOf(\"Firefox\") !== -1);\n\t\t\t\tif ((/MSIE ([0-9]{1,}[\\.0-9]{0,})/).exec(_agent) || (/Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/).exec(_agent)) {\n\t\t\t\t\t_ieVers = parseFloat( RegExp.$1 );\n\t\t\t\t}\n\t\t\t\tif (!a) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ta.style.cssText = \"top:1px;opacity:.55;\";\n\t\t\t\treturn /^0.55/.test(a.style.opacity);\n\t\t\t}()),\n\t\t\t_getIEOpacity = function(v) {\n\t\t\t\treturn (_opacityExp.test( ((typeof(v) === \"string\") ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ) ? ( parseFloat( RegExp.$1 ) / 100 ) : 1);\n\t\t\t},\n\t\t\t_log = function(s) {//for logging messages, but in a way that won't throw errors in old versions of IE.\n\t\t\t\tif (_gsScope.console) {\n\t\t\t\t\tconsole.log(s);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_target, //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params\n\t\t\t_index, //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params\n\n\t\t\t_prefixCSS = \"\", //the non-camelCase vendor prefix like \"-o-\", \"-moz-\", \"-ms-\", or \"-webkit-\"\n\t\t\t_prefix = \"\", //camelCase vendor prefix like \"O\", \"ms\", \"Webkit\", or \"Moz\".\n\n\t\t\t// @private feed in a camelCase property name like \"transform\" and it will check to see if it is valid as-is or if it needs a vendor prefix. It returns the corrected camelCase property name (i.e. \"WebkitTransform\" or \"MozTransform\" or \"transform\" or null if no such property is found, like if the browser is IE8 or before, \"transform\" won't be found at all)\n\t\t\t_checkPropPrefix = function(p, e) {\n\t\t\t\te = e || _tempDiv;\n\t\t\t\tvar s = e.style,\n\t\t\t\t\ta, i;\n\t\t\t\tif (s[p] !== undefined) {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t\tp = p.charAt(0).toUpperCase() + p.substr(1);\n\t\t\t\ta = [\"O\",\"Moz\",\"ms\",\"Ms\",\"Webkit\"];\n\t\t\t\ti = 5;\n\t\t\t\twhile (--i > -1 && s[a[i]+p] === undefined) { }\n\t\t\t\tif (i >= 0) {\n\t\t\t\t\t_prefix = (i === 3) ? \"ms\" : a[i];\n\t\t\t\t\t_prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n\t\t\t\t\treturn _prefix + p;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\t_computedStyleScope = (typeof(window) !== \"undefined\" ? window : _doc.defaultView || {getComputedStyle:function() {}}),\n\t\t\t_getComputedStyle = function(e) {\n\t\t\t\treturn _computedStyleScope.getComputedStyle(e); //to avoid errors in Microsoft Edge, we need to call getComputedStyle() from a specific scope, typically window.\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Returns the css style for a particular property of an element. For example, to get whatever the current \"left\" css value for an element with an ID of \"myElement\", you could do:\n\t\t\t * var currentLeft = CSSPlugin.getStyle( document.getElementById(\"myElement\"), \"left\");\n\t\t\t *\n\t\t\t * @param {!Object} t Target element whose style property you want to query\n\t\t\t * @param {!string} p Property name (like \"left\" or \"top\" or \"marginTop\", etc.)\n\t\t\t * @param {Object=} cs Computed style object. This just provides a way to speed processing if you're going to get several properties on the same element in quick succession - you can reuse the result of the getComputedStyle() call.\n\t\t\t * @param {boolean=} calc If true, the value will not be read directly from the element's \"style\" property (if it exists there), but instead the getComputedStyle() result will be used. This can be useful when you want to ensure that the browser itself is interpreting the value.\n\t\t\t * @param {string=} dflt Default value that should be returned in the place of null, \"none\", \"auto\" or \"auto auto\".\n\t\t\t * @return {?string} The current property value\n\t\t\t */\n\t\t\t_getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n\t\t\t\tvar rv;\n\t\t\t\tif (!_supportsOpacity) if (p === \"opacity\") { //several versions of IE don't use the standard \"opacity\" property - they use things like filter:alpha(opacity=50), so we parse that here.\n\t\t\t\t\treturn _getIEOpacity(t);\n\t\t\t\t}\n\t\t\t\tif (!calc && t.style[p]) {\n\t\t\t\t\trv = t.style[p];\n\t\t\t\t} else if ((cs = cs || _getComputedStyle(t))) {\n\t\t\t\t\trv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t} else if (t.currentStyle) {\n\t\t\t\t\trv = t.currentStyle[p];\n\t\t\t\t}\n\t\t\t\treturn (dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\")) ? dflt : rv;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Pass the target element, the property name, the numeric value, and the suffix (like \"%\", \"em\", \"px\", etc.) and it will spit back the equivalent pixel number.\n\t\t\t * @param {!Object} t Target element\n\t\t\t * @param {!string} p Property name (like \"left\", \"top\", \"marginLeft\", etc.)\n\t\t\t * @param {!number} v Value\n\t\t\t * @param {string=} sfx Suffix (like \"px\" or \"%\" or \"em\")\n\t\t\t * @param {boolean=} recurse If true, the call is a recursive one. In some browsers (like IE7/8), occasionally the value isn't accurately reported initially, but if we run the function again it will take effect.\n\t\t\t * @return {number} value in pixels\n\t\t\t */\n\t\t\t_convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n\t\t\t\tif (sfx === \"px\" || (!sfx && p !== \"lineHeight\")) { return v; }\n\t\t\t\tif (sfx === \"auto\" || !v) { return 0; }\n\t\t\t\tvar horiz = _horizExp.test(p),\n\t\t\t\t\tnode = t,\n\t\t\t\t\tstyle = _tempDiv.style,\n\t\t\t\t\tneg = (v < 0),\n\t\t\t\t\tprecise = (v === 1),\n\t\t\t\t\tpix, cache, time;\n\t\t\t\tif (neg) {\n\t\t\t\t\tv = -v;\n\t\t\t\t}\n\t\t\t\tif (precise) {\n\t\t\t\t\tv *= 100;\n\t\t\t\t}\n\t\t\t\tif (p === \"lineHeight\" && !sfx) { //special case of when a simple lineHeight (without a unit) is used. Set it to the value, read back the computed value, and then revert.\n\t\t\t\t\tcache = _getComputedStyle(t).lineHeight;\n\t\t\t\t\tt.style.lineHeight = v;\n\t\t\t\t\tpix = parseFloat(_getComputedStyle(t).lineHeight);\n\t\t\t\t\tt.style.lineHeight = cache;\n\t\t\t\t} else if (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n\t\t\t\t\tpix = (v / 100) * (horiz ? t.clientWidth : t.clientHeight);\n\t\t\t\t} else {\n\t\t\t\t\tstyle.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n\t\t\t\t\tif (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n\t\t\t\t\t\tnode = t.parentNode || _doc.body;\n\t\t\t\t\t\tif (_getStyle(node, \"display\").indexOf(\"flex\") !== -1) { //Edge and IE11 have a bug that causes offsetWidth to report as 0 if the container has display:flex and the child is position:relative. Switching to position: absolute solves it.\n\t\t\t\t\t\t\tstyle.position = \"absolute\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcache = node._gsCache;\n\t\t\t\t\t\ttime = TweenLite.ticker.frame;\n\t\t\t\t\t\tif (cache && horiz && cache.time === time) { //performance optimization: we record the width of elements along with the ticker frame so that we can quickly get it again on the same tick (seems relatively safe to assume it wouldn't change on the same tick)\n\t\t\t\t\t\t\treturn cache.width * v / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle[(horiz ? \"width\" : \"height\")] = v + sfx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle[(horiz ? \"borderLeftWidth\" : \"borderTopWidth\")] = v + sfx;\n\t\t\t\t\t}\n\t\t\t\t\tnode.appendChild(_tempDiv);\n\t\t\t\t\tpix = parseFloat(_tempDiv[(horiz ? \"offsetWidth\" : \"offsetHeight\")]);\n\t\t\t\t\tnode.removeChild(_tempDiv);\n\t\t\t\t\tif (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n\t\t\t\t\t\tcache = node._gsCache = node._gsCache || {};\n\t\t\t\t\t\tcache.time = time;\n\t\t\t\t\t\tcache.width = pix / v * 100;\n\t\t\t\t\t}\n\t\t\t\t\tif (pix === 0 && !recurse) {\n\t\t\t\t\t\tpix = _convertToPixels(t, p, v, sfx, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (precise) {\n\t\t\t\t\tpix /= 100;\n\t\t\t\t}\n\t\t\t\treturn neg ? -pix : pix;\n\t\t\t},\n\t\t\t_calculateOffset = _internals.calculateOffset = function(t, p, cs) { //for figuring out \"top\" or \"left\" in px when it's \"auto\". We need to factor in margin with the offsetLeft/offsetTop\n\t\t\t\tif (_getStyle(t, \"position\", cs) !== \"absolute\") { return 0; }\n\t\t\t\tvar dim = ((p === \"left\") ? \"Left\" : \"Top\"),\n\t\t\t\t\tv = _getStyle(t, \"margin\" + dim, cs);\n\t\t\t\treturn t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n\t\t\t},\n\n\t\t\t// @private returns at object containing ALL of the style properties in camelCase and their associated values.\n\t\t\t_getAllStyles = function(t, cs) {\n\t\t\t\tvar s = {},\n\t\t\t\t\ti, tr, p;\n\t\t\t\tif ((cs = cs || _getComputedStyle(t, null))) {\n\t\t\t\t\tif ((i = cs.length)) {\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = cs[i];\n\t\t\t\t\t\t\tif (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) { //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed (\"transform\" and \"WebkitTransform\"), so we must weed out the extra one here.\n\t\t\t\t\t\t\t\ts[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //some browsers behave differently - cs.length is always 0, so we must do a for...in loop.\n\t\t\t\t\t\tfor (i in cs) {\n\t\t\t\t\t\t\tif (i.indexOf(\"Transform\") === -1 || _transformProp === i) { //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed (\"transform\" and \"WebkitTransform\"), so we must weed out the extra one here.\n\t\t\t\t\t\t\t\ts[i] = cs[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ((cs = t.currentStyle || t.style)) {\n\t\t\t\t\tfor (i in cs) {\n\t\t\t\t\t\tif (typeof(i) === \"string\" && s[i] === undefined) {\n\t\t\t\t\t\t\ts[i.replace(_camelExp, _camelFunc)] = cs[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!_supportsOpacity) {\n\t\t\t\t\ts.opacity = _getIEOpacity(t);\n\t\t\t\t}\n\t\t\t\ttr = _getTransform(t, cs, false);\n\t\t\t\ts.rotation = tr.rotation;\n\t\t\t\ts.skewX = tr.skewX;\n\t\t\t\ts.scaleX = tr.scaleX;\n\t\t\t\ts.scaleY = tr.scaleY;\n\t\t\t\ts.x = tr.x;\n\t\t\t\ts.y = tr.y;\n\t\t\t\tif (_supports3D) {\n\t\t\t\t\ts.z = tr.z;\n\t\t\t\t\ts.rotationX = tr.rotationX;\n\t\t\t\t\ts.rotationY = tr.rotationY;\n\t\t\t\t\ts.scaleZ = tr.scaleZ;\n\t\t\t\t}\n\t\t\t\tif (s.filters) {\n\t\t\t\t\tdelete s.filters;\n\t\t\t\t}\n\t\t\t\treturn s;\n\t\t\t},\n\n\t\t\t// @private analyzes two style objects (as returned by _getAllStyles()) and only looks for differences between them that contain tweenable values (like a number or color). It returns an object with a \"difs\" property which refers to an object containing only those isolated properties and values for tweening, and a \"firstMPT\" property which refers to the first MiniPropTween instance in a linked list that recorded all the starting values of the different properties so that we can revert to them at the end or beginning of the tween - we don't want the cascading to get messed up. The forceLookup parameter is an optional generic object with properties that should be forced into the results - this is necessary for className tweens that are overwriting others because imagine a scenario where a rollover/rollout adds/removes a class and the user swipes the mouse over the target SUPER fast, thus nothing actually changed yet and the subsequent comparison of the properties would indicate they match (especially when px rounding is taken into consideration), thus no tweening is necessary even though it SHOULD tween and remove those properties after the tween (otherwise the inline styles will contaminate things). See the className SpecialProp code for details.\n\t\t\t_cssDif = function(t, s1, s2, vars, forceLookup) {\n\t\t\t\tvar difs = {},\n\t\t\t\t\tstyle = t.style,\n\t\t\t\t\tval, p, mpt;\n\t\t\t\tfor (p in s2) {\n\t\t\t\t\tif (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || (forceLookup && forceLookup[p])) if (p.indexOf(\"Origin\") === -1) if (typeof(val) === \"number\" || typeof(val) === \"string\") {\n\t\t\t\t\t\tdifs[p] = (val === \"auto\" && (p === \"left\" || p === \"top\")) ? _calculateOffset(t, p) : ((val === \"\" || val === \"auto\" || val === \"none\") && typeof(s1[p]) === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\") ? 0 : val; //if the ending value is defaulting (\"\" or \"auto\"), we check the starting value and if it can be parsed into a number (a string which could have a suffix too, like 700px), then we swap in 0 for \"\" or \"auto\" so that things actually tween.\n\t\t\t\t\t\tif (style[p] !== undefined) { //for className tweens, we must remember which properties already existed inline - the ones that didn't should be removed when the tween isn't in progress because they were only introduced to facilitate the transition between classes.\n\t\t\t\t\t\t\tmpt = new MiniPropTween(style, p, style[p], mpt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (vars) {\n\t\t\t\t\tfor (p in vars) { //copy properties (except className)\n\t\t\t\t\t\tif (p !== \"className\") {\n\t\t\t\t\t\t\tdifs[p] = vars[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {difs:difs, firstMPT:mpt};\n\t\t\t},\n\t\t\t_dimensions = {width:[\"Left\",\"Right\"], height:[\"Top\",\"Bottom\"]},\n\t\t\t_margins = [\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\"],\n\n\t\t\t/**\n\t\t\t * @private Gets the width or height of an element\n\t\t\t * @param {!Object} t Target element\n\t\t\t * @param {!string} p Property name (\"width\" or \"height\")\n\t\t\t * @param {Object=} cs Computed style object (if one exists). Just a speed optimization.\n\t\t\t * @return {number} Dimension (in pixels)\n\t\t\t */\n\t\t\t_getDimension = function(t, p, cs) {\n\t\t\t\tif ((t.nodeName + \"\").toLowerCase() === \"svg\") { //Chrome no longer supports offsetWidth/offsetHeight on SVG elements.\n\t\t\t\t\treturn (cs || _getComputedStyle(t))[p] || 0;\n\t\t\t\t} else if (t.getCTM && _isSVG(t)) {\n\t\t\t\t\treturn t.getBBox()[p] || 0;\n\t\t\t\t}\n\t\t\t\tvar v = parseFloat((p === \"width\") ? t.offsetWidth : t.offsetHeight),\n\t\t\t\t\ta = _dimensions[p],\n\t\t\t\t\ti = a.length;\n\t\t\t\tcs = cs || _getComputedStyle(t, null);\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tv -= parseFloat( _getStyle(t, \"padding\" + a[i], cs, true) ) || 0;\n\t\t\t\t\tv -= parseFloat( _getStyle(t, \"border\" + a[i] + \"Width\", cs, true) ) || 0;\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t},\n\n\t\t\t// @private Parses position-related complex strings like \"top left\" or \"50px 10px\" or \"70% 20%\", etc. which are used for things like transformOrigin or backgroundPosition. Optionally decorates a supplied object (recObj) with the following properties: \"ox\" (offsetX), \"oy\" (offsetY), \"oxp\" (if true, \"ox\" is a percentage not a pixel value), and \"oxy\" (if true, \"oy\" is a percentage not a pixel value)\n\t\t\t_parsePosition = function(v, recObj) {\n\t\t\t\tif (v === \"contain\" || v === \"auto\" || v === \"auto auto\") { //note: Firefox uses \"auto auto\" as default whereas Chrome uses \"auto\".\n\t\t\t\t\treturn v + \" \";\n\t\t\t\t}\n\t\t\t\tif (v == null || v === \"\") {\n\t\t\t\t\tv = \"0 0\";\n\t\t\t\t}\n\t\t\t\tvar a = v.split(\" \"),\n\t\t\t\t\tx = (v.indexOf(\"left\") !== -1) ? \"0%\" : (v.indexOf(\"right\") !== -1) ? \"100%\" : a[0],\n\t\t\t\t\ty = (v.indexOf(\"top\") !== -1) ? \"0%\" : (v.indexOf(\"bottom\") !== -1) ? \"100%\" : a[1],\n\t\t\t\t\ti;\n\t\t\t\tif (a.length > 3 && !recObj) { //multiple positions\n\t\t\t\t\ta = v.split(\", \").join(\",\").split(\",\");\n\t\t\t\t\tv = [];\n\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\tv.push(_parsePosition(a[i]));\n\t\t\t\t\t}\n\t\t\t\t\treturn v.join(\",\");\n\t\t\t\t}\n\t\t\t\tif (y == null) {\n\t\t\t\t\ty = (x === \"center\") ? \"50%\" : \"0\";\n\t\t\t\t} else if (y === \"center\") {\n\t\t\t\t\ty = \"50%\";\n\t\t\t\t}\n\t\t\t\tif (x === \"center\" || (isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1)) { //remember, the user could flip-flop the values and say \"bottom center\" or \"center bottom\", etc. \"center\" is ambiguous because it could be used to describe horizontal or vertical, hence the isNaN(). If there's an \"=\" sign in the value, it's relative.\n\t\t\t\t\tx = \"50%\";\n\t\t\t\t}\n\t\t\t\tv = x + \" \" + y + ((a.length > 2) ? \" \" + a[2] : \"\");\n\t\t\t\tif (recObj) {\n\t\t\t\t\trecObj.oxp = (x.indexOf(\"%\") !== -1);\n\t\t\t\t\trecObj.oyp = (y.indexOf(\"%\") !== -1);\n\t\t\t\t\trecObj.oxr = (x.charAt(1) === \"=\");\n\t\t\t\t\trecObj.oyr = (y.charAt(1) === \"=\");\n\t\t\t\t\trecObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n\t\t\t\t\trecObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n\t\t\t\t\trecObj.v = v;\n\t\t\t\t}\n\t\t\t\treturn recObj || v;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Takes an ending value (typically a string, but can be a number) and a starting value and returns the change between the two, looking for relative value indicators like += and -= and it also ignores suffixes (but make sure the ending value starts with a number or +=/-= and that the starting value is a NUMBER!)\n\t\t\t * @param {(number|string)} e End value which is typically a string, but could be a number\n\t\t\t * @param {(number|string)} b Beginning value which is typically a string but could be a number\n\t\t\t * @return {number} Amount of change between the beginning and ending values (relative values that have a \"+=\" or \"-=\" are recognized)\n\t\t\t */\n\t\t\t_parseChange = function(e, b) {\n\t\t\t\tif (typeof(e) === \"function\") {\n\t\t\t\t\te = e(_index, _target);\n\t\t\t\t}\n\t\t\t\treturn (typeof(e) === \"string\" && e.charAt(1) === \"=\") ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : (parseFloat(e) - parseFloat(b)) || 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Takes a value and a default number, checks if the value is relative, null, or numeric and spits back a normalized number accordingly. Primarily used in the _parseTransform() function.\n\t\t\t * @param {Object} v Value to be parsed\n\t\t\t * @param {!number} d Default value (which is also used for relative calculations if \"+=\" or \"-=\" is found in the first parameter)\n\t\t\t * @return {number} Parsed value\n\t\t\t */\n\t\t\t_parseVal = function(v, d) {\n\t\t\t\tif (typeof(v) === \"function\") {\n\t\t\t\t\tv = v(_index, _target);\n\t\t\t\t}\n\t\t\t\tvar isRelative = (typeof(v) === \"string\" && v.charAt(1) === \"=\");\n\t\t\t\tif (typeof(v) === \"string\" && v.charAt(v.length - 2) === \"v\") { //convert vw and vh into px-equivalents.\n\t\t\t\t\tv = (isRelative ? v.substr(0, 2) : 0) + (window[\"inner\" + ((v.substr(-2) === \"vh\") ? \"Height\" : \"Width\")] * (parseFloat(isRelative ? v.substr(2) : v) / 100));\n\t\t\t\t}\n\t\t\t\treturn (v == null) ? d : isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Translates strings like \"40deg\" or \"40\" or 40rad\" or \"+=40deg\" or \"270_short\" or \"-90_cw\" or \"+=45_ccw\" to a numeric radian angle. Of course a starting/default value must be fed in too so that relative values can be calculated properly.\n\t\t\t * @param {Object} v Value to be parsed\n\t\t\t * @param {!number} d Default value (which is also used for relative calculations if \"+=\" or \"-=\" is found in the first parameter)\n\t\t\t * @param {string=} p property name for directionalEnd (optional - only used when the parsed value is directional (\"_short\", \"_cw\", or \"_ccw\" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation). Property name would be \"rotation\", \"rotationX\", or \"rotationY\"\n\t\t\t * @param {Object=} directionalEnd An object that will store the raw end values for directional angles (\"_short\", \"_cw\", or \"_ccw\" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation.\n\t\t\t * @return {number} parsed angle in radians\n\t\t\t */\n\t\t\t_parseAngle = function(v, d, p, directionalEnd) {\n\t\t\t\tvar min = 0.000001,\n\t\t\t\t\tcap, split, dif, result, isRelative;\n\t\t\t\tif (typeof(v) === \"function\") {\n\t\t\t\t\tv = v(_index, _target);\n\t\t\t\t}\n\t\t\t\tif (v == null) {\n\t\t\t\t\tresult = d;\n\t\t\t\t} else if (typeof(v) === \"number\") {\n\t\t\t\t\tresult = v;\n\t\t\t\t} else {\n\t\t\t\t\tcap = 360;\n\t\t\t\t\tsplit = v.split(\"_\");\n\t\t\t\t\tisRelative = (v.charAt(1) === \"=\");\n\t\t\t\t\tdif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * ((v.indexOf(\"rad\") === -1) ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n\t\t\t\t\tif (split.length) {\n\t\t\t\t\t\tif (directionalEnd) {\n\t\t\t\t\t\t\tdirectionalEnd[p] = d + dif;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"short\") !== -1) {\n\t\t\t\t\t\t\tdif = dif % cap;\n\t\t\t\t\t\t\tif (dif !== dif % (cap / 2)) {\n\t\t\t\t\t\t\t\tdif = (dif < 0) ? dif + cap : dif - cap;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t\t\t\t\t\t\tdif = ((dif + cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t} else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t\t\t\t\t\t\tdif = ((dif - cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult = d + dif;\n\t\t\t\t}\n\t\t\t\tif (result < min && result > -min) {\n\t\t\t\t\tresult = 0;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t_colorLookup = {aqua:[0,255,255],\n\t\t\t\tlime:[0,255,0],\n\t\t\t\tsilver:[192,192,192],\n\t\t\t\tblack:[0,0,0],\n\t\t\t\tmaroon:[128,0,0],\n\t\t\t\tteal:[0,128,128],\n\t\t\t\tblue:[0,0,255],\n\t\t\t\tnavy:[0,0,128],\n\t\t\t\twhite:[255,255,255],\n\t\t\t\tfuchsia:[255,0,255],\n\t\t\t\tolive:[128,128,0],\n\t\t\t\tyellow:[255,255,0],\n\t\t\t\torange:[255,165,0],\n\t\t\t\tgray:[128,128,128],\n\t\t\t\tpurple:[128,0,128],\n\t\t\t\tgreen:[0,128,0],\n\t\t\t\tred:[255,0,0],\n\t\t\t\tpink:[255,192,203],\n\t\t\t\tcyan:[0,255,255],\n\t\t\t\ttransparent:[255,255,255,0]},\n\n\t\t\t_hue = function(h, m1, m2) {\n\t\t\t\th = (h < 0) ? h + 1 : (h > 1) ? h - 1 : h;\n\t\t\t\treturn ((((h * 6 < 1) ? m1 + (m2 - m1) * h * 6 : (h < 0.5) ? m2 : (h * 3 < 2) ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255) + 0.5) | 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Parses a color (like #9F0, #FF9900, rgb(255,51,153) or hsl(108, 50%, 10%)) into an array with 3 elements for red, green, and blue or if toHSL parameter is true, it will populate the array with hue, saturation, and lightness values. If a relative value is found in an hsl() or hsla() string, it will preserve those relative prefixes and all the values in the array will be strings instead of numbers (in all other cases it will be populated with numbers).\n\t\t\t * @param {(string|number)} v The value the should be parsed which could be a string like #9F0 or rgb(255,102,51) or rgba(255,0,0,0.5) or it could be a number like 0xFF00CC or even a named color like red, blue, purple, etc.\n\t\t\t * @param {(boolean)} toHSL If true, an hsl() or hsla() value will be returned instead of rgb() or rgba()\n\t\t\t * @return {Array.<number>} An array containing red, green, and blue (and optionally alpha) in that order, or if the toHSL parameter was true, the array will contain hue, saturation and lightness (and optionally alpha) in that order. Always numbers unless there's a relative prefix found in an hsl() or hsla() string and toHSL is true.\n\t\t\t */\n\t\t\t_parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n\t\t\t\tvar a, r, g, b, h, s, l, max, min, d, wasHSL;\n\t\t\t\tif (!v) {\n\t\t\t\t\ta = _colorLookup.black;\n\t\t\t\t} else if (typeof(v) === \"number\") {\n\t\t\t\t\ta = [v >> 16, (v >> 8) & 255, v & 255];\n\t\t\t\t} else {\n\t\t\t\t\tif (v.charAt(v.length - 1) === \",\") { //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:\"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)\" - in this example \"blue,\" has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.\n\t\t\t\t\t\tv = v.substr(0, v.length - 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (_colorLookup[v]) {\n\t\t\t\t\t\ta = _colorLookup[v];\n\t\t\t\t\t} else if (v.charAt(0) === \"#\") {\n\t\t\t\t\t\tif (v.length === 4) { //for shorthand like #9F0\n\t\t\t\t\t\t\tr = v.charAt(1);\n\t\t\t\t\t\t\tg = v.charAt(2);\n\t\t\t\t\t\t\tb = v.charAt(3);\n\t\t\t\t\t\t\tv = \"#\" + r + r + g + g + b + b;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tv = parseInt(v.substr(1), 16);\n\t\t\t\t\t\ta = [v >> 16, (v >> 8) & 255, v & 255];\n\t\t\t\t\t} else if (v.substr(0, 3) === \"hsl\") {\n\t\t\t\t\t\ta = wasHSL = v.match(_numExp);\n\t\t\t\t\t\tif (!toHSL) {\n\t\t\t\t\t\t\th = (Number(a[0]) % 360) / 360;\n\t\t\t\t\t\t\ts = Number(a[1]) / 100;\n\t\t\t\t\t\t\tl = Number(a[2]) / 100;\n\t\t\t\t\t\t\tg = (l <= 0.5) ? l * (s + 1) : l + s - l * s;\n\t\t\t\t\t\t\tr = l * 2 - g;\n\t\t\t\t\t\t\tif (a.length > 3) {\n\t\t\t\t\t\t\t\ta[3] = Number(a[3]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ta[0] = _hue(h + 1 / 3, r, g);\n\t\t\t\t\t\t\ta[1] = _hue(h, r, g);\n\t\t\t\t\t\t\ta[2] = _hue(h - 1 / 3, r, g);\n\t\t\t\t\t\t} else if (v.indexOf(\"=\") !== -1) { //if relative values are found, just return the raw strings with the relative prefixes in place.\n\t\t\t\t\t\t\treturn v.match(_relNumExp);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = v.match(_numExp) || _colorLookup.transparent;\n\t\t\t\t\t}\n\t\t\t\t\ta[0] = Number(a[0]);\n\t\t\t\t\ta[1] = Number(a[1]);\n\t\t\t\t\ta[2] = Number(a[2]);\n\t\t\t\t\tif (a.length > 3) {\n\t\t\t\t\t\ta[3] = Number(a[3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (toHSL && !wasHSL) {\n\t\t\t\t\tr = a[0] / 255;\n\t\t\t\t\tg = a[1] / 255;\n\t\t\t\t\tb = a[2] / 255;\n\t\t\t\t\tmax = Math.max(r, g, b);\n\t\t\t\t\tmin = Math.min(r, g, b);\n\t\t\t\t\tl = (max + min) / 2;\n\t\t\t\t\tif (max === min) {\n\t\t\t\t\t\th = s = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\td = max - min;\n\t\t\t\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\t\t\t\t\th = (max === r) ? (g - b) / d + (g < b ? 6 : 0) : (max === g) ? (b - r) / d + 2 : (r - g) / d + 4;\n\t\t\t\t\t\th *= 60;\n\t\t\t\t\t}\n\t\t\t\t\ta[0] = (h + 0.5) | 0;\n\t\t\t\t\ta[1] = (s * 100 + 0.5) | 0;\n\t\t\t\t\ta[2] = (l * 100 + 0.5) | 0;\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\t_formatColors = function(s, toHSL) {\n\t\t\t\tvar colors = s.match(_colorExp) || [],\n\t\t\t\t\tcharIndex = 0,\n\t\t\t\t\tparsed = \"\",\n\t\t\t\t\ti, color, temp;\n\t\t\t\tif (!colors.length) {\n\t\t\t\t\treturn s;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < colors.length; i++) {\n\t\t\t\t\tcolor = colors[i];\n\t\t\t\t\ttemp = s.substr(charIndex, s.indexOf(color, charIndex)-charIndex);\n\t\t\t\t\tcharIndex += temp.length + color.length;\n\t\t\t\t\tcolor = _parseColor(color, toHSL);\n\t\t\t\t\tif (color.length === 3) {\n\t\t\t\t\t\tcolor.push(1);\n\t\t\t\t\t}\n\t\t\t\t\tparsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n\t\t\t\t}\n\t\t\t\treturn parsed + s.substr(charIndex);\n\t\t\t},\n\t\t\t_colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\"; //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.\n\n\t\tfor (p in _colorLookup) {\n\t\t\t_colorExp += \"|\" + p + \"\\\\b\";\n\t\t}\n\t\t_colorExp = new RegExp(_colorExp+\")\", \"gi\");\n\n\t\tCSSPlugin.colorStringFilter = function(a) {\n\t\t\tvar combined = a[0] + \" \" + a[1],\n\t\t\t\ttoHSL;\n\t\t\tif (_colorExp.test(combined)) {\n\t\t\t\ttoHSL = (combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1);\n\t\t\t\ta[0] = _formatColors(a[0], toHSL);\n\t\t\t\ta[1] = _formatColors(a[1], toHSL);\n\t\t\t}\n\t\t\t_colorExp.lastIndex = 0;\n\t\t};\n\n\t\tif (!TweenLite.defaultStringFilter) {\n\t\t\tTweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n\t\t}\n\n\t\t/**\n\t\t * @private Returns a formatter function that handles taking a string (or number in some cases) and returning a consistently formatted one in terms of delimiters, quantity of values, etc. For example, we may get boxShadow values defined as \"0px red\" or \"0px 0px 10px rgb(255,0,0)\" or \"0px 0px 20px 20px #F00\" and we need to ensure that what we get back is described with 4 numbers and a color. This allows us to feed it into the _parseComplex() method and split the values up appropriately. The neat thing about this _getFormatter() function is that the dflt defines a pattern as well as a default, so for example, _getFormatter(\"0px 0px 0px 0px #777\", true) not only sets the default as 0px for all distances and #777 for the color, but also sets the pattern such that 4 numbers and a color will always get returned.\n\t\t * @param {!string} dflt The default value and pattern to follow. So \"0px 0px 0px 0px #777\" will ensure that 4 numbers and a color will always get returned.\n\t\t * @param {boolean=} clr If true, the values should be searched for color-related data. For example, boxShadow values typically contain a color whereas borderRadius don't.\n\t\t * @param {boolean=} collapsible If true, the value is a top/left/right/bottom style one that acts like margin or padding, where if only one value is received, it's used for all 4; if 2 are received, the first is duplicated for 3rd (bottom) and the 2nd is duplicated for the 4th spot (left), etc.\n\t\t * @return {Function} formatter function\n\t\t */\n\t\tvar _getFormatter = function(dflt, clr, collapsible, multi) {\n\t\t\t\tif (dflt == null) {\n\t\t\t\t\treturn function(v) {return v;};\n\t\t\t\t}\n\t\t\t\tvar dColor = clr ? (dflt.match(_colorExp) || [\"\"])[0] : \"\",\n\t\t\t\t\tdVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [],\n\t\t\t\t\tpfx = dflt.substr(0, dflt.indexOf(dVals[0])),\n\t\t\t\t\tsfx = (dflt.charAt(dflt.length - 1) === \")\") ? \")\" : \"\",\n\t\t\t\t\tdelim = (dflt.indexOf(\" \") !== -1) ? \" \" : \",\",\n\t\t\t\t\tnumVals = dVals.length,\n\t\t\t\t\tdSfx = (numVals > 0) ? dVals[0].replace(_numExp, \"\") : \"\",\n\t\t\t\t\tformatter;\n\t\t\t\tif (!numVals) {\n\t\t\t\t\treturn function(v) {return v;};\n\t\t\t\t}\n\t\t\t\tif (clr) {\n\t\t\t\t\tformatter = function(v) {\n\t\t\t\t\t\tvar color, vals, i, a;\n\t\t\t\t\t\tif (typeof(v) === \"number\") {\n\t\t\t\t\t\t\tv += dSfx;\n\t\t\t\t\t\t} else if (multi && _commasOutsideParenExp.test(v)) {\n\t\t\t\t\t\t\ta = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\t\t\ta[i] = formatter(a[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn a.join(\",\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolor = (v.match(_colorExp) || [dColor])[0];\n\t\t\t\t\t\tvals = v.split(color).join(\"\").match(_valuesExp) || [];\n\t\t\t\t\t\ti = vals.length;\n\t\t\t\t\t\tif (numVals > i--) {\n\t\t\t\t\t\t\twhile (++i < numVals) {\n\t\t\t\t\t\t\t\tvals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n\t\t\t\t\t};\n\t\t\t\t\treturn formatter;\n\n\t\t\t\t}\n\t\t\t\tformatter = function(v) {\n\t\t\t\t\tvar vals, a, i;\n\t\t\t\t\tif (typeof(v) === \"number\") {\n\t\t\t\t\t\tv += dSfx;\n\t\t\t\t\t} else if (multi && _commasOutsideParenExp.test(v)) {\n\t\t\t\t\t\ta = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\t\ta[i] = formatter(a[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn a.join(\",\");\n\t\t\t\t\t}\n\t\t\t\t\tvals = v.match(delim === \",\" ? _valuesExp : _valuesExpWithCommas) || [];\n\t\t\t\t\ti = vals.length;\n\t\t\t\t\tif (numVals > i--) {\n\t\t\t\t\t\twhile (++i < numVals) {\n\t\t\t\t\t\t\tvals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn ((pfx && v !== \"none\") ? v.substr(0, v.indexOf(vals[0])) || pfx : pfx) + vals.join(delim) + sfx; //note: prefix might be different, like for clipPath it could start with inset( or polygon(\n\t\t\t\t};\n\t\t\t\treturn formatter;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private returns a formatter function that's used for edge-related values like marginTop, marginLeft, paddingBottom, paddingRight, etc. Just pass a comma-delimited list of property names related to the edges.\n\t\t\t * @param {!string} props a comma-delimited list of property names in order from top to left, like \"marginTop,marginRight,marginBottom,marginLeft\"\n\t\t\t * @return {Function} a formatter function\n\t\t\t */\n\t\t\t_getEdgeParser = function(props) {\n\t\t\t\tprops = props.split(\",\");\n\t\t\t\treturn function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\t\tvar a = (e + \"\").split(\" \"),\n\t\t\t\t\t\ti;\n\t\t\t\t\tvars = {};\n\t\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\t\tvars[props[i]] = a[i] = a[i] || a[(((i - 1) / 2) >> 0)];\n\t\t\t\t\t}\n\t\t\t\t\treturn cssp.parse(t, vars, pt, plugin);\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t// @private used when other plugins must tween values first, like BezierPlugin or ThrowPropsPlugin, etc. That plugin's setRatio() gets called first so that the values are updated, and then we loop through the MiniPropTweens which handle copying the values into their appropriate slots so that they can then be applied correctly in the main CSSPlugin setRatio() method. Remember, we typically create a proxy object that has a bunch of uniquely-named properties that we feed to the sub-plugin and it does its magic normally, and then we must interpret those values and apply them to the css because often numbers must get combined/concatenated, suffixes added, etc. to work with css, like boxShadow could have 4 values plus a color.\n\t\t\t_setPluginRatio = _internals._setPluginRatio = function(v) {\n\t\t\t\tthis.plugin.setRatio(v);\n\t\t\t\tvar d = this.data,\n\t\t\t\t\tproxy = d.proxy,\n\t\t\t\t\tmpt = d.firstMPT,\n\t\t\t\t\tmin = 0.000001,\n\t\t\t\t\tval, pt, i, str, p;\n\t\t\t\twhile (mpt) {\n\t\t\t\t\tval = proxy[mpt.v];\n\t\t\t\t\tif (mpt.r) {\n\t\t\t\t\t\tval = mpt.r(val);\n\t\t\t\t\t} else if (val < min && val > -min) {\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tmpt.t[mpt.p] = val;\n\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t}\n\t\t\t\tif (d.autoRotate) {\n\t\t\t\t\td.autoRotate.rotation = d.mod ? d.mod.call(this._tween, proxy.rotation, this.t, this._tween) : proxy.rotation; //special case for ModifyPlugin to hook into an auto-rotating bezier\n\t\t\t\t}\n\t\t\t\t//at the end, we must set the CSSPropTween's \"e\" (end) value dynamically here because that's what is used in the final setRatio() method. Same for \"b\" at the beginning.\n\t\t\t\tif (v === 1 || v === 0) {\n\t\t\t\t\tmpt = d.firstMPT;\n\t\t\t\t\tp = (v === 1) ? \"e\" : \"b\";\n\t\t\t\t\twhile (mpt) {\n\t\t\t\t\t\tpt = mpt.t;\n\t\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\t\tpt[p] = pt.s + pt.xs0;\n\t\t\t\t\t\t} else if (pt.type === 1) {\n\t\t\t\t\t\t\tstr = pt.xs0 + pt.s + pt.xs1;\n\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt[p] = str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private @constructor Used by a few SpecialProps to hold important values for proxies. For example, _parseToProxy() creates a MiniPropTween instance for each property that must get tweened on the proxy, and we record the original property name as well as the unique one we create for the proxy, plus whether or not the value needs to be rounded plus the original value.\n\t\t\t * @param {!Object} t target object whose property we're tweening (often a CSSPropTween)\n\t\t\t * @param {!string} p property name\n\t\t\t * @param {(number|string|object)} v value\n\t\t\t * @param {MiniPropTween=} next next MiniPropTween in the linked list\n\t\t\t * @param {boolean=} r if true, the tweened value should be rounded to the nearest integer\n\t\t\t */\n\t\t\tMiniPropTween = function(t, p, v, next, r) {\n\t\t\t\tthis.t = t;\n\t\t\t\tthis.p = p;\n\t\t\t\tthis.v = v;\n\t\t\t\tthis.r = r;\n\t\t\t\tif (next) {\n\t\t\t\t\tnext._prev = this;\n\t\t\t\t\tthis._next = next;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Most other plugins (like BezierPlugin and ThrowPropsPlugin and others) can only tween numeric values, but CSSPlugin must accommodate special values that have a bunch of extra data (like a suffix or strings between numeric values, etc.). For example, boxShadow has values like \"10px 10px 20px 30px rgb(255,0,0)\" which would utterly confuse other plugins. This method allows us to split that data apart and grab only the numeric data and attach it to uniquely-named properties of a generic proxy object ({}) so that we can feed that to virtually any plugin to have the numbers tweened. However, we must also keep track of which properties from the proxy go with which CSSPropTween values and instances. So we create a linked list of MiniPropTweens. Each one records a target (the original CSSPropTween), property (like \"s\" or \"xn1\" or \"xn2\") that we're tweening and the unique property name that was used for the proxy (like \"boxShadow_xn1\" and \"boxShadow_xn2\") and whether or not they need to be rounded. That way, in the _setPluginRatio() method we can simply copy the values over from the proxy to the CSSPropTween instance(s). Then, when the main CSSPlugin setRatio() method runs and applies the CSSPropTween values accordingly, they're updated nicely. So the external plugin tweens the numbers, _setPluginRatio() copies them over, and setRatio() acts normally, applying css-specific values to the element.\n\t\t\t * This method returns an object that has the following properties:\n\t\t\t *  - proxy: a generic object containing the starting values for all the properties that will be tweened by the external plugin.  This is what we feed to the external _onInitTween() as the target\n\t\t\t *  - end: a generic object containing the ending values for all the properties that will be tweened by the external plugin. This is what we feed to the external plugin's _onInitTween() as the destination values\n\t\t\t *  - firstMPT: the first MiniPropTween in the linked list\n\t\t\t *  - pt: the first CSSPropTween in the linked list that was created when parsing. If shallow is true, this linked list will NOT attach to the one passed into the _parseToProxy() as the \"pt\" (4th) parameter.\n\t\t\t * @param {!Object} t target object to be tweened\n\t\t\t * @param {!(Object|string)} vars the object containing the information about the tweening values (typically the end/destination values) that should be parsed\n\t\t\t * @param {!CSSPlugin} cssp The CSSPlugin instance\n\t\t\t * @param {CSSPropTween=} pt the next CSSPropTween in the linked list\n\t\t\t * @param {TweenPlugin=} plugin the external TweenPlugin instance that will be handling tweening the numeric values\n\t\t\t * @param {boolean=} shallow if true, the resulting linked list from the parse will NOT be attached to the CSSPropTween that was passed in as the \"pt\" (4th) parameter.\n\t\t\t * @return An object containing the following properties: proxy, end, firstMPT, and pt (see above for descriptions)\n\t\t\t */\n\t\t\t_parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n\t\t\t\tvar bpt = pt,\n\t\t\t\t\tstart = {},\n\t\t\t\t\tend = {},\n\t\t\t\t\ttransform = cssp._transform,\n\t\t\t\t\toldForce = _forcePT,\n\t\t\t\t\ti, p, xp, mpt, firstPT;\n\t\t\t\tcssp._transform = null;\n\t\t\t\t_forcePT = vars;\n\t\t\t\tpt = firstPT = cssp.parse(t, vars, pt, plugin);\n\t\t\t\t_forcePT = oldForce;\n\t\t\t\t//break off from the linked list so the new ones are isolated.\n\t\t\t\tif (shallow) {\n\t\t\t\t\tcssp._transform = transform;\n\t\t\t\t\tif (bpt) {\n\t\t\t\t\t\tbpt._prev = null;\n\t\t\t\t\t\tif (bpt._prev) {\n\t\t\t\t\t\t\tbpt._prev._next = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (pt && pt !== bpt) {\n\t\t\t\t\tif (pt.type <= 1) {\n\t\t\t\t\t\tp = pt.p;\n\t\t\t\t\t\tend[p] = pt.s + pt.c;\n\t\t\t\t\t\tstart[p] = pt.s;\n\t\t\t\t\t\tif (!shallow) {\n\t\t\t\t\t\t\tmpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n\t\t\t\t\t\t\tpt.c = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pt.type === 1) {\n\t\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\t\twhile (--i > 0) {\n\t\t\t\t\t\t\t\txp = \"xn\" + i;\n\t\t\t\t\t\t\t\tp = pt.p + \"_\" + xp;\n\t\t\t\t\t\t\t\tend[p] = pt.data[xp];\n\t\t\t\t\t\t\t\tstart[p] = pt[xp];\n\t\t\t\t\t\t\t\tif (!shallow) {\n\t\t\t\t\t\t\t\t\tmpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t\treturn {proxy:start, end:end, firstMPT:mpt, pt:firstPT};\n\t\t\t},\n\n\n\n\t\t\t/**\n\t\t\t * @constructor Each property that is tweened has at least one CSSPropTween associated with it. These instances store important information like the target, property, starting value, amount of change, etc. They can also optionally have a number of \"extra\" strings and numeric values named xs1, xn1, xs2, xn2, xs3, xn3, etc. where \"s\" indicates string and \"n\" indicates number. These can be pieced together in a complex-value tween (type:1) that has alternating types of data like a string, number, string, number, etc. For example, boxShadow could be \"5px 5px 8px rgb(102, 102, 51)\". In that value, there are 6 numbers that may need to tween and then pieced back together into a string again with spaces, suffixes, etc. xs0 is special in that it stores the suffix for standard (type:0) tweens, -OR- the first string (prefix) in a complex-value (type:1) CSSPropTween -OR- it can be the non-tweening value in a type:-1 CSSPropTween. We do this to conserve memory.\n\t\t\t * CSSPropTweens have the following optional properties as well (not defined through the constructor):\n\t\t\t *  - l: Length in terms of the number of extra properties that the CSSPropTween has (default: 0). For example, for a boxShadow we may need to tween 5 numbers in which case l would be 5; Keep in mind that the start/end values for the first number that's tweened are always stored in the s and c properties to conserve memory. All additional values thereafter are stored in xn1, xn2, etc.\n\t\t\t *  - xfirst: The first instance of any sub-CSSPropTweens that are tweening properties of this instance. For example, we may split up a boxShadow tween so that there's a main CSSPropTween of type:1 that has various xs* and xn* values associated with the h-shadow, v-shadow, blur, color, etc. Then we spawn a CSSPropTween for each of those that has a higher priority and runs BEFORE the main CSSPropTween so that the values are all set by the time it needs to re-assemble them. The xfirst gives us an easy way to identify the first one in that chain which typically ends at the main one (because they're all prepende to the linked list)\n\t\t\t *  - plugin: The TweenPlugin instance that will handle the tweening of any complex values. For example, sometimes we don't want to use normal subtweens (like xfirst refers to) to tween the values - we might want ThrowPropsPlugin or BezierPlugin some other plugin to do the actual tweening, so we create a plugin instance and store a reference here. We need this reference so that if we get a request to round values or disable a tween, we can pass along that request.\n\t\t\t *  - data: Arbitrary data that needs to be stored with the CSSPropTween. Typically if we're going to have a plugin handle the tweening of a complex-value tween, we create a generic object that stores the END values that we're tweening to and the CSSPropTween's xs1, xs2, etc. have the starting values. We store that object as data. That way, we can simply pass that object to the plugin and use the CSSPropTween as the target.\n\t\t\t *  - setRatio: Only used for type:2 tweens that require custom functionality. In this case, we call the CSSPropTween's setRatio() method and pass the ratio each time the tween updates. This isn't quite as efficient as doing things directly in the CSSPlugin's setRatio() method, but it's very convenient and flexible.\n\t\t\t * @param {!Object} t Target object whose property will be tweened. Often a DOM element, but not always. It could be anything.\n\t\t\t * @param {string} p Property to tween (name). For example, to tween element.width, p would be \"width\".\n\t\t\t * @param {number} s Starting numeric value\n\t\t\t * @param {number} c Change in numeric value over the course of the entire tween. For example, if element.width starts at 5 and should end at 100, c would be 95.\n\t\t\t * @param {CSSPropTween=} next The next CSSPropTween in the linked list. If one is defined, we will define its _prev as the new instance, and the new instance's _next will be pointed at it.\n\t\t\t * @param {number=} type The type of CSSPropTween where -1 = a non-tweening value, 0 = a standard simple tween, 1 = a complex value (like one that has multiple numbers in a comma- or space-delimited string like border:\"1px solid red\"), and 2 = one that uses a custom setRatio function that does all of the work of applying the values on each update.\n\t\t\t * @param {string=} n Name of the property that should be used for overwriting purposes which is typically the same as p but not always. For example, we may need to create a subtween for the 2nd part of a \"clip:rect(...)\" tween in which case \"p\" might be xs1 but \"n\" is still \"clip\"\n\t\t\t * @param {boolean=} r If true, the value(s) should be rounded\n\t\t\t * @param {number=} pr Priority in the linked list order. Higher priority CSSPropTweens will be updated before lower priority ones. The default priority is 0.\n\t\t\t * @param {string=} b Beginning value. We store this to ensure that it is EXACTLY what it was when the tween began without any risk of interpretation issues.\n\t\t\t * @param {string=} e Ending value. We store this to ensure that it is EXACTLY what the user defined at the end of the tween without any risk of interpretation issues.\n\t\t\t */\n\t\t\tCSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n\t\t\t\tthis.t = t; //target\n\t\t\t\tthis.p = p; //property\n\t\t\t\tthis.s = s; //starting value\n\t\t\t\tthis.c = c; //change value\n\t\t\t\tthis.n = n || p; //name that this CSSPropTween should be associated to (usually the same as p, but not always - n is what overwriting looks at)\n\t\t\t\tif (!(t instanceof CSSPropTween)) {\n\t\t\t\t\t_overwriteProps.push(this.n);\n\t\t\t\t}\n\t\t\t\tthis.r = !r ? r : (typeof(r) === \"function\") ? r : Math.round; //round (boolean)\n\t\t\t\tthis.type = type || 0; //0 = normal tween, -1 = non-tweening (in which case xs0 will be applied to the target's property, like tp.t[tp.p] = tp.xs0), 1 = complex-value SpecialProp, 2 = custom setRatio() that does all the work\n\t\t\t\tif (pr) {\n\t\t\t\t\tthis.pr = pr;\n\t\t\t\t\t_hasPriority = true;\n\t\t\t\t}\n\t\t\t\tthis.b = (b === undefined) ? s : b;\n\t\t\t\tthis.e = (e === undefined) ? s + c : e;\n\t\t\t\tif (next) {\n\t\t\t\t\tthis._next = next;\n\t\t\t\t\tnext._prev = this;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) { //cleans up some code redundancies and helps minification. Just a fast way to add a NUMERIC non-tweening CSSPropTween\n\t\t\t\tvar pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n\t\t\t\tpt.b = start;\n\t\t\t\tpt.e = pt.xs0 = end;\n\t\t\t\treturn pt;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Takes a target, the beginning value and ending value (as strings) and parses them into a CSSPropTween (possibly with child CSSPropTweens) that accommodates multiple numbers, colors, comma-delimited values, etc. For example:\n\t\t\t * sp.parseComplex(element, \"boxShadow\", \"5px 10px 20px rgb(255,102,51)\", \"0px 0px 0px red\", true, \"0px 0px 0px rgb(0,0,0,0)\", pt);\n\t\t\t * It will walk through the beginning and ending values (which should be in the same format with the same number and type of values) and figure out which parts are numbers, what strings separate the numeric/tweenable values, and then create the CSSPropTweens accordingly. If a plugin is defined, no child CSSPropTweens will be created. Instead, the ending values will be stored in the \"data\" property of the returned CSSPropTween like: {s:-5, xn1:-10, xn2:-20, xn3:255, xn4:0, xn5:0} so that it can be fed to any other plugin and it'll be plain numeric tweens but the recomposition of the complex value will be handled inside CSSPlugin's setRatio().\n\t\t\t * If a setRatio is defined, the type of the CSSPropTween will be set to 2 and recomposition of the values will be the responsibility of that method.\n\t\t\t *\n\t\t\t * @param {!Object} t Target whose property will be tweened\n\t\t\t * @param {!string} p Property that will be tweened (its name, like \"left\" or \"backgroundColor\" or \"boxShadow\")\n\t\t\t * @param {string} b Beginning value\n\t\t\t * @param {string} e Ending value\n\t\t\t * @param {boolean} clrs If true, the value could contain a color value like \"rgb(255,0,0)\" or \"#F00\" or \"red\". The default is false, so no colors will be recognized (a performance optimization)\n\t\t\t * @param {(string|number|Object)} dflt The default beginning value that should be used if no valid beginning value is defined or if the number of values inside the complex beginning and ending values don't match\n\t\t\t * @param {?CSSPropTween} pt CSSPropTween instance that is the current head of the linked list (we'll prepend to this).\n\t\t\t * @param {number=} pr Priority in the linked list order. Higher priority properties will be updated before lower priority ones. The default priority is 0.\n\t\t\t * @param {TweenPlugin=} plugin If a plugin should handle the tweening of extra properties, pass the plugin instance here. If one is defined, then NO subtweens will be created for any extra properties (the properties will be created - just not additional CSSPropTween instances to tween them) because the plugin is expected to do so. However, the end values WILL be populated in the \"data\" property, like {s:100, xn1:50, xn2:300}\n\t\t\t * @param {function(number)=} setRatio If values should be set in a custom function instead of being pieced together in a type:1 (complex-value) CSSPropTween, define that custom function here.\n\t\t\t * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parseComplex() call.\n\t\t\t */\n\t\t\t_parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n\t\t\t\t//DEBUG: _log(\"parseComplex: \"+p+\", b: \"+b+\", e: \"+e);\n\t\t\t\tb = b || dflt || \"\";\n\t\t\t\tif (typeof(e) === \"function\") {\n\t\t\t\t\te = e(_index, _target);\n\t\t\t\t}\n\t\t\t\tpt = new CSSPropTween(t, p, 0, 0, pt, (setRatio ? 2 : 1), null, false, pr, b, e);\n\t\t\t\te += \"\"; //ensures it's a string\n\t\t\t\tif (clrs && _colorExp.test(e + b)) { //if colors are found, normalize the formatting to rgba() or hsla().\n\t\t\t\t\te = [b, e];\n\t\t\t\t\tCSSPlugin.colorStringFilter(e);\n\t\t\t\t\tb = e[0];\n\t\t\t\t\te = e[1];\n\t\t\t\t}\n\t\t\t\tvar ba = b.split(\", \").join(\",\").split(\" \"), //beginning array\n\t\t\t\t\tea = e.split(\", \").join(\",\").split(\" \"), //ending array\n\t\t\t\t\tl = ba.length,\n\t\t\t\t\tautoRound = (_autoRound !== false),\n\t\t\t\t\ti, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n\t\t\t\tif (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n\t\t\t\t\tif ((e + b).indexOf(\"rgb\") !== -1 || (e + b).indexOf(\"hsl\") !== -1) { //keep rgb(), rgba(), hsl(), and hsla() values together! (remember, we're splitting on spaces)\n\t\t\t\t\t\tba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t\t\t\t\t\tea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tba = ba.join(\" \").split(\",\").join(\", \").split(\" \");\n\t\t\t\t\t\tea = ea.join(\" \").split(\",\").join(\", \").split(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tl = ba.length;\n\t\t\t\t}\n\t\t\t\tif (l !== ea.length) {\n\t\t\t\t\t//DEBUG: _log(\"mismatched formatting detected on \" + p + \" (\" + b + \" vs \" + e + \")\");\n\t\t\t\t\tba = (dflt || \"\").split(\" \");\n\t\t\t\t\tl = ba.length;\n\t\t\t\t}\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = setRatio;\n\t\t\t\t_colorExp.lastIndex = 0;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tbv = ba[i];\n\t\t\t\t\tev = ea[i] + \"\";\n\t\t\t\t\tbn = parseFloat(bv);\n\t\t\t\t\t//if the value begins with a number (most common). It's fine if it has a suffix like px\n\t\t\t\t\tif (bn || bn === 0) {\n\t\t\t\t\t\tpt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), (autoRound && ev.indexOf(\"px\") !== -1) ? Math.round : false, true);\n\n\t\t\t\t\t//if the value is a color\n\t\t\t\t\t} else if (clrs && _colorExp.test(bv)) {\n\t\t\t\t\t\tstr = ev.indexOf(\")\") + 1;\n\t\t\t\t\t\tstr = \")\" + (str ? ev.substr(str) : \"\"); //if there's a comma or ) at the end, retain it.\n\t\t\t\t\t\tuseHSL = (ev.indexOf(\"hsl\") !== -1 && _supportsOpacity);\n\t\t\t\t\t\ttemp = ev; //original string value so we can look for any prefix later.\n\t\t\t\t\t\tbv = _parseColor(bv, useHSL);\n\t\t\t\t\t\tev = _parseColor(ev, useHSL);\n\t\t\t\t\t\thasAlpha = (bv.length + ev.length > 6);\n\t\t\t\t\t\tif (hasAlpha && !_supportsOpacity && ev[3] === 0) { //older versions of IE don't support rgba(), so if the destination alpha is 0, just use \"transparent\" for the end color\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n\t\t\t\t\t\t\tpt.e = pt.e.split(ea[i]).join(\"transparent\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!_supportsOpacity) { //old versions of IE don't support rgba().\n\t\t\t\t\t\t\t\thasAlpha = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (useHSL) {\n\t\t\t\t\t\t\t\tpt.appendXtra(temp.substr(0, temp.indexOf(\"hsl\")) + (hasAlpha ? \"hsla(\" : \"hsl(\"), bv[0], _parseChange(ev[0], bv[0]), \",\", false, true)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), (hasAlpha ? \"%,\" : \"%\" + str), false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpt.appendXtra(temp.substr(0, temp.indexOf(\"rgb\")) + (hasAlpha ? \"rgba(\" : \"rgb(\"), bv[0], ev[0] - bv[0], \",\", Math.round, true)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", Math.round)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[2], ev[2] - bv[2], (hasAlpha ? \",\" : str), Math.round);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (hasAlpha) {\n\t\t\t\t\t\t\t\tbv = (bv.length < 4) ? 1 : bv[3];\n\t\t\t\t\t\t\t\tpt.appendXtra(\"\", bv, ((ev.length < 4) ? 1 : ev[3]) - bv, str, false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_colorExp.lastIndex = 0; //otherwise the test() on the RegExp could move the lastIndex and taint future results.\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbnums = bv.match(_numExp); //gets each group of numbers in the beginning value string and drops them into an array\n\n\t\t\t\t\t\t//if no number is found, treat it as a non-tweening value and just append the string to the current xs.\n\t\t\t\t\t\tif (!bnums) {\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += (pt.l || pt[\"xs\" + pt.l]) ? \" \" + ev : ev;\n\n\t\t\t\t\t\t//loop through all the numbers that are found and construct the extra values on the pt.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tenums = ev.match(_relNumExp); //get each group of numbers in the end value string and drop them into an array. We allow relative values too, like +=50 or -=.5\n\t\t\t\t\t\t\tif (!enums || enums.length !== bnums.length) {\n\t\t\t\t\t\t\t\t//DEBUG: _log(\"mismatched formatting detected on \" + p + \" (\" + b + \" vs \" + e + \")\");\n\t\t\t\t\t\t\t\treturn pt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tni = 0;\n\t\t\t\t\t\t\tfor (xi = 0; xi < bnums.length; xi++) {\n\t\t\t\t\t\t\t\tcv = bnums[xi];\n\t\t\t\t\t\t\t\ttemp = bv.indexOf(cv, ni);\n\t\t\t\t\t\t\t\tpt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", (autoRound && bv.substr(temp + cv.length, 2) === \"px\") ? Math.round : false, (xi === 0));\n\t\t\t\t\t\t\t\tni = temp + cv.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += bv.substr(ni);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//if there are relative values (\"+=\" or \"-=\" prefix), we need to adjust the ending value to eliminate the prefixes and combine the values properly.\n\t\t\t\tif (e.indexOf(\"=\") !== -1) if (pt.data) {\n\t\t\t\t\tstr = pt.xs0 + pt.data.s;\n\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\tstr += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n\t\t\t\t\t}\n\t\t\t\t\tpt.e = str + pt[\"xs\" + i];\n\t\t\t\t}\n\t\t\t\tif (!pt.l) {\n\t\t\t\t\tpt.type = -1;\n\t\t\t\t\tpt.xs0 = pt.e;\n\t\t\t\t}\n\t\t\t\treturn pt.xfirst || pt;\n\t\t\t},\n\t\t\ti = 9;\n\n\n\t\tp = CSSPropTween.prototype;\n\t\tp.l = p.pr = 0; //length (number of extra properties like xn1, xn2, xn3, etc.\n\t\twhile (--i > 0) {\n\t\t\tp[\"xn\" + i] = 0;\n\t\t\tp[\"xs\" + i] = \"\";\n\t\t}\n\t\tp.xs0 = \"\";\n\t\tp._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n\n\n\t\t/**\n\t\t * Appends and extra tweening value to a CSSPropTween and automatically manages any prefix and suffix strings. The first extra value is stored in the s and c of the main CSSPropTween instance, but thereafter any extras are stored in the xn1, xn2, xn3, etc. The prefixes and suffixes are stored in the xs0, xs1, xs2, etc. properties. For example, if I walk through a clip value like \"rect(10px, 5px, 0px, 20px)\", the values would be stored like this:\n\t\t * xs0:\"rect(\", s:10, xs1:\"px, \", xn1:5, xs2:\"px, \", xn2:0, xs3:\"px, \", xn3:20, xn4:\"px)\"\n\t\t * And they'd all get joined together when the CSSPlugin renders (in the setRatio() method).\n\t\t * @param {string=} pfx Prefix (if any)\n\t\t * @param {!number} s Starting value\n\t\t * @param {!number} c Change in numeric value over the course of the entire tween. For example, if the start is 5 and the end is 100, the change would be 95.\n\t\t * @param {string=} sfx Suffix (if any)\n\t\t * @param {boolean=} r Round (if true).\n\t\t * @param {boolean=} pad If true, this extra value should be separated by the previous one by a space. If there is no previous extra and pad is true, it will automatically drop the space.\n\t\t * @return {CSSPropTween} returns itself so that multiple methods can be chained together.\n\t\t */\n\t\tp.appendXtra = function(pfx, s, c, sfx, r, pad) {\n\t\t\tvar pt = this,\n\t\t\t\tl = pt.l;\n\t\t\tpt[\"xs\" + l] += (pad && (l || pt[\"xs\" + l])) ? \" \" + pfx : pfx || \"\";\n\t\t\tif (!c) if (l !== 0 && !pt.plugin) { //typically we'll combine non-changing values right into the xs to optimize performance, but we don't combine them when there's a plugin that will be tweening the values because it may depend on the values being split apart, like for a bezier, if a value doesn't change between the first and second iteration but then it does on the 3rd, we'll run into trouble because there's no xn slot for that value!\n\t\t\t\tpt[\"xs\" + l] += s + (sfx || \"\");\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t\tpt.l++;\n\t\t\tpt.type = pt.setRatio ? 2 : 1;\n\t\t\tpt[\"xs\" + pt.l] = sfx || \"\";\n\t\t\tif (l > 0) {\n\t\t\t\tpt.data[\"xn\" + l] = s + c;\n\t\t\t\tpt.rxp[\"xn\" + l] = r; //round extra property (we need to tap into this in the _parseToProxy() method)\n\t\t\t\tpt[\"xn\" + l] = s;\n\t\t\t\tif (!pt.plugin) {\n\t\t\t\t\tpt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n\t\t\t\t\tpt.xfirst.xs0 = 0; //just to ensure that the property stays numeric which helps modern browsers speed up processing. Remember, in the setRatio() method, we do pt.t[pt.p] = val + pt.xs0 so if pt.xs0 is \"\" (the default), it'll cast the end value as a string. When a property is a number sometimes and a string sometimes, it prevents the compiler from locking in the data type, slowing things down slightly.\n\t\t\t\t}\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t\tpt.data = {s:s + c};\n\t\t\tpt.rxp = {};\n\t\t\tpt.s = s;\n\t\t\tpt.c = c;\n\t\t\tpt.r = r;\n\t\t\treturn pt;\n\t\t};\n\n\t\t/**\n\t\t * @constructor A SpecialProp is basically a css property that needs to be treated in a non-standard way, like if it may contain a complex value like boxShadow:\"5px 10px 15px rgb(255, 102, 51)\" or if it is associated with another plugin like ThrowPropsPlugin or BezierPlugin. Every SpecialProp is associated with a particular property name like \"boxShadow\" or \"throwProps\" or \"bezier\" and it will intercept those values in the vars object that's passed to the CSSPlugin and handle them accordingly.\n\t\t * @param {!string} p Property name (like \"boxShadow\" or \"throwProps\")\n\t\t * @param {Object=} options An object containing any of the following configuration options:\n\t\t *                      - defaultValue: the default value\n\t\t *                      - parser: A function that should be called when the associated property name is found in the vars. This function should return a CSSPropTween instance and it should ensure that it is properly inserted into the linked list. It will receive 4 paramters: 1) The target, 2) The value defined in the vars, 3) The CSSPlugin instance (whose _firstPT should be used for the linked list), and 4) A computed style object if one was calculated (this is a speed optimization that allows retrieval of starting values quicker)\n\t\t *                      - formatter: a function that formats any value received for this special property (for example, boxShadow could take \"5px 5px red\" and format it to \"5px 5px 0px 0px red\" so that both the beginning and ending values have a common order and quantity of values.)\n\t\t *                      - prefix: if true, we'll determine whether or not this property requires a vendor prefix (like Webkit or Moz or ms or O)\n\t\t *                      - color: set this to true if the value for this SpecialProp may contain color-related values like rgb(), rgba(), etc.\n\t\t *                      - priority: priority in the linked list order. Higher priority SpecialProps will be updated before lower priority ones. The default priority is 0.\n\t\t *                      - multi: if true, the formatter should accommodate a comma-delimited list of values, like boxShadow could have multiple boxShadows listed out.\n\t\t *                      - collapsible: if true, the formatter should treat the value like it's a top/right/bottom/left value that could be collapsed, like \"5px\" would apply to all, \"5px, 10px\" would use 5px for top/bottom and 10px for right/left, etc.\n\t\t *                      - keyword: a special keyword that can [optionally] be found inside the value (like \"inset\" for boxShadow). This allows us to validate beginning/ending values to make sure they match (if the keyword is found in one, it'll be added to the other for consistency by default).\n\t\t */\n\t\tvar SpecialProp = function(p, options) {\n\t\t\t\toptions = options || {};\n\t\t\t\tthis.p = options.prefix ? _checkPropPrefix(p) || p : p;\n\t\t\t\t_specialProps[p] = _specialProps[this.p] = this;\n\t\t\t\tthis.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n\t\t\t\tif (options.parser) {\n\t\t\t\t\tthis.parse = options.parser;\n\t\t\t\t}\n\t\t\t\tthis.clrs = options.color;\n\t\t\t\tthis.multi = options.multi;\n\t\t\t\tthis.keyword = options.keyword;\n\t\t\t\tthis.dflt = options.defaultValue;\n\t\t\t\tthis.allowFunc = options.allowFunc;\n\t\t\t\tthis.pr = options.priority || 0;\n\t\t\t},\n\n\t\t\t//shortcut for creating a new SpecialProp that can accept multiple properties as a comma-delimited list (helps minification). dflt can be an array for multiple values (we don't do a comma-delimited list because the default value may contain commas, like rect(0px,0px,0px,0px)). We attach this method to the SpecialProp class/object instead of using a private _createSpecialProp() method so that we can tap into it externally if necessary, like from another plugin.\n\t\t\t_registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n\t\t\t\tif (typeof(options) !== \"object\") {\n\t\t\t\t\toptions = {parser:defaults}; //to make backwards compatible with older versions of BezierPlugin and ThrowPropsPlugin\n\t\t\t\t}\n\t\t\t\tvar a = p.split(\",\"),\n\t\t\t\t\td = options.defaultValue,\n\t\t\t\t\ti, temp;\n\t\t\t\tdefaults = defaults || [d];\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\toptions.prefix = (i === 0 && options.prefix);\n\t\t\t\t\toptions.defaultValue = defaults[i] || d;\n\t\t\t\t\ttemp = new SpecialProp(a[i], options);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//creates a placeholder special prop for a plugin so that the property gets caught the first time a tween of it is attempted, and at that time it makes the plugin register itself, thus taking over for all future tweens of that property. This allows us to not mandate that things load in a particular order and it also allows us to log() an error that informs the user when they attempt to tween an external plugin-related property without loading its .js file.\n\t\t\t_registerPluginProp = _internals._registerPluginProp = function(p) {\n\t\t\t\tif (!_specialProps[p]) {\n\t\t\t\t\tvar pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n\t\t\t\t\t_registerComplexSpecialProp(p, {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\t\t\tvar pluginClass = _globals.com.greensock.plugins[pluginName];\n\t\t\t\t\t\tif (!pluginClass) {\n\t\t\t\t\t\t\t_log(\"Error: \" + pluginName + \" js file not loaded.\");\n\t\t\t\t\t\t\treturn pt;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpluginClass._cssRegister();\n\t\t\t\t\t\treturn _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n\t\t\t\t\t}});\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tp = SpecialProp.prototype;\n\n\t\t/**\n\t\t * Alias for _parseComplex() that automatically plugs in certain values for this SpecialProp, like its property name, whether or not colors should be sensed, the default value, and priority. It also looks for any keyword that the SpecialProp defines (like \"inset\" for boxShadow) and ensures that the beginning and ending values have the same number of values for SpecialProps where multi is true (like boxShadow and textShadow can have a comma-delimited list)\n\t\t * @param {!Object} t target element\n\t\t * @param {(string|number|object)} b beginning value\n\t\t * @param {(string|number|object)} e ending (destination) value\n\t\t * @param {CSSPropTween=} pt next CSSPropTween in the linked list\n\t\t * @param {TweenPlugin=} plugin If another plugin will be tweening the complex value, that TweenPlugin instance goes here.\n\t\t * @param {function=} setRatio If a custom setRatio() method should be used to handle this complex value, that goes here.\n\t\t * @return {CSSPropTween=} First CSSPropTween in the linked list\n\t\t */\n\t\tp.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n\t\t\tvar kwd = this.keyword,\n\t\t\t\ti, ba, ea, l, bi, ei;\n\t\t\t//if this SpecialProp's value can contain a comma-delimited list of values (like boxShadow or textShadow), we must parse them in a special way, and look for a keyword (like \"inset\" for boxShadow) and ensure that the beginning and ending BOTH have it if the end defines it as such. We also must ensure that there are an equal number of values specified (we can't tween 1 boxShadow to 3 for example)\n\t\t\tif (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n\t\t\t\tba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\tea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t} else if (kwd) {\n\t\t\t\tba = [b];\n\t\t\t\tea = [e];\n\t\t\t}\n\t\t\tif (ea) {\n\t\t\t\tl = (ea.length > ba.length) ? ea.length : ba.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tb = ba[i] = ba[i] || this.dflt;\n\t\t\t\t\te = ea[i] = ea[i] || this.dflt;\n\t\t\t\t\tif (kwd) {\n\t\t\t\t\t\tbi = b.indexOf(kwd);\n\t\t\t\t\t\tei = e.indexOf(kwd);\n\t\t\t\t\t\tif (bi !== ei) {\n\t\t\t\t\t\t\tif (ei === -1) { //if the keyword isn't in the end value, remove it from the beginning one.\n\t\t\t\t\t\t\t\tba[i] = ba[i].split(kwd).join(\"\");\n\t\t\t\t\t\t\t} else if (bi === -1) { //if the keyword isn't in the beginning, add it.\n\t\t\t\t\t\t\t\tba[i] += \" \" + kwd;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tb = ba.join(\", \");\n\t\t\t\te = ea.join(\", \");\n\t\t\t}\n\t\t\treturn _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n\t\t};\n\n\t\t/**\n\t\t * Accepts a target and end value and spits back a CSSPropTween that has been inserted into the CSSPlugin's linked list and conforms with all the conventions we use internally, like type:-1, 0, 1, or 2, setting up any extra property tweens, priority, etc. For example, if we have a boxShadow SpecialProp and call:\n\t\t * this._firstPT = sp.parse(element, \"5px 10px 20px rgb(2550,102,51)\", \"boxShadow\", this);\n\t\t * It should figure out the starting value of the element's boxShadow, compare it to the provided end value and create all the necessary CSSPropTweens of the appropriate types to tween the boxShadow. The CSSPropTween that gets spit back should already be inserted into the linked list (the 4th parameter is the current head, so prepend to that).\n\t\t * @param {!Object} t Target object whose property is being tweened\n\t\t * @param {Object} e End value as provided in the vars object (typically a string, but not always - like a throwProps would be an object).\n\t\t * @param {!string} p Property name\n\t\t * @param {!CSSPlugin} cssp The CSSPlugin instance that should be associated with this tween.\n\t\t * @param {?CSSPropTween} pt The CSSPropTween that is the current head of the linked list (we'll prepend to it)\n\t\t * @param {TweenPlugin=} plugin If a plugin will be used to tween the parsed value, this is the plugin instance.\n\t\t * @param {Object=} vars Original vars object that contains the data for parsing.\n\t\t * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parse() call.\n\t\t */\n\t\tp.parse = function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\treturn this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n\t\t};\n\n\t\t/**\n\t\t * Registers a special property that should be intercepted from any \"css\" objects defined in tweens. This allows you to handle them however you want without CSSPlugin doing it for you. The 2nd parameter should be a function that accepts 3 parameters:\n\t\t *  1) Target object whose property should be tweened (typically a DOM element)\n\t\t *  2) The end/destination value (could be a string, number, object, or whatever you want)\n\t\t *  3) The tween instance (you probably don't need to worry about this, but it can be useful for looking up information like the duration)\n\t\t *\n\t\t * Then, your function should return a function which will be called each time the tween gets rendered, passing a numeric \"ratio\" parameter to your function that indicates the change factor (usually between 0 and 1). For example:\n\t\t *\n\t\t * CSSPlugin.registerSpecialProp(\"myCustomProp\", function(target, value, tween) {\n\t\t *      var start = target.style.width;\n\t\t *      return function(ratio) {\n\t\t *              target.style.width = (start + value * ratio) + \"px\";\n\t\t *              console.log(\"set width to \" + target.style.width);\n\t\t *          }\n\t\t * }, 0);\n\t\t *\n\t\t * Then, when I do this tween, it will trigger my special property:\n\t\t *\n\t\t * TweenLite.to(element, 1, {css:{myCustomProp:100}});\n\t\t *\n\t\t * In the example, of course, we're just changing the width, but you can do anything you want.\n\t\t *\n\t\t * @param {!string} name Property name (or comma-delimited list of property names) that should be intercepted and handled by your function. For example, if I define \"myCustomProp\", then it would handle that portion of the following tween: TweenLite.to(element, 1, {css:{myCustomProp:100}})\n\t\t * @param {!function(Object, Object, Object, string):function(number)} onInitTween The function that will be called when a tween of this special property is performed. The function will receive 4 parameters: 1) Target object that should be tweened, 2) Value that was passed to the tween, 3) The tween instance itself (rarely used), and 4) The property name that's being tweened. Your function should return a function that should be called on every update of the tween. That function will receive a single parameter that is a \"change factor\" value (typically between 0 and 1) indicating the amount of change as a ratio. You can use this to determine how to set the values appropriately in your function.\n\t\t * @param {number=} priority Priority that helps the engine determine the order in which to set the properties (default: 0). Higher priority properties will be updated before lower priority ones.\n\t\t */\n\t\tCSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n\t\t\t_registerComplexSpecialProp(name, {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\tvar rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n\t\t\t\trv.plugin = plugin;\n\t\t\t\trv.setRatio = onInitTween(t, e, cssp._tween, p);\n\t\t\t\treturn rv;\n\t\t\t}, priority:priority});\n\t\t};\n\n\n\n\n\n\n\t\t//transform-related methods and properties\n\t\tCSSPlugin.useSVGTransformAttr = true; //Safari and Firefox both have some rendering bugs when applying CSS transforms to SVG elements, so default to using the \"transform\" attribute instead (users can override this).\n\t\tvar _transformProps = (\"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\").split(\",\"),\n\t\t\t_transformProp = _checkPropPrefix(\"transform\"), //the Javascript (camelCase) transform property, like msTransform, WebkitTransform, MozTransform, or OTransform.\n\t\t\t_transformPropCSS = _prefixCSS + \"transform\",\n\t\t\t_transformOriginProp = _checkPropPrefix(\"transformOrigin\"),\n\t\t\t_supports3D = (_checkPropPrefix(\"perspective\") !== null),\n\t\t\tTransform = _internals.Transform = function() {\n\t\t\t\tthis.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n\t\t\t\tthis.force3D = (CSSPlugin.defaultForce3D === false || !_supports3D) ? false : CSSPlugin.defaultForce3D || \"auto\";\n\t\t\t},\n\t\t\t_SVGElement = _gsScope.SVGElement,\n\t\t\t_useSVGTransformAttr,\n\t\t\t//Some browsers (like Firefox and IE) don't honor transform-origin properly in SVG elements, so we need to manually adjust the matrix accordingly. We feature detect here rather than always doing the conversion for certain browsers because they may fix the problem at some point in the future.\n\n\t\t\t_createSVG = function(type, container, attributes) {\n\t\t\t\tvar element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type),\n\t\t\t\t\treg = /([a-z])([A-Z])/g,\n\t\t\t\t\tp;\n\t\t\t\tfor (p in attributes) {\n\t\t\t\t\telement.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t\t\t\t}\n\t\t\t\tcontainer.appendChild(element);\n\t\t\t\treturn element;\n\t\t\t},\n\t\t\t_docElement = _doc.documentElement || {},\n\t\t\t_forceSVGTransformAttr = (function() {\n\t\t\t\t//IE and Android stock don't support CSS transforms on SVG elements, so we must write them to the \"transform\" attribute. We populate this variable in the _parseTransform() method, and only if/when we come across an SVG element\n\t\t\t\tvar force = _ieVers || (/Android/i.test(_agent) && !_gsScope.chrome),\n\t\t\t\t\tsvg, rect, width;\n\t\t\t\tif (_doc.createElementNS && _docElement.appendChild && !force) { //IE8 and earlier doesn't support SVG anyway\n\t\t\t\t\tsvg = _createSVG(\"svg\", _docElement);\n\t\t\t\t\trect = _createSVG(\"rect\", svg, {width:100, height:50, x:100});\n\t\t\t\t\twidth = rect.getBoundingClientRect().width;\n\t\t\t\t\trect.style[_transformOriginProp] = \"50% 50%\";\n\t\t\t\t\trect.style[_transformProp] = \"scaleX(0.5)\";\n\t\t\t\t\tforce = (width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D)); //note: Firefox fails the test even though it does support CSS transforms in 3D. Since we can't push 3D stuff into the transform attribute, we force Firefox to pass the test here (as long as it does truly support 3D).\n\t\t\t\t\t_docElement.removeChild(svg);\n\t\t\t\t}\n\t\t\t\treturn force;\n\t\t\t})(),\n\t\t\t_parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n\t\t\t\tvar tm = e._gsTransform,\n\t\t\t\t\tm = _getMatrix(e, true),\n\t\t\t\t\tv, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n\t\t\t\tif (tm) {\n\t\t\t\t\txOriginOld = tm.xOrigin; //record the original values before we alter them.\n\t\t\t\t\tyOriginOld = tm.yOrigin;\n\t\t\t\t}\n\t\t\t\tif (!absolute || (v = absolute.split(\" \")).length < 2) {\n\t\t\t\t\tb = e.getBBox();\n\t\t\t\t\tif (b.x === 0 && b.y === 0 && b.width + b.height === 0) { //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.\n\t\t\t\t\t\tb = {x: parseFloat(e.hasAttribute(\"x\") ? e.getAttribute(\"x\") : e.hasAttribute(\"cx\") ? e.getAttribute(\"cx\") : 0) || 0, y: parseFloat(e.hasAttribute(\"y\") ? e.getAttribute(\"y\") : e.hasAttribute(\"cy\") ? e.getAttribute(\"cy\") : 0) || 0, width:0, height:0};\n\t\t\t\t\t}\n\t\t\t\t\tlocal = _parsePosition(local).split(\" \");\n\t\t\t\t\tv = [(local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x,\n\t\t\t\t\t\t (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y];\n\t\t\t\t}\n\t\t\t\tdecoratee.xOrigin = xOrigin = parseFloat(v[0]);\n\t\t\t\tdecoratee.yOrigin = yOrigin = parseFloat(v[1]);\n\t\t\t\tif (absolute && m !== _identity2DMatrix) { //if svgOrigin is being set, we must invert the matrix and determine where the absolute point is, factoring in the current transforms. Otherwise, the svgOrigin would be based on the element's non-transformed position on the canvas.\n\t\t\t\t\ta = m[0];\n\t\t\t\t\tb = m[1];\n\t\t\t\t\tc = m[2];\n\t\t\t\t\td = m[3];\n\t\t\t\t\ttx = m[4];\n\t\t\t\t\tty = m[5];\n\t\t\t\t\tdeterminant = (a * d - b * c);\n\t\t\t\t\tif (determinant) { //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.\n\t\t\t\t\t\tx = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + ((c * ty - d * tx) / determinant);\n\t\t\t\t\t\ty = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - ((a * ty - b * tx) / determinant);\n\t\t\t\t\t\txOrigin = decoratee.xOrigin = v[0] = x;\n\t\t\t\t\t\tyOrigin = decoratee.yOrigin = v[1] = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (tm) { //avoid jump when transformOrigin is changed - adjust the x/y values accordingly\n\t\t\t\t\tif (skipRecord) {\n\t\t\t\t\t\tdecoratee.xOffset = tm.xOffset;\n\t\t\t\t\t\tdecoratee.yOffset = tm.yOffset;\n\t\t\t\t\t\ttm = decoratee;\n\t\t\t\t\t}\n\t\t\t\t\tif (smoothOrigin || (smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false)) {\n\t\t\t\t\t\tx = xOrigin - xOriginOld;\n\t\t\t\t\t\ty = yOrigin - yOriginOld;\n\t\t\t\t\t\t//originally, we simply adjusted the x and y values, but that would cause problems if, for example, you created a rotational tween part-way through an x/y tween. Managing the offset in a separate variable gives us ultimate flexibility.\n\t\t\t\t\t\t//tm.x -= x - (x * m[0] + y * m[2]);\n\t\t\t\t\t\t//tm.y -= y - (x * m[1] + y * m[3]);\n\t\t\t\t\t\ttm.xOffset += (x * m[0] + y * m[2]) - x;\n\t\t\t\t\t\ttm.yOffset += (x * m[1] + y * m[3]) - y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttm.xOffset = tm.yOffset = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skipRecord) {\n\t\t\t\t\te.setAttribute(\"data-svg-origin\", v.join(\" \"));\n\t\t\t\t}\n\t\t\t},\n\t\t\t_getBBoxHack = function(swapIfPossible) { //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).\n\t\t\t\tvar svg = _createElement(\"svg\", (this.ownerSVGElement && this.ownerSVGElement.getAttribute(\"xmlns\")) || \"http://www.w3.org/2000/svg\"),\n\t\t\t\t\toldParent = this.parentNode,\n\t\t\t\t\toldSibling = this.nextSibling,\n\t\t\t\t\toldCSS = this.style.cssText,\n\t\t\t\t\tbbox;\n\t\t\t\t_docElement.appendChild(svg);\n\t\t\t\tsvg.appendChild(this);\n\t\t\t\tthis.style.display = \"block\";\n\t\t\t\tif (swapIfPossible) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbbox = this.getBBox();\n\t\t\t\t\t\tthis._originalGetBBox = this.getBBox;\n\t\t\t\t\t\tthis.getBBox = _getBBoxHack;\n\t\t\t\t\t} catch (e) { }\n\t\t\t\t} else if (this._originalGetBBox) {\n\t\t\t\t\tbbox = this._originalGetBBox();\n\t\t\t\t}\n\t\t\t\tif (oldSibling) {\n\t\t\t\t\toldParent.insertBefore(this, oldSibling);\n\t\t\t\t} else {\n\t\t\t\t\toldParent.appendChild(this);\n\t\t\t\t}\n\t\t\t\t_docElement.removeChild(svg);\n\t\t\t\tthis.style.cssText = oldCSS;\n\t\t\t\treturn bbox;\n\t\t\t},\n\t\t\t_getBBox = function(e) {\n\t\t\t\ttry {\n\t\t\t\t\treturn e.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn _getBBoxHack.call(e, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_isSVG = function(e) { //reports if the element is an SVG on which getBBox() actually works\n\t\t\t\treturn !!(_SVGElement && e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));\n\t\t\t},\n\t\t\t_identity2DMatrix = [1,0,0,1,0,0],\n\t\t\t_getMatrix = function(e, force2D) {\n\t\t\t\tvar tm = e._gsTransform || new Transform(),\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\tstyle = e.style,\n\t\t\t\t\tisDefault, s, m, n, dec, nextSibling, parent;\n\t\t\t\tif (_transformProp) {\n\t\t\t\t\ts = _getStyle(e, _transformPropCSS, null, true);\n\t\t\t\t} else if (e.currentStyle) {\n\t\t\t\t\t//for older versions of IE, we need to interpret the filter portion that is in the format: progid:DXImageTransform.Microsoft.Matrix(M11=6.123233995736766e-17, M12=-1, M21=1, M22=6.123233995736766e-17, sizingMethod='auto expand') Notice that we need to swap b and c compared to a normal matrix.\n\t\t\t\t\ts = e.currentStyle.filter.match(_ieGetMatrixExp);\n\t\t\t\t\ts = (s && s.length === 4) ? [s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), (tm.x || 0), (tm.y || 0)].join(\",\") : \"\";\n\t\t\t\t}\n\t\t\t\tisDefault = (!s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\");\n\t\t\t\tif (_transformProp && isDefault && !e.offsetParent && e !== _docElement) { //note: if offsetParent is null, that means the element isn't in the normal document flow, like if it has display:none or one of its ancestors has display:none). Firefox returns null for getComputedStyle() if the element is in an iframe that has display:none. https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\t\t\t\t\t//browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not \"none\". Firefox and Microsoft browsers have a partial bug where they'll report transforms even if display:none BUT not any percentage-based values like translate(-50%, 8px) will be reported as if it's translate(0, 8px).\n\t\t\t\t\tn = style.display;\n\t\t\t\t\tstyle.display = \"block\";\n\t\t\t\t\tparent = e.parentNode;\n\t\t\t\t\tif (!parent || !e.offsetParent) {\n\t\t\t\t\t\tdec = 1; //flag\n\t\t\t\t\t\tnextSibling = e.nextSibling;\n\t\t\t\t\t\t_docElement.appendChild(e); //we must add it to the DOM in order to get values properly\n\t\t\t\t\t}\n\t\t\t\t\ts = _getStyle(e, _transformPropCSS, null, true);\n\t\t\t\t\tisDefault = (!s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\");\n\t\t\t\t\tif (n) {\n\t\t\t\t\t\tstyle.display = n;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_removeProp(style, \"display\");\n\t\t\t\t\t}\n\t\t\t\t\tif (dec) {\n\t\t\t\t\t\tif (nextSibling) {\n\t\t\t\t\t\t\tparent.insertBefore(e, nextSibling);\n\t\t\t\t\t\t} else if (parent) {\n\t\t\t\t\t\t\tparent.appendChild(e);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_docElement.removeChild(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (tm.svg || (e.getCTM && _isSVG(e))) {\n\t\t\t\t\tif (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) { //some browsers (like Chrome 40) don't correctly report transforms that are applied inline on an SVG element (they don't get included in the computed style), so we double-check here and accept matrix values\n\t\t\t\t\t\ts = style[_transformProp];\n\t\t\t\t\t\tisDefault = 0;\n\t\t\t\t\t}\n\t\t\t\t\tm = e.getAttribute(\"transform\");\n\t\t\t\t\tif (isDefault && m) {\n\t\t\t\t\t\tm = e.transform.baseVal.consolidate().matrix; //ensures that even complex values like \"translate(50,60) rotate(135,0,0)\" are parsed because it mashes it into a matrix.\n\t\t\t\t\t\ts = \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + m.e + \",\" + m.f + \")\";\n\t\t\t\t\t\tisDefault = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isDefault) {\n\t\t\t\t\treturn _identity2DMatrix;\n\t\t\t\t}\n\t\t\t\t//split the matrix values out into an array (m for matrix)\n\t\t\t\tm = (s || \"\").match(_numExp) || [];\n\t\t\t\ti = m.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tn = Number(m[i]);\n\t\t\t\t\tm[i] = (dec = n - (n |= 0)) ? ((dec * rnd + (dec < 0 ? -0.5 : 0.5)) | 0) / rnd + n : n; //convert strings to Numbers and round to 5 decimal places to avoid issues with tiny numbers. Roughly 20x faster than Number.toFixed(). We also must make sure to round before dividing so that values like 0.9999999999 become 1 to avoid glitches in browser rendering and interpretation of flipped/rotated 3D matrices. And don't just multiply the number by rnd, floor it, and then divide by rnd because the bitwise operations max out at a 32-bit signed integer, thus it could get clipped at a relatively low value (like 22,000.00000 for example).\n\t\t\t\t}\n\t\t\t\treturn (force2D && m.length > 6) ? [m[0], m[1], m[4], m[5], m[12], m[13]] : m;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Parses the transform values for an element, returning an object with x, y, z, scaleX, scaleY, scaleZ, rotation, rotationX, rotationY, skewX, and skewY properties. Note: by default (for performance reasons), all skewing is combined into skewX and rotation but skewY still has a place in the transform object so that we can record how much of the skew is attributed to skewX vs skewY. Remember, a skewY of 10 looks the same as a rotation of 10 and skewX of -10.\n\t\t\t * @param {!Object} t target element\n\t\t\t * @param {Object=} cs computed style object (optional)\n\t\t\t * @param {boolean=} rec if true, the transform values will be recorded to the target element's _gsTransform object, like target._gsTransform = {x:0, y:0, z:0, scaleX:1...}\n\t\t\t * @param {boolean=} parse if true, we'll ignore any _gsTransform values that already exist on the element, and force a reparsing of the css (calculated style)\n\t\t\t * @return {object} object containing all of the transform properties/values like {x:0, y:0, z:0, scaleX:1...}\n\t\t\t */\n\t\t\t_getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n\t\t\t\tif (t._gsTransform && rec && !parse) {\n\t\t\t\t\treturn t._gsTransform; //if the element already has a _gsTransform, use that. Note: some browsers don't accurately return the calculated style for the transform (particularly for SVG), so it's almost always safest to just use the values we've already applied rather than re-parsing things.\n\t\t\t\t}\n\t\t\t\tvar tm = rec ? t._gsTransform || new Transform() : new Transform(),\n\t\t\t\t\tinvX = (tm.scaleX < 0), //in order to interpret things properly, we need to know if the user applied a negative scaleX previously so that we can adjust the rotation and skewX accordingly. Otherwise, if we always interpret a flipped matrix as affecting scaleY and the user only wants to tween the scaleX on multiple sequential tweens, it would keep the negative scaleY without that being the user's intent.\n\t\t\t\t\tmin = 0.00002,\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\tzOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin  || 0 : 0,\n\t\t\t\t\tdefaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0,\n\t\t\t\t\tm, i, scaleX, scaleY, rotation, skewX;\n\n\t\t\t\ttm.svg = !!(t.getCTM && _isSVG(t));\n\t\t\t\tif (tm.svg) {\n\t\t\t\t\t_parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n\t\t\t\t\t_useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n\t\t\t\t}\n\t\t\t\tm = _getMatrix(t);\n\t\t\t\tif (m !== _identity2DMatrix) {\n\n\t\t\t\t\tif (m.length === 16) {\n\t\t\t\t\t\t//we'll only look at these position-related 6 variables first because if x/y/z all match, it's relatively safe to assume we don't need to re-parse everything which risks losing important rotational information (like rotationX:180 plus rotationY:180 would look the same as rotation:180 - there's no way to know for sure which direction was taken based solely on the matrix3d() values)\n\t\t\t\t\t\tvar a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3],\n\t\t\t\t\t\t\ta12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7],\n\t\t\t\t\t\t\ta13 = m[8], a23 = m[9], a33 = m[10],\n\t\t\t\t\t\t\ta14 = m[12], a24 = m[13], a34 = m[14],\n\t\t\t\t\t\t\ta43 = m[11],\n\t\t\t\t\t\t\tangle = Math.atan2(a32, a33),\n\t\t\t\t\t\t\tt1, t2, t3, t4, cos, sin;\n\t\t\t\t\t\t//we manually compensate for non-zero z component of transformOrigin to work around bugs in Safari\n\t\t\t\t\t\tif (tm.zOrigin) {\n\t\t\t\t\t\t\ta34 = -tm.zOrigin;\n\t\t\t\t\t\t\ta14 = a13*a34-m[12];\n\t\t\t\t\t\t\ta24 = a23*a34-m[13];\n\t\t\t\t\t\t\ta34 = a33*a34+tm.zOrigin-m[14];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//note for possible future consolidation: rotationX: Math.atan2(a32, a33), rotationY: Math.atan2(-a31, Math.sqrt(a33 * a33 + a32 * a32)), rotation: Math.atan2(a21, a11), skew: Math.atan2(a12, a22). However, it doesn't seem to be quite as reliable as the full-on backwards rotation procedure.\n\t\t\t\t\t\ttm.rotationX = angle * _RAD2DEG;\n\t\t\t\t\t\t//rotationX\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\tt1 = a12*cos+a13*sin;\n\t\t\t\t\t\t\tt2 = a22*cos+a23*sin;\n\t\t\t\t\t\t\tt3 = a32*cos+a33*sin;\n\t\t\t\t\t\t\ta13 = a12*-sin+a13*cos;\n\t\t\t\t\t\t\ta23 = a22*-sin+a23*cos;\n\t\t\t\t\t\t\ta33 = a32*-sin+a33*cos;\n\t\t\t\t\t\t\ta43 = a42*-sin+a43*cos;\n\t\t\t\t\t\t\ta12 = t1;\n\t\t\t\t\t\t\ta22 = t2;\n\t\t\t\t\t\t\ta32 = t3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotationY\n\t\t\t\t\t\tangle = Math.atan2(-a31, a33);\n\t\t\t\t\t\ttm.rotationY = angle * _RAD2DEG;\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\tt1 = a11*cos-a13*sin;\n\t\t\t\t\t\t\tt2 = a21*cos-a23*sin;\n\t\t\t\t\t\t\tt3 = a31*cos-a33*sin;\n\t\t\t\t\t\t\ta23 = a21*sin+a23*cos;\n\t\t\t\t\t\t\ta33 = a31*sin+a33*cos;\n\t\t\t\t\t\t\ta43 = a41*sin+a43*cos;\n\t\t\t\t\t\t\ta11 = t1;\n\t\t\t\t\t\t\ta21 = t2;\n\t\t\t\t\t\t\ta31 = t3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotationZ\n\t\t\t\t\t\tangle = Math.atan2(a21, a11);\n\t\t\t\t\t\ttm.rotation = angle * _RAD2DEG;\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\t\t\tt1 = a11*cos+a21*sin;\n\t\t\t\t\t\t\tt2 = a12*cos+a22*sin;\n\t\t\t\t\t\t\tt3 = a13*cos+a23*sin;\n\t\t\t\t\t\t\ta21 = a21*cos-a11*sin;\n\t\t\t\t\t\t\ta22 = a22*cos-a12*sin;\n\t\t\t\t\t\t\ta23 = a23*cos-a13*sin;\n\t\t\t\t\t\t\ta11 = t1;\n\t\t\t\t\t\t\ta12 = t2;\n\t\t\t\t\t\t\ta13 = t3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) { //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.\n\t\t\t\t\t\t\ttm.rotationX = tm.rotation = 0;\n\t\t\t\t\t\t\ttm.rotationY = 180 - tm.rotationY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//skewX\n\t\t\t\t\t\tangle = Math.atan2(a12, a22);\n\n\t\t\t\t\t\t//scales\n\t\t\t\t\t\ttm.scaleX = ((Math.sqrt(a11 * a11 + a21 * a21 + a31 * a31) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ttm.scaleY = ((Math.sqrt(a22 * a22 + a32 * a32) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ttm.scaleZ = ((Math.sqrt(a13 * a13 + a23 * a23 + a33 * a33) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ta11 /= tm.scaleX;\n\t\t\t\t\t\ta12 /= tm.scaleY;\n\t\t\t\t\t\ta21 /= tm.scaleX;\n\t\t\t\t\t\ta22 /= tm.scaleY;\n\t\t\t\t\t\tif (Math.abs(angle) > min) {\n\t\t\t\t\t\t\ttm.skewX = angle * _RAD2DEG;\n\t\t\t\t\t\t\ta12 = 0; //unskews\n\t\t\t\t\t\t\tif (tm.skewType !== \"simple\") {\n\t\t\t\t\t\t\t\ttm.scaleY *= 1 / Math.cos(angle); //by default, we compensate the scale based on the skew so that the element maintains a similar proportion when skewed, so we have to alter the scaleY here accordingly to match the default (non-adjusted) skewing that CSS does (stretching more and more as it skews).\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttm.skewX = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* //for testing purposes\n\t\t\t\t\t\tvar transform = \"matrix3d(\",\n\t\t\t\t\t\t\tcomma = \",\",\n\t\t\t\t\t\t\tzero = \"0\";\n\t\t\t\t\t\ta13 /= tm.scaleZ;\n\t\t\t\t\t\ta23 /= tm.scaleZ;\n\t\t\t\t\t\ta31 /= tm.scaleX;\n\t\t\t\t\t\ta32 /= tm.scaleY;\n\t\t\t\t\t\ta33 /= tm.scaleZ;\n\t\t\t\t\t\ttransform += ((a11 < min && a11 > -min) ? zero : a11) + comma + ((a21 < min && a21 > -min) ? zero : a21) + comma + ((a31 < min && a31 > -min) ? zero : a31);\n\t\t\t\t\t\ttransform += comma + ((a41 < min && a41 > -min) ? zero : a41) + comma + ((a12 < min && a12 > -min) ? zero : a12) + comma + ((a22 < min && a22 > -min) ? zero : a22);\n\t\t\t\t\t\ttransform += comma + ((a32 < min && a32 > -min) ? zero : a32) + comma + ((a42 < min && a42 > -min) ? zero : a42) + comma + ((a13 < min && a13 > -min) ? zero : a13);\n\t\t\t\t\t\ttransform += comma + ((a23 < min && a23 > -min) ? zero : a23) + comma + ((a33 < min && a33 > -min) ? zero : a33) + comma + ((a43 < min && a43 > -min) ? zero : a43) + comma;\n\t\t\t\t\t\ttransform += a14 + comma + a24 + comma + a34 + comma + (tm.perspective ? (1 + (-a34 / tm.perspective)) : 1) + \")\";\n\t\t\t\t\t\tconsole.log(transform);\n\t\t\t\t\t\tdocument.querySelector(\".test\").style[_transformProp] = transform;\n\t\t\t\t\t\t*/\n\n\t\t\t\t\t\ttm.perspective = a43 ? 1 / ((a43 < 0) ? -a43 : a43) : 0;\n\t\t\t\t\t\ttm.x = a14;\n\t\t\t\t\t\ttm.y = a24;\n\t\t\t\t\t\ttm.z = a34;\n\t\t\t\t\t\tif (tm.svg) {\n\t\t\t\t\t\t\ttm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n\t\t\t\t\t\t\ttm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ((!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || (!tm.rotationX && !tm.rotationY))) { //sometimes a 6-element matrix is returned even when we performed 3D transforms, like if rotationX and rotationY are 180. In cases like this, we still need to honor the 3D transforms. If we just rely on the 2D info, it could affect how the data is interpreted, like scaleY might get set to -1 or rotation could get offset by 180 degrees. For example, do a TweenLite.to(element, 1, {css:{rotationX:180, rotationY:180}}) and then later, TweenLite.to(element, 1, {css:{rotationX:0}}) and without this conditional logic in place, it'd jump to a state of being unrotated when the 2nd tween starts. Then again, we need to honor the fact that the user COULD alter the transforms outside of CSSPlugin, like by manually applying new css, so we try to sense that by looking at x and y because if those changed, we know the changes were made outside CSSPlugin and we force a reinterpretation of the matrix values. Also, in Webkit browsers, if the element's \"display\" is \"none\", its calculated style value will always return empty, so if we've already recorded the values in the _gsTransform object, we'll just rely on those.\n\t\t\t\t\t\tvar k = (m.length >= 6),\n\t\t\t\t\t\t\ta = k ? m[0] : 1,\n\t\t\t\t\t\t\tb = m[1] || 0,\n\t\t\t\t\t\t\tc = m[2] || 0,\n\t\t\t\t\t\t\td = k ? m[3] : 1;\n\t\t\t\t\t\ttm.x = m[4] || 0;\n\t\t\t\t\t\ttm.y = m[5] || 0;\n\t\t\t\t\t\tscaleX = Math.sqrt(a * a + b * b);\n\t\t\t\t\t\tscaleY = Math.sqrt(d * d + c * c);\n\t\t\t\t\t\trotation = (a || b) ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).\n\t\t\t\t\t\tskewX = (c || d) ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n\t\t\t\t\t\ttm.scaleX = scaleX;\n\t\t\t\t\t\ttm.scaleY = scaleY;\n\t\t\t\t\t\ttm.rotation = rotation;\n\t\t\t\t\t\ttm.skewX = skewX;\n\t\t\t\t\t\tif (_supports3D) {\n\t\t\t\t\t\t\ttm.rotationX = tm.rotationY = tm.z = 0;\n\t\t\t\t\t\t\ttm.perspective = defaultTransformPerspective;\n\t\t\t\t\t\t\ttm.scaleZ = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tm.svg) {\n\t\t\t\t\t\t\ttm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n\t\t\t\t\t\t\ttm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n\t\t\t\t\t\tif (invX) {\n\t\t\t\t\t\t\ttm.scaleX *= -1;\n\t\t\t\t\t\t\ttm.skewX += (tm.rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t\ttm.rotation += (tm.rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttm.scaleY *= -1;\n\t\t\t\t\t\t\ttm.skewX += (tm.skewX <= 0) ? 180 : -180;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttm.zOrigin = zOrigin;\n\t\t\t\t\t//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the \"e-\" towards the end) and would render the object slightly off. So we round to 0 in these cases. The conditional logic here is faster than calling Math.abs(). Also, browsers tend to render a SLIGHTLY rotated object in a fuzzy way, so we need to snap to exactly 0 when appropriate.\n\t\t\t\t\tfor (i in tm) {\n\t\t\t\t\t\tif (tm[i] < min) if (tm[i] > -min) {\n\t\t\t\t\t\t\ttm[i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//DEBUG: _log(\"parsed rotation of \" + t.getAttribute(\"id\")+\": \"+(tm.rotationX)+\", \"+(tm.rotationY)+\", \"+(tm.rotation)+\", scale: \"+tm.scaleX+\", \"+tm.scaleY+\", \"+tm.scaleZ+\", position: \"+tm.x+\", \"+tm.y+\", \"+tm.z+\", perspective: \"+tm.perspective+ \", origin: \"+ tm.xOrigin+ \",\"+ tm.yOrigin);\n\t\t\t\tif (rec) {\n\t\t\t\t\tt._gsTransform = tm; //record to the object's _gsTransform which we use so that tweens can control individual properties independently (we need all the properties to accurately recompose the matrix in the setRatio() method)\n\t\t\t\t\tif (tm.svg) { //if we're supposed to apply transforms to the SVG element's \"transform\" attribute, make sure there aren't any CSS transforms applied or they'll override the attribute ones. Also clear the transform attribute if we're using CSS, just to be clean.\n\t\t\t\t\t\tif (_useSVGTransformAttr && t.style[_transformProp]) {\n\t\t\t\t\t\t\tTweenLite.delayedCall(0.001, function(){ //if we apply this right away (before anything has rendered), we risk there being no transforms for a brief moment and it also interferes with adjusting the transformOrigin in a tween with immediateRender:true (it'd try reading the matrix and it wouldn't have the appropriate data in place because we just removed it).\n\t\t\t\t\t\t\t\t_removeProp(t.style, _transformProp);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n\t\t\t\t\t\t\tTweenLite.delayedCall(0.001, function(){\n\t\t\t\t\t\t\t\tt.removeAttribute(\"transform\");\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn tm;\n\t\t\t},\n\n\t\t\t//for setting 2D transforms in IE6, IE7, and IE8 (must use a \"filter\" to emulate the behavior of modern day browser transforms)\n\t\t\t_setIETransformRatio = function(v) {\n\t\t\t\tvar t = this.data, //refers to the element's _gsTransform object\n\t\t\t\t\tang = -t.rotation * _DEG2RAD,\n\t\t\t\t\tskew = ang + t.skewX * _DEG2RAD,\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\ta = ((Math.cos(ang) * t.scaleX * rnd) | 0) / rnd,\n\t\t\t\t\tb = ((Math.sin(ang) * t.scaleX * rnd) | 0) / rnd,\n\t\t\t\t\tc = ((Math.sin(skew) * -t.scaleY * rnd) | 0) / rnd,\n\t\t\t\t\td = ((Math.cos(skew) * t.scaleY * rnd) | 0) / rnd,\n\t\t\t\t\tstyle = this.t.style,\n\t\t\t\t\tcs = this.t.currentStyle,\n\t\t\t\t\tfilters, val;\n\t\t\t\tif (!cs) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tval = b; //just for swapping the variables an inverting them (reused \"val\" to avoid creating another variable in memory). IE's filter matrix uses a non-standard matrix configuration (angle goes the opposite way, and b and c are reversed and inverted)\n\t\t\t\tb = -c;\n\t\t\t\tc = -val;\n\t\t\t\tfilters = cs.filter;\n\t\t\t\tstyle.filter = \"\"; //remove filters so that we can accurately measure offsetWidth/offsetHeight\n\t\t\t\tvar w = this.t.offsetWidth,\n\t\t\t\t\th = this.t.offsetHeight,\n\t\t\t\t\tclip = (cs.position !== \"absolute\"),\n\t\t\t\t\tm = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d,\n\t\t\t\t\tox = t.x + (w * t.xPercent / 100),\n\t\t\t\t\toy = t.y + (h * t.yPercent / 100),\n\t\t\t\t\tdx, dy;\n\n\t\t\t\t//if transformOrigin is being used, adjust the offset x and y\n\t\t\t\tif (t.ox != null) {\n\t\t\t\t\tdx = ((t.oxp) ? w * t.ox * 0.01 : t.ox) - w / 2;\n\t\t\t\t\tdy = ((t.oyp) ? h * t.oy * 0.01 : t.oy) - h / 2;\n\t\t\t\t\tox += dx - (dx * a + dy * b);\n\t\t\t\t\toy += dy - (dx * c + dy * d);\n\t\t\t\t}\n\n\t\t\t\tif (!clip) {\n\t\t\t\t\tm += \", sizingMethod='auto expand')\";\n\t\t\t\t} else {\n\t\t\t\t\tdx = (w / 2);\n\t\t\t\t\tdy = (h / 2);\n\t\t\t\t\t//translate to ensure that transformations occur around the correct origin (default is center).\n\t\t\t\t\tm += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n\t\t\t\t}\n\t\t\t\tif (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n\t\t\t\t\tstyle.filter = filters.replace(_ieSetMatrixExp, m);\n\t\t\t\t} else {\n\t\t\t\t\tstyle.filter = m + \" \" + filters; //we must always put the transform/matrix FIRST (before alpha(opacity=xx)) to avoid an IE bug that slices part of the object when rotation is applied with alpha.\n\t\t\t\t}\n\n\t\t\t\t//at the end or beginning of the tween, if the matrix is normal (1, 0, 0, 1) and opacity is 100 (or doesn't exist), remove the filter to improve browser performance.\n\t\t\t\tif (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n\t\t\t\t\tstyle.removeAttribute(\"filter\");\n\t\t\t\t}\n\n\t\t\t\t//we must set the margins AFTER applying the filter in order to avoid some bugs in IE8 that could (in rare scenarios) cause them to be ignored intermittently (vibration).\n\t\t\t\tif (!clip) {\n\t\t\t\t\tvar mult = (_ieVers < 8) ? 1 : -1, //in Internet Explorer 7 and before, the box model is broken, causing the browser to treat the width/height of the actual rotated filtered image as the width/height of the box itself, but Microsoft corrected that in IE8. We must use a negative offset in IE8 on the right/bottom\n\t\t\t\t\t\tmarg, prop, dif;\n\t\t\t\t\tdx = t.ieOffsetX || 0;\n\t\t\t\t\tdy = t.ieOffsetY || 0;\n\t\t\t\t\tt.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n\t\t\t\t\tt.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n\t\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\t\tprop = _margins[i];\n\t\t\t\t\t\tmarg = cs[prop];\n\t\t\t\t\t\t//we need to get the current margin in case it is being tweened separately (we want to respect that tween's changes)\n\t\t\t\t\t\tval = (marg.indexOf(\"px\") !== -1) ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n\t\t\t\t\t\tif (val !== t[prop]) {\n\t\t\t\t\t\t\tdif = (i < 2) ? -t.ieOffsetX : -t.ieOffsetY; //if another tween is controlling a margin, we cannot only apply the difference in the ieOffsets, so we essentially zero-out the dx and dy here in that case. We record the margin(s) later so that we can keep comparing them, making this code very flexible.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdif = (i < 2) ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle[prop] = (t[prop] = Math.round( val - dif * ((i === 0 || i === 2) ? 1 : mult) )) + \"px\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/* translates a super small decimal to a string WITHOUT scientific notation\n\t\t\t_safeDecimal = function(n) {\n\t\t\t\tvar s = (n < 0 ? -n : n) + \"\",\n\t\t\t\t\ta = s.split(\"e-\");\n\t\t\t\treturn (n < 0 ? \"-0.\" : \"0.\") + new Array(parseInt(a[1], 10) || 0).join(\"0\") + a[0].split(\".\").join(\"\");\n\t\t\t},\n\t\t\t*/\n\n\t\t\t_setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n\t\t\t\tvar t = this.data, //refers to the element's _gsTransform object\n\t\t\t\t\tstyle = this.t.style,\n\t\t\t\t\tangle = t.rotation,\n\t\t\t\t\trotationX = t.rotationX,\n\t\t\t\t\trotationY = t.rotationY,\n\t\t\t\t\tsx = t.scaleX,\n\t\t\t\t\tsy = t.scaleY,\n\t\t\t\t\tsz = t.scaleZ,\n\t\t\t\t\tx = t.x,\n\t\t\t\t\ty = t.y,\n\t\t\t\t\tz = t.z,\n\t\t\t\t\tisSVG = t.svg,\n\t\t\t\t\tperspective = t.perspective,\n\t\t\t\t\tforce3D = t.force3D,\n\t\t\t\t\tskewY = t.skewY,\n\t\t\t\t\tskewX = t.skewX,\n\t\t\t\t\tt1,\ta11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43,\n\t\t\t\t\tzOrigin, min, cos, sin, t2, transform, comma, zero, skew, rnd;\n\t\t\t\tif (skewY) { //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.\n\t\t\t\t\tskewX += skewY;\n\t\t\t\t\tangle += skewY;\n\t\t\t\t}\n\n\t\t\t\t//check to see if we should render as 2D (and SVGs must use 2D when _useSVGTransformAttr is true)\n\t\t\t\tif (((((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime)) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1) || (_useSVGTransformAttr && isSVG) || !_supports3D) { //on the final render (which could be 0 for a from tween), if there are no 3D aspects, render in 2D to free up memory and improve performance especially on mobile devices. Check the tween's totalTime/totalDuration too in order to make sure it doesn't happen between repeats if it's a repeating tween.\n\n\t\t\t\t\t//2D\n\t\t\t\t\tif (angle || skewX || isSVG) {\n\t\t\t\t\t\tangle *= _DEG2RAD;\n\t\t\t\t\t\tskew = skewX * _DEG2RAD;\n\t\t\t\t\t\trnd = 100000;\n\t\t\t\t\t\ta11 = Math.cos(angle) * sx;\n\t\t\t\t\t\ta21 = Math.sin(angle) * sx;\n\t\t\t\t\t\ta12 = Math.sin(angle - skew) * -sy;\n\t\t\t\t\t\ta22 = Math.cos(angle - skew) * sy;\n\t\t\t\t\t\tif (skew && t.skewType === \"simple\") { //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to \"simple\" to use the uncompensated skewing that CSS does\n\t\t\t\t\t\t\tt1 = Math.tan(skew - skewY * _DEG2RAD);\n\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\ta12 *= t1;\n\t\t\t\t\t\t\ta22 *= t1;\n\t\t\t\t\t\t\tif (skewY) {\n\t\t\t\t\t\t\t\tt1 = Math.tan(skewY * _DEG2RAD);\n\t\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\t\ta11 *= t1;\n\t\t\t\t\t\t\t\ta21 *= t1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isSVG) {\n\t\t\t\t\t\t\tx += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t\t\t\t\t\t\ty += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t\t\t\t\t\t\tif (_useSVGTransformAttr && (t.xPercent || t.yPercent)) { //The SVG spec doesn't support percentage-based translation in the \"transform\" attribute, so we merge it into the matrix to simulate it.\n\t\t\t\t\t\t\t\tmin = this.t.getBBox();\n\t\t\t\t\t\t\t\tx += t.xPercent * 0.01 * min.width;\n\t\t\t\t\t\t\t\ty += t.yPercent * 0.01 * min.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin = 0.000001;\n\t\t\t\t\t\t\tif (x < min) if (x > -min) {\n\t\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (y < min) if (y > -min) {\n\t\t\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransform = (((a11 * rnd) | 0) / rnd) + \",\" + (((a21 * rnd) | 0) / rnd) + \",\" + (((a12 * rnd) | 0) / rnd) + \",\" + (((a22 * rnd) | 0) / rnd) + \",\" + x + \",\" + y + \")\";\n\t\t\t\t\t\tif (isSVG && _useSVGTransformAttr) {\n\t\t\t\t\t\t\tthis.t.setAttribute(\"transform\", \"matrix(\" + transform);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the \"e-\" towards the end) and would render the object slightly off. So we round to 5 decimal places.\n\t\t\t\t\t\t\tstyle[_transformProp] = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle[_transformProp] = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\t\t\t\tif (_isFirefox) { //Firefox has a bug (at least in v25) that causes it to render the transparent part of 32-bit PNG images as black when displayed inside an iframe and the 3D scale is very small and doesn't change sufficiently enough between renders (like if you use a Power4.easeInOut to scale from 0 to 1 where the beginning values only change a tiny amount to begin the tween before accelerating). In this case, we force the scale to be 0.00002 instead which is visually the same but works around the Firefox issue.\n\t\t\t\t\tmin = 0.0001;\n\t\t\t\t\tif (sx < min && sx > -min) {\n\t\t\t\t\t\tsx = sz = 0.00002;\n\t\t\t\t\t}\n\t\t\t\t\tif (sy < min && sy > -min) {\n\t\t\t\t\t\tsy = sz = 0.00002;\n\t\t\t\t\t}\n\t\t\t\t\tif (perspective && !t.z && !t.rotationX && !t.rotationY) { //Firefox has a bug that causes elements to have an odd super-thin, broken/dotted black border on elements that have a perspective set but aren't utilizing 3D space (no rotationX, rotationY, or z).\n\t\t\t\t\t\tperspective = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (angle || skewX) {\n\t\t\t\t\tangle *= _DEG2RAD;\n\t\t\t\t\tcos = a11 = Math.cos(angle);\n\t\t\t\t\tsin = a21 = Math.sin(angle);\n\t\t\t\t\tif (skewX) {\n\t\t\t\t\t\tangle -= skewX * _DEG2RAD;\n\t\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\t\tif (t.skewType === \"simple\") { //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to \"simple\" to use the uncompensated skewing that CSS does\n\t\t\t\t\t\t\tt1 = Math.tan((skewX - skewY) * _DEG2RAD);\n\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\tcos *= t1;\n\t\t\t\t\t\t\tsin *= t1;\n\t\t\t\t\t\t\tif (t.skewY) {\n\t\t\t\t\t\t\t\tt1 = Math.tan(skewY * _DEG2RAD);\n\t\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\t\ta11 *= t1;\n\t\t\t\t\t\t\t\ta21 *= t1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ta12 = -sin;\n\t\t\t\t\ta22 = cos;\n\n\t\t\t\t} else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) { //if we're only translating and/or 2D scaling, this is faster...\n\t\t\t\t\tstyle[_transformProp] = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z +\"px)\" + ((sx !== 1 || sy !== 1) ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\ta11 = a22 = 1;\n\t\t\t\t\ta12 = a21 = 0;\n\t\t\t\t}\n\t\t\t\t// KEY  INDEX   AFFECTS a[row][column]\n\t\t\t\t// a11  0       rotation, rotationY, scaleX\n\t\t\t\t// a21  1       rotation, rotationY, scaleX\n\t\t\t\t// a31  2       rotationY, scaleX\n\t\t\t\t// a41  3       rotationY, scaleX\n\t\t\t\t// a12  4       rotation, skewX, rotationX, scaleY\n\t\t\t\t// a22  5       rotation, skewX, rotationX, scaleY\n\t\t\t\t// a32  6       rotationX, scaleY\n\t\t\t\t// a42  7       rotationX, scaleY\n\t\t\t\t// a13  8       rotationY, rotationX, scaleZ\n\t\t\t\t// a23  9       rotationY, rotationX, scaleZ\n\t\t\t\t// a33  10      rotationY, rotationX, scaleZ\n\t\t\t\t// a43  11      rotationY, rotationX, perspective, scaleZ\n\t\t\t\t// a14  12      x, zOrigin, svgOrigin\n\t\t\t\t// a24  13      y, zOrigin, svgOrigin\n\t\t\t\t// a34  14      z, zOrigin\n\t\t\t\t// a44  15\n\t\t\t\t// rotation: Math.atan2(a21, a11)\n\t\t\t\t// rotationY: Math.atan2(a13, a33) (or Math.atan2(a13, a11))\n\t\t\t\t// rotationX: Math.atan2(a32, a33)\n\t\t\t\ta33 = 1;\n\t\t\t\ta13 = a23 = a31 = a32 = a41 = a42 = 0;\n\t\t\t\ta43 = (perspective) ? -1 / perspective : 0;\n\t\t\t\tzOrigin = t.zOrigin;\n\t\t\t\tmin = 0.000001; //threshold below which browsers use scientific notation which won't work.\n\t\t\t\tcomma = \",\";\n\t\t\t\tzero = \"0\";\n\t\t\t\tangle = rotationY * _DEG2RAD;\n\t\t\t\tif (angle) {\n\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\ta31 = -sin;\n\t\t\t\t\ta41 = a43*-sin;\n\t\t\t\t\ta13 = a11*sin;\n\t\t\t\t\ta23 = a21*sin;\n\t\t\t\t\ta33 = cos;\n\t\t\t\t\ta43 *= cos;\n\t\t\t\t\ta11 *= cos;\n\t\t\t\t\ta21 *= cos;\n\t\t\t\t}\n\t\t\t\tangle = rotationX * _DEG2RAD;\n\t\t\t\tif (angle) {\n\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\tt1 = a12*cos+a13*sin;\n\t\t\t\t\tt2 = a22*cos+a23*sin;\n\t\t\t\t\ta32 = a33*sin;\n\t\t\t\t\ta42 = a43*sin;\n\t\t\t\t\ta13 = a12*-sin+a13*cos;\n\t\t\t\t\ta23 = a22*-sin+a23*cos;\n\t\t\t\t\ta33 = a33*cos;\n\t\t\t\t\ta43 = a43*cos;\n\t\t\t\t\ta12 = t1;\n\t\t\t\t\ta22 = t2;\n\t\t\t\t}\n\t\t\t\tif (sz !== 1) {\n\t\t\t\t\ta13*=sz;\n\t\t\t\t\ta23*=sz;\n\t\t\t\t\ta33*=sz;\n\t\t\t\t\ta43*=sz;\n\t\t\t\t}\n\t\t\t\tif (sy !== 1) {\n\t\t\t\t\ta12*=sy;\n\t\t\t\t\ta22*=sy;\n\t\t\t\t\ta32*=sy;\n\t\t\t\t\ta42*=sy;\n\t\t\t\t}\n\t\t\t\tif (sx !== 1) {\n\t\t\t\t\ta11*=sx;\n\t\t\t\t\ta21*=sx;\n\t\t\t\t\ta31*=sx;\n\t\t\t\t\ta41*=sx;\n\t\t\t\t}\n\n\t\t\t\tif (zOrigin || isSVG) {\n\t\t\t\t\tif (zOrigin) {\n\t\t\t\t\t\tx += a13*-zOrigin;\n\t\t\t\t\t\ty += a23*-zOrigin;\n\t\t\t\t\t\tz += a33*-zOrigin+zOrigin;\n\t\t\t\t\t}\n\t\t\t\t\tif (isSVG) { //due to bugs in some browsers, we need to manage the transform-origin of SVG manually\n\t\t\t\t\t\tx += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t\t\t\t\t\ty += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t\t\t\t\t}\n\t\t\t\t\tif (x < min && x > -min) {\n\t\t\t\t\t\tx = zero;\n\t\t\t\t\t}\n\t\t\t\t\tif (y < min && y > -min) {\n\t\t\t\t\t\ty = zero;\n\t\t\t\t\t}\n\t\t\t\t\tif (z < min && z > -min) {\n\t\t\t\t\t\tz = 0; //don't use string because we calculate perspective later and need the number.\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//optimized way of concatenating all the values into a string. If we do it all in one shot, it's slower because of the way browsers have to create temp strings and the way it affects memory. If we do it piece-by-piece with +=, it's a bit slower too. We found that doing it in these sized chunks works best overall:\n\t\t\t\ttransform = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\");\n\t\t\t\ttransform += ((a11 < min && a11 > -min) ? zero : a11) + comma + ((a21 < min && a21 > -min) ? zero : a21) + comma + ((a31 < min && a31 > -min) ? zero : a31);\n\t\t\t\ttransform += comma + ((a41 < min && a41 > -min) ? zero : a41) + comma + ((a12 < min && a12 > -min) ? zero : a12) + comma + ((a22 < min && a22 > -min) ? zero : a22);\n\t\t\t\tif (rotationX || rotationY || sz !== 1) { //performance optimization (often there's no rotationX or rotationY, so we can skip these calculations)\n\t\t\t\t\ttransform += comma + ((a32 < min && a32 > -min) ? zero : a32) + comma + ((a42 < min && a42 > -min) ? zero : a42) + comma + ((a13 < min && a13 > -min) ? zero : a13);\n\t\t\t\t\ttransform += comma + ((a23 < min && a23 > -min) ? zero : a23) + comma + ((a33 < min && a33 > -min) ? zero : a33) + comma + ((a43 < min && a43 > -min) ? zero : a43) + comma;\n\t\t\t\t} else {\n\t\t\t\t\ttransform += \",0,0,0,0,1,0,\";\n\t\t\t\t}\n\t\t\t\ttransform += x + comma + y + comma + z + comma + (perspective ? (1 + (-z / perspective)) : 1) + \")\";\n\n\t\t\t\tstyle[_transformProp] = transform;\n\t\t\t};\n\n\t\tp = Transform.prototype;\n\t\tp.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n\t\tp.scaleX = p.scaleY = p.scaleZ = 1;\n\n\t\t_registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {parser:function(t, e, parsingProp, cssp, pt, plugin, vars) {\n\t\t\tif (cssp._lastParsedTransform === vars) { return pt; } //only need to parse the transform once, and only if the browser supports it.\n\t\t\tcssp._lastParsedTransform = vars;\n\t\t\tvar scaleFunc = (vars.scale && typeof(vars.scale) === \"function\") ? vars.scale : 0; //if there's a function-based \"scale\" value, swap in the resulting numeric value temporarily. Otherwise, if it's called for both scaleX and scaleY independently, they may not match (like if the function uses Math.random()).\n\t\t\tif (scaleFunc) {\n\t\t\t\tvars.scale = scaleFunc(_index, t);\n\t\t\t}\n\t\t\tvar originalGSTransform = t._gsTransform,\n\t\t\t\tstyle = t.style,\n\t\t\t\tmin = 0.000001,\n\t\t\t\ti = _transformProps.length,\n\t\t\t\tv = vars,\n\t\t\t\tendRotations = {},\n\t\t\t\ttransformOriginString = \"transformOrigin\",\n\t\t\t\tm1 = _getTransform(t, _cs, true, v.parseTransform),\n\t\t\t\torig = v.transform && ((typeof(v.transform) === \"function\") ? v.transform(_index, _target) : v.transform),\n\t\t\t\tm2, copy, has3D, hasChange, dr, x, y, matrix, p;\n\t\t\tm1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n\t\t\tcssp._transform = m1;\n\t\t\tif (\"rotationZ\" in v) {\n\t\t\t\tv.rotation = v.rotationZ;\n\t\t\t}\n\t\t\tif (orig && typeof(orig) === \"string\" && _transformProp) { //for values like transform:\"rotate(60deg) scale(0.5, 0.8)\"\n\t\t\t\tcopy = _tempDiv.style; //don't use the original target because it might be SVG in which case some browsers don't report computed style correctly.\n\t\t\t\tcopy[_transformProp] = orig;\n\t\t\t\tcopy.display = \"block\"; //if display is \"none\", the browser often refuses to report the transform properties correctly.\n\t\t\t\tcopy.position = \"absolute\";\n\t\t\t\tif (orig.indexOf(\"%\") !== -1) { //%-based translations will fail unless we set the width/height to match the original target...\n\t\t\t\t\tcopy.width = _getStyle(t, \"width\");\n\t\t\t\t\tcopy.height = _getStyle(t, \"height\");\n\t\t\t\t}\n\t\t\t\t_doc.body.appendChild(_tempDiv);\n\t\t\t\tm2 = _getTransform(_tempDiv, null, false);\n\t\t\t\tif (m1.skewType === \"simple\") { //the default _getTransform() reports the skewX/scaleY as if skewType is \"compensated\", thus we need to adjust that here if skewType is \"simple\".\n\t\t\t\t\tm2.scaleY *= Math.cos(m2.skewX * _DEG2RAD);\n\t\t\t\t}\n\t\t\t\tif (m1.svg) { //if it's an SVG element, x/y part of the matrix will be affected by whatever we use as the origin and the offsets, so compensate here...\n\t\t\t\t\tx = m1.xOrigin;\n\t\t\t\t\ty = m1.yOrigin;\n\t\t\t\t\tm2.x -= m1.xOffset;\n\t\t\t\t\tm2.y -= m1.yOffset;\n\t\t\t\t\tif (v.transformOrigin || v.svgOrigin) { //if this tween is altering the origin, we must factor that in here. The actual work of recording the transformOrigin values and setting up the PropTween is done later (still inside this function) so we cannot leave the changes intact here - we only want to update the x/y accordingly.\n\t\t\t\t\t\torig = {};\n\t\t\t\t\t\t_parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n\t\t\t\t\t\tx = orig.xOrigin;\n\t\t\t\t\t\ty = orig.yOrigin;\n\t\t\t\t\t\tm2.x -= orig.xOffset - m1.xOffset;\n\t\t\t\t\t\tm2.y -= orig.yOffset - m1.yOffset;\n\t\t\t\t\t}\n\t\t\t\t\tif (x || y) {\n\t\t\t\t\t\tmatrix = _getMatrix(_tempDiv, true);\n\t\t\t\t\t\tm2.x -= x - (x * matrix[0] + y * matrix[2]);\n\t\t\t\t\t\tm2.y -= y - (x * matrix[1] + y * matrix[3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_doc.body.removeChild(_tempDiv);\n\t\t\t\tif (!m2.perspective) {\n\t\t\t\t\tm2.perspective = m1.perspective; //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.\n\t\t\t\t}\n\t\t\t\tif (v.xPercent != null) {\n\t\t\t\t\tm2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n\t\t\t\t}\n\t\t\t\tif (v.yPercent != null) {\n\t\t\t\t\tm2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n\t\t\t\t}\n\t\t\t} else if (typeof(v) === \"object\") { //for values like scaleX, scaleY, rotation, x, y, skewX, and skewY or transform:{...} (object)\n\t\t\t\tm2 = {scaleX:_parseVal((v.scaleX != null) ? v.scaleX : v.scale, m1.scaleX),\n\t\t\t\t\tscaleY:_parseVal((v.scaleY != null) ? v.scaleY : v.scale, m1.scaleY),\n\t\t\t\t\tscaleZ:_parseVal(v.scaleZ, m1.scaleZ),\n\t\t\t\t\tx:_parseVal(v.x, m1.x),\n\t\t\t\t\ty:_parseVal(v.y, m1.y),\n\t\t\t\t\tz:_parseVal(v.z, m1.z),\n\t\t\t\t\txPercent:_parseVal(v.xPercent, m1.xPercent),\n\t\t\t\t\tyPercent:_parseVal(v.yPercent, m1.yPercent),\n\t\t\t\t\tperspective:_parseVal(v.transformPerspective, m1.perspective)};\n\t\t\t\tdr = v.directionalRotation;\n\t\t\t\tif (dr != null) {\n\t\t\t\t\tif (typeof(dr) === \"object\") {\n\t\t\t\t\t\tfor (copy in dr) {\n\t\t\t\t\t\t\tv[copy] = dr[copy];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tv.rotation = dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof(v.x) === \"string\" && v.x.indexOf(\"%\") !== -1) {\n\t\t\t\t\tm2.x = 0;\n\t\t\t\t\tm2.xPercent = _parseVal(v.x, m1.xPercent);\n\t\t\t\t}\n\t\t\t\tif (typeof(v.y) === \"string\" && v.y.indexOf(\"%\") !== -1) {\n\t\t\t\t\tm2.y = 0;\n\t\t\t\t\tm2.yPercent = _parseVal(v.y, m1.yPercent);\n\t\t\t\t}\n\n\t\t\t\tm2.rotation = _parseAngle((\"rotation\" in v) ? v.rotation : (\"shortRotation\" in v) ? v.shortRotation + \"_short\" : m1.rotation, m1.rotation, \"rotation\", endRotations);\n\t\t\t\tif (_supports3D) {\n\t\t\t\t\tm2.rotationX = _parseAngle((\"rotationX\" in v) ? v.rotationX : (\"shortRotationX\" in v) ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n\t\t\t\t\tm2.rotationY = _parseAngle((\"rotationY\" in v) ? v.rotationY : (\"shortRotationY\" in v) ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n\t\t\t\t}\n\t\t\t\tm2.skewX = _parseAngle(v.skewX, m1.skewX);\n\t\t\t\tm2.skewY = _parseAngle(v.skewY, m1.skewY);\n\t\t\t}\n\t\t\tif (_supports3D && v.force3D != null) {\n\t\t\t\tm1.force3D = v.force3D;\n\t\t\t\thasChange = true;\n\t\t\t}\n\n\t\t\thas3D = (m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective);\n\t\t\tif (!has3D && v.scale != null) {\n\t\t\t\tm2.scaleZ = 1; //no need to tween scaleZ.\n\t\t\t}\n\n\t\t\twhile (--i > -1) {\n\t\t\t\tp = _transformProps[i];\n\t\t\t\torig = m2[p] - m1[p];\n\t\t\t\tif (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n\t\t\t\t\thasChange = true;\n\t\t\t\t\tpt = new CSSPropTween(m1, p, m1[p], orig, pt);\n\t\t\t\t\tif (p in endRotations) {\n\t\t\t\t\t\tpt.e = endRotations[p]; //directional rotations typically have compensated values during the tween, but we need to make sure they end at exactly what the user requested\n\t\t\t\t\t}\n\t\t\t\t\tpt.xs0 = 0; //ensures the value stays numeric in setRatio()\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t\tcssp._overwriteProps.push(pt.n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\torig = (typeof(v.transformOrigin) === \"function\") ? v.transformOrigin(_index, _target) : v.transformOrigin;\n\t\t\tif (m1.svg && (orig || v.svgOrigin)) {\n\t\t\t\tx = m1.xOffset; //when we change the origin, in order to prevent things from jumping we adjust the x/y so we must record those here so that we can create PropTweens for them and flip them at the same time as the origin\n\t\t\t\ty = m1.yOffset;\n\t\t\t\t_parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString); //note: if there wasn't a transformOrigin defined yet, just start with the destination one; it's wasteful otherwise, and it causes problems with fromTo() tweens. For example, TweenLite.to(\"#wheel\", 3, {rotation:180, transformOrigin:\"50% 50%\", delay:1}); TweenLite.fromTo(\"#wheel\", 3, {scale:0.5, transformOrigin:\"50% 50%\"}, {scale:1, delay:2}); would cause a jump when the from values revert at the beginning of the 2nd tween.\n\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n\t\t\t\tif (x !== m1.xOffset || y !== m1.yOffset) {\n\t\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"xOffset\", (originalGSTransform ? x : m1.xOffset), m1.xOffset, pt, transformOriginString);\n\t\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"yOffset\", (originalGSTransform ? y : m1.yOffset), m1.yOffset, pt, transformOriginString);\n\t\t\t\t}\n\t\t\t\torig = \"0px 0px\"; //certain browsers (like firefox) completely botch transform-origin, so we must remove it to prevent it from contaminating transforms. We manage it ourselves with xOrigin and yOrigin\n\t\t\t}\n\t\t\tif (orig || (_supports3D && has3D && m1.zOrigin)) { //if anything 3D is happening and there's a transformOrigin with a z component that's non-zero, we must ensure that the transformOrigin's z-component is set to 0 so that we can manually do those calculations to get around Safari bugs. Even if the user didn't specifically define a \"transformOrigin\" in this particular tween (maybe they did it via css directly).\n\t\t\t\tif (_transformProp) {\n\t\t\t\t\thasChange = true;\n\t\t\t\t\tp = _transformOriginProp;\n\t\t\t\t\tif (!orig) {\n\t\t\t\t\t\torig = (_getStyle(t, p, _cs, false, \"50% 50%\") + \"\").split(\" \");\n\t\t\t\t\t\torig = orig[0] + \" \" + orig[1] + \" \" + m1.zOrigin + \"px\";\n\t\t\t\t\t}\n\t\t\t\t\torig += \"\";\n\t\t\t\t\tpt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n\t\t\t\t\tpt.b = style[p];\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t\tif (_supports3D) {\n\t\t\t\t\t\tcopy = m1.zOrigin;\n\t\t\t\t\t\torig = orig.split(\" \");\n\t\t\t\t\t\tm1.zOrigin = ((orig.length > 2) ? parseFloat(orig[2]) : copy) || 0; //Safari doesn't handle the z part of transformOrigin correctly, so we'll manually handle it in the _set3DTransformRatio() method.\n\t\t\t\t\t\tpt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\"; //we must define a z value of 0px specifically otherwise iOS 5 Safari will stick with the old one (if one was defined)!\n\t\t\t\t\t\tpt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n); //we must create a CSSPropTween for the _gsTransform.zOrigin so that it gets reset properly at the beginning if the tween runs backward (as opposed to just setting m1.zOrigin here)\n\t\t\t\t\t\tpt.b = copy;\n\t\t\t\t\t\tpt.xs0 = pt.e = m1.zOrigin;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.xs0 = pt.e = orig;\n\t\t\t\t\t}\n\n\t\t\t\t\t//for older versions of IE (6-8), we need to manually calculate things inside the setRatio() function. We record origin x and y (ox and oy) and whether or not the values are percentages (oxp and oyp).\n\t\t\t\t} else {\n\t\t\t\t\t_parsePosition(orig + \"\", m1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasChange) {\n\t\t\t\tcssp._transformType = (!(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3)) ? 3 : 2; //quicker than calling cssp._enableTransforms();\n\t\t\t}\n\t\t\tif (scaleFunc) {\n\t\t\t\tvars.scale = scaleFunc;\n\t\t\t}\n\t\t\treturn pt;\n\t\t}, allowFunc:true, prefix:true});\n\n\t\t_registerComplexSpecialProp(\"boxShadow\", {defaultValue:\"0px 0px 0px 0px #999\", prefix:true, color:true, multi:true, keyword:\"inset\"});\n\t\t_registerComplexSpecialProp(\"clipPath\", {defaultValue:\"inset(0%)\", prefix:true, multi:true, formatter:_getFormatter(\"inset(0% 0% 0% 0%)\", false, true)});\n\n\t\t_registerComplexSpecialProp(\"borderRadius\", {defaultValue:\"0px\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\te = this.format(e);\n\t\t\tvar props = [\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],\n\t\t\t\tstyle = t.style,\n\t\t\t\tea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n\t\t\tw = parseFloat(t.offsetWidth);\n\t\t\th = parseFloat(t.offsetHeight);\n\t\t\tea1 = e.split(\" \");\n\t\t\tfor (i = 0; i < props.length; i++) { //if we're dealing with percentages, we must convert things separately for the horizontal and vertical axis!\n\t\t\t\tif (this.p.indexOf(\"border\")) { //older browsers used a prefix\n\t\t\t\t\tprops[i] = _checkPropPrefix(props[i]);\n\t\t\t\t}\n\t\t\t\tbs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n\t\t\t\tif (bs.indexOf(\" \") !== -1) {\n\t\t\t\t\tbs2 = bs.split(\" \");\n\t\t\t\t\tbs = bs2[0];\n\t\t\t\t\tbs2 = bs2[1];\n\t\t\t\t}\n\t\t\t\tes = es2 = ea1[i];\n\t\t\t\tbn = parseFloat(bs);\n\t\t\t\tbsfx = bs.substr((bn + \"\").length);\n\t\t\t\trel = (es.charAt(1) === \"=\");\n\t\t\t\tif (rel) {\n\t\t\t\t\ten = parseInt(es.charAt(0)+\"1\", 10);\n\t\t\t\t\tes = es.substr(2);\n\t\t\t\t\ten *= parseFloat(es);\n\t\t\t\t\tesfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n\t\t\t\t} else {\n\t\t\t\t\ten = parseFloat(es);\n\t\t\t\t\tesfx = es.substr((en + \"\").length);\n\t\t\t\t}\n\t\t\t\tif (esfx === \"\") {\n\t\t\t\t\tesfx = _suffixMap[p] || bsfx;\n\t\t\t\t}\n\t\t\t\tif (esfx !== bsfx) {\n\t\t\t\t\thn = _convertToPixels(t, \"borderLeft\", bn, bsfx); //horizontal number (we use a bogus \"borderLeft\" property just because the _convertToPixels() method searches for the keywords \"Left\", \"Right\", \"Top\", and \"Bottom\" to determine of it's a horizontal or vertical property, and we need \"border\" in the name so that it knows it should measure relative to the element itself, not its parent.\n\t\t\t\t\tvn = _convertToPixels(t, \"borderTop\", bn, bsfx); //vertical number\n\t\t\t\t\tif (esfx === \"%\") {\n\t\t\t\t\t\tbs = (hn / w * 100) + \"%\";\n\t\t\t\t\t\tbs2 = (vn / h * 100) + \"%\";\n\t\t\t\t\t} else if (esfx === \"em\") {\n\t\t\t\t\t\tem = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n\t\t\t\t\t\tbs = (hn / em) + \"em\";\n\t\t\t\t\t\tbs2 = (vn / em) + \"em\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbs = hn + \"px\";\n\t\t\t\t\t\tbs2 = vn + \"px\";\n\t\t\t\t\t}\n\t\t\t\t\tif (rel) {\n\t\t\t\t\t\tes = (parseFloat(bs) + en) + esfx;\n\t\t\t\t\t\tes2 = (parseFloat(bs2) + en) + esfx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n\t\t\t}\n\t\t\treturn pt;\n\t\t}, prefix:true, formatter:_getFormatter(\"0px 0px 0px 0px\", false, true)});\n\t\t_registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {defaultValue:\"0px\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\treturn _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n\t\t}, prefix:true, formatter:_getFormatter(\"0px 0px\", false, true)});\n\t\t_registerComplexSpecialProp(\"backgroundPosition\", {defaultValue:\"0 0\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar bp = \"background-position\",\n\t\t\t\tcs = (_cs || _getComputedStyle(t, null)),\n\t\t\t\tbs = this.format( ((cs) ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), //Internet Explorer doesn't report background-position correctly - we must query background-position-x and background-position-y and combine them (even in IE10). Before IE9, we must do the same with the currentStyle object and use camelCase\n\t\t\t\tes = this.format(e),\n\t\t\t\tba, ea, i, pct, overlap, src;\n\t\t\tif ((bs.indexOf(\"%\") !== -1) !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n\t\t\t\tsrc = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n\t\t\t\tif (src && src !== \"none\") {\n\t\t\t\t\tba = bs.split(\" \");\n\t\t\t\t\tea = es.split(\" \");\n\t\t\t\t\t_tempImg.setAttribute(\"src\", src); //set the temp IMG's src to the background-image so that we can measure its width/height\n\t\t\t\t\ti = 2;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tbs = ba[i];\n\t\t\t\t\t\tpct = (bs.indexOf(\"%\") !== -1);\n\t\t\t\t\t\tif (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n\t\t\t\t\t\t\toverlap = (i === 0) ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n\t\t\t\t\t\t\tba[i] = pct ? (parseFloat(bs) / 100 * overlap) + \"px\" : (parseFloat(bs) / overlap * 100) + \"%\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbs = ba.join(\" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, bs, es, pt, plugin);\n\t\t}, formatter:_parsePosition});\n\t\t_registerComplexSpecialProp(\"backgroundSize\", {defaultValue:\"0 0\", formatter:function(v) {\n\t\t\tv += \"\"; //ensure it's a string\n\t\t\treturn (v.substr(0,2) === \"co\") ? v : _parsePosition(v.indexOf(\" \") === -1 ? v + \" \" + v : v); //if set to something like \"100% 100%\", Safari typically reports the computed style as just \"100%\" (no 2nd value), but we should ensure that there are two values, so copy the first one. Otherwise, it'd be interpreted as \"100% 0\" (wrong). Also remember that it could be \"cover\" or \"contain\" which we can't tween but should be able to set.\n\t\t}});\n\t\t_registerComplexSpecialProp(\"perspective\", {defaultValue:\"0px\", prefix:true});\n\t\t_registerComplexSpecialProp(\"perspectiveOrigin\", {defaultValue:\"50% 50%\", prefix:true});\n\t\t_registerComplexSpecialProp(\"transformStyle\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"backfaceVisibility\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"userSelect\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"margin\", {parser:_getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")});\n\t\t_registerComplexSpecialProp(\"padding\", {parser:_getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")});\n\t\t_registerComplexSpecialProp(\"clip\", {defaultValue:\"rect(0px,0px,0px,0px)\", parser:function(t, e, p, cssp, pt, plugin){\n\t\t\tvar b, cs, delim;\n\t\t\tif (_ieVers < 9) { //IE8 and earlier don't report a \"clip\" value in the currentStyle - instead, the values are split apart into clipTop, clipRight, clipBottom, and clipLeft. Also, in IE7 and earlier, the values inside rect() are space-delimited, not comma-delimited.\n\t\t\t\tcs = t.currentStyle;\n\t\t\t\tdelim = _ieVers < 8 ? \" \" : \",\";\n\t\t\t\tb = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n\t\t\t\te = this.format(e).split(\",\").join(delim);\n\t\t\t} else {\n\t\t\t\tb = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n\t\t\t\te = this.format(e);\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, b, e, pt, plugin);\n\t\t}});\n\t\t_registerComplexSpecialProp(\"textShadow\", {defaultValue:\"0px 0px 0px #999\", color:true, multi:true});\n\t\t_registerComplexSpecialProp(\"autoRound,strictUnits\", {parser:function(t, e, p, cssp, pt) {return pt;}}); //just so that we can ignore these properties (not tween them)\n\t\t_registerComplexSpecialProp(\"border\", {defaultValue:\"0px solid #000\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"),\n\t\t\t\tend = this.format(e).split(\" \"),\n\t\t\t\tesfx = end[0].replace(_suffixExp, \"\");\n\t\t\tif (esfx !== \"px\") { //if we're animating to a non-px value, we need to convert the beginning width to that unit.\n\t\t\t\tbw = (parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx)) + esfx;\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n\t\t\t}, color:true, formatter:function(v) {\n\t\t\t\tvar a = v.split(\" \");\n\t\t\t\treturn a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [\"#000\"])[0];\n\t\t\t}});\n\t\t_registerComplexSpecialProp(\"borderWidth\", {parser:_getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")}); //Firefox doesn't pick up on borderWidth set in style sheets (only inline).\n\t\t_registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar s = t.style,\n\t\t\t\tprop = (\"cssFloat\" in s) ? \"cssFloat\" : \"styleFloat\";\n\t\t\treturn new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n\t\t}});\n\n\t\t//opacity-related\n\t\tvar _setIEOpacityRatio = function(v) {\n\t\t\t\tvar t = this.t, //refers to the element's style property\n\t\t\t\t\tfilters = t.filter || _getStyle(this.data, \"filter\") || \"\",\n\t\t\t\t\tval = (this.s + this.c * v) | 0,\n\t\t\t\t\tskip;\n\t\t\t\tif (val === 100) { //for older versions of IE that need to use a filter to apply opacity, we should remove the filter if opacity hits 1 in order to improve performance, but make sure there isn't a transform (matrix) or gradient in the filters.\n\t\t\t\t\tif (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n\t\t\t\t\t\tt.removeAttribute(\"filter\");\n\t\t\t\t\t\tskip = (!_getStyle(this.data, \"filter\")); //if a class is applied that has an alpha filter, it will take effect (we don't want that), so re-apply our alpha filter in that case. We must first remove it and then check.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt.filter = filters.replace(_alphaFilterExp, \"\");\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tif (this.xn1) {\n\t\t\t\t\t\tt.filter = filters = filters || (\"alpha(opacity=\" + val + \")\"); //works around bug in IE7/8 that prevents changes to \"visibility\" from being applied properly if the filter is changed to a different alpha on the same frame.\n\t\t\t\t\t}\n\t\t\t\t\tif (filters.indexOf(\"pacity\") === -1) { //only used if browser doesn't support the standard opacity style property (IE 7 and 8). We omit the \"O\" to avoid case-sensitivity issues\n\t\t\t\t\t\tif (val !== 0 || !this.xn1) { //bugs in IE7/8 won't render the filter properly if opacity is ADDED on the same frame/render as \"visibility\" changes (this.xn1 is 1 if this tween is an \"autoAlpha\" tween)\n\t\t\t\t\t\t\tt.filter = filters + \" alpha(opacity=\" + val + \")\"; //we round the value because otherwise, bugs in IE7/8 can prevent \"visibility\" changes from being applied properly.\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t_registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {defaultValue:\"1\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")),\n\t\t\t\tstyle = t.style,\n\t\t\t\tisAutoAlpha = (p === \"autoAlpha\");\n\t\t\tif (typeof(e) === \"string\" && e.charAt(1) === \"=\") {\n\t\t\t\te = ((e.charAt(0) === \"-\") ? -1 : 1) * parseFloat(e.substr(2)) + b;\n\t\t\t}\n\t\t\tif (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) { //if visibility is initially set to \"hidden\", we should interpret that as intent to make opacity 0 (a convenience)\n\t\t\t\tb = 0;\n\t\t\t}\n\t\t\tif (_supportsOpacity) {\n\t\t\t\tpt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n\t\t\t} else {\n\t\t\t\tpt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n\t\t\t\tpt.xn1 = isAutoAlpha ? 1 : 0; //we need to record whether or not this is an autoAlpha so that in the setRatio(), we know to duplicate the setting of the alpha in order to work around a bug in IE7 and IE8 that prevents changes to \"visibility\" from taking effect if the filter is changed to a different alpha(opacity) at the same time. Setting it to the SAME value first, then the new value works around the IE7/8 bug.\n\t\t\t\tstyle.zoom = 1; //helps correct an IE issue.\n\t\t\t\tpt.type = 2;\n\t\t\t\tpt.b = \"alpha(opacity=\" + pt.s + \")\";\n\t\t\t\tpt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n\t\t\t\tpt.data = t;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setIEOpacityRatio;\n\t\t\t}\n\t\t\tif (isAutoAlpha) { //we have to create the \"visibility\" PropTween after the opacity one in the linked list so that they run in the order that works properly in IE8 and earlier\n\t\t\t\tpt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, ((b !== 0) ? \"inherit\" : \"hidden\"), ((e === 0) ? \"hidden\" : \"inherit\"));\n\t\t\t\tpt.xs0 = \"inherit\";\n\t\t\t\tcssp._overwriteProps.push(pt.n);\n\t\t\t\tcssp._overwriteProps.push(p);\n\t\t\t}\n\t\t\treturn pt;\n\t\t}});\n\n\n\t\tvar _removeProp = function(s, p) {\n\t\t\t\tif (p) {\n\t\t\t\t\tif (s.removeProperty) {\n\t\t\t\t\t\tif (p.substr(0,2) === \"ms\" || p.substr(0,6) === \"webkit\") { //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be \"ms-transform\" instead of \"-ms-transform\" for IE9, for example)\n\t\t\t\t\t\t\tp = \"-\" + p;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t\t} else { //note: old versions of IE use \"removeAttribute()\" instead of \"removeProperty()\"\n\t\t\t\t\t\ts.removeAttribute(p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setClassNameRatio = function(v) {\n\t\t\t\tthis.t._gsClassPT = this;\n\t\t\t\tif (v === 1 || v === 0) {\n\t\t\t\t\tthis.t.setAttribute(\"class\", (v === 0) ? this.b : this.e);\n\t\t\t\t\tvar mpt = this.data, //first MiniPropTween\n\t\t\t\t\t\ts = this.t.style;\n\t\t\t\t\twhile (mpt) {\n\t\t\t\t\t\tif (!mpt.v) {\n\t\t\t\t\t\t\t_removeProp(s, mpt.p);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts[mpt.p] = mpt.v;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t\t}\n\t\t\t\t\tif (v === 1 && this.t._gsClassPT === this) {\n\t\t\t\t\t\tthis.t._gsClassPT = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.t.getAttribute(\"class\") !== this.e) {\n\t\t\t\t\tthis.t.setAttribute(\"class\", this.e);\n\t\t\t\t}\n\t\t\t};\n\t\t_registerComplexSpecialProp(\"className\", {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\tvar b = t.getAttribute(\"class\") || \"\", //don't use t.className because it doesn't work consistently on SVG elements; getAttribute(\"class\") and setAttribute(\"class\", value\") is more reliable.\n\t\t\t\tcssText = t.style.cssText,\n\t\t\t\tdifData, bs, cnpt, cnptLookup, mpt;\n\t\t\tpt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t\t\tpt.setRatio = _setClassNameRatio;\n\t\t\tpt.pr = -11;\n\t\t\t_hasPriority = true;\n\t\t\tpt.b = b;\n\t\t\tbs = _getAllStyles(t, _cs);\n\t\t\t//if there's a className tween already operating on the target, force it to its end so that the necessary inline styles are removed and the class name is applied before we determine the end state (we don't want inline styles interfering that were there just for class-specific values)\n\t\t\tcnpt = t._gsClassPT;\n\t\t\tif (cnpt) {\n\t\t\t\tcnptLookup = {};\n\t\t\t\tmpt = cnpt.data; //first MiniPropTween which stores the inline styles - we need to force these so that the inline styles don't contaminate things. Otherwise, there's a small chance that a tween could start and the inline values match the destination values and they never get cleaned.\n\t\t\t\twhile (mpt) {\n\t\t\t\t\tcnptLookup[mpt.p] = 1;\n\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t}\n\t\t\t\tcnpt.setRatio(1);\n\t\t\t}\n\t\t\tt._gsClassPT = pt;\n\t\t\tpt.e = (e.charAt(1) !== \"=\") ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + ((e.charAt(0) === \"+\") ? \" \" + e.substr(2) : \"\");\n\t\t\tt.setAttribute(\"class\", pt.e);\n\t\t\tdifData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n\t\t\tt.setAttribute(\"class\", b);\n\t\t\tpt.data = difData.firstMPT;\n\t\t\tif (t.style.cssText !== cssText) { //only apply if things change. Otherwise, in cases like a background-image that's pulled dynamically, it could cause a refresh. See https://greensock.com/forums/topic/20368-possible-gsap-bug-switching-classnames-in-chrome/.\n\t\t\t\tt.style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).\n\t\t\t}\n\t\t\tpt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin); //we record the CSSPropTween as the xfirst so that we can handle overwriting propertly (if \"className\" gets overwritten, we must kill all the properties associated with the className part of the tween, so we can loop through from xfirst to the pt itself)\n\t\t\treturn pt;\n\t\t}});\n\n\n\t\tvar _setClearPropsRatio = function(v) {\n\t\t\tif (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") { //this.data refers to the tween. Only clear at the END of the tween (remember, from() tweens make the ratio go from 1 to 0, so we can't just check that and if the tween is the zero-duration one that's created internally to render the starting values in a from() tween, ignore that because otherwise, for example, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in).\n\t\t\t\tvar s = this.t.style,\n\t\t\t\t\ttransformParse = _specialProps.transform.parse,\n\t\t\t\t\ta, p, i, clearTransform, transform;\n\t\t\t\tif (this.e === \"all\") {\n\t\t\t\t\ts.cssText = \"\";\n\t\t\t\t\tclearTransform = true;\n\t\t\t\t} else {\n\t\t\t\t\ta = this.e.split(\" \").join(\"\").split(\",\");\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = a[i];\n\t\t\t\t\t\tif (_specialProps[p]) {\n\t\t\t\t\t\t\tif (_specialProps[p].parse === transformParse) {\n\t\t\t\t\t\t\t\tclearTransform = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tp = (p === \"transformOrigin\") ? _transformOriginProp : _specialProps[p].p; //ensures that special properties use the proper browser-specific property name, like \"scaleX\" might be \"-webkit-transform\" or \"boxShadow\" might be \"-moz-box-shadow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_removeProp(s, p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (clearTransform) {\n\t\t\t\t\t_removeProp(s, _transformProp);\n\t\t\t\t\ttransform = this.t._gsTransform;\n\t\t\t\t\tif (transform) {\n\t\t\t\t\t\tif (transform.svg) {\n\t\t\t\t\t\t\tthis.t.removeAttribute(\"data-svg-origin\");\n\t\t\t\t\t\t\tthis.t.removeAttribute(\"transform\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete this.t._gsTransform;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t\t_registerComplexSpecialProp(\"clearProps\", {parser:function(t, e, p, cssp, pt) {\n\t\t\tpt = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t\t\tpt.setRatio = _setClearPropsRatio;\n\t\t\tpt.e = e;\n\t\t\tpt.pr = -10;\n\t\t\tpt.data = cssp._tween;\n\t\t\t_hasPriority = true;\n\t\t\treturn pt;\n\t\t}});\n\n\t\tp = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n\t\ti = p.length;\n\t\twhile (i--) {\n\t\t\t_registerPluginProp(p[i]);\n\t\t}\n\n\n\n\n\n\n\n\n\t\tp = CSSPlugin.prototype;\n\t\tp._firstPT = p._lastParsedTransform = p._transform = null;\n\n\t\t//gets called when the tween renders for the first time. This kicks everything off, recording start/end values, etc.\n\t\tp._onInitTween = function(target, vars, tween, index) {\n\t\t\tif (!target.nodeType) { //css is only for dom elements\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._target = _target = target;\n\t\t\tthis._tween = tween;\n\t\t\tthis._vars = vars;\n\t\t\t_index = index;\n\t\t\t_autoRound = vars.autoRound;\n\t\t\t_hasPriority = false;\n\t\t\t_suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n\t\t\t_cs = _getComputedStyle(target, \"\");\n\t\t\t_overwriteProps = this._overwriteProps;\n\t\t\tvar style = target.style,\n\t\t\t\tv, pt, pt2, first, last, next, zIndex, tpt, threeD;\n\t\t\tif (_reqSafariFix) if (style.zIndex === \"\") {\n\t\t\t\tv = _getStyle(target, \"zIndex\", _cs);\n\t\t\t\tif (v === \"auto\" || v === \"\") {\n\t\t\t\t\t//corrects a bug in [non-Android] Safari that prevents it from repainting elements in their new positions if they don't have a zIndex set. We also can't just apply this inside _parseTransform() because anything that's moved in any way (like using \"left\" or \"top\" instead of transforms like \"x\" and \"y\") can be affected, so it is best to ensure that anything that's tweening has a z-index. Setting \"WebkitPerspective\" to a non-zero value worked too except that on iOS Safari things would flicker randomly. Plus zIndex is less memory-intensive.\n\t\t\t\t\tthis._addLazySet(style, \"zIndex\", 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(vars) === \"string\") {\n\t\t\t\tfirst = style.cssText;\n\t\t\t\tv = _getAllStyles(target, _cs);\n\t\t\t\tstyle.cssText = first + \";\" + vars;\n\t\t\t\tv = _cssDif(target, v, _getAllStyles(target)).difs;\n\t\t\t\tif (!_supportsOpacity && _opacityValExp.test(vars)) {\n\t\t\t\t\tv.opacity = parseFloat( RegExp.$1 );\n\t\t\t\t}\n\t\t\t\tvars = v;\n\t\t\t\tstyle.cssText = first;\n\t\t\t}\n\n\t\t\tif (vars.className) { //className tweens will combine any differences they find in the css with the vars that are passed in, so {className:\"myClass\", scale:0.5, left:20} would work.\n\t\t\t\tthis._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n\t\t\t} else {\n\t\t\t\tthis._firstPT = pt = this.parse(target, vars, null);\n\t\t\t}\n\n\t\t\tif (this._transformType) {\n\t\t\t\tthreeD = (this._transformType === 3);\n\t\t\t\tif (!_transformProp) {\n\t\t\t\t\tstyle.zoom = 1; //helps correct an IE issue.\n\t\t\t\t} else if (_isSafari) {\n\t\t\t\t\t_reqSafariFix = true;\n\t\t\t\t\t//if zIndex isn't set, iOS Safari doesn't repaint things correctly sometimes (seemingly at random).\n\t\t\t\t\tif (style.zIndex === \"\") {\n\t\t\t\t\t\tzIndex = _getStyle(target, \"zIndex\", _cs);\n\t\t\t\t\t\tif (zIndex === \"auto\" || zIndex === \"\") {\n\t\t\t\t\t\t\tthis._addLazySet(style, \"zIndex\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//Setting WebkitBackfaceVisibility corrects 3 bugs:\n\t\t\t\t\t// 1) [non-Android] Safari skips rendering changes to \"top\" and \"left\" that are made on the same frame/render as a transform update.\n\t\t\t\t\t// 2) iOS Safari sometimes neglects to repaint elements in their new positions. Setting \"WebkitPerspective\" to a non-zero value worked too except that on iOS Safari things would flicker randomly.\n\t\t\t\t\t// 3) Safari sometimes displayed odd artifacts when tweening the transform (or WebkitTransform) property, like ghosts of the edges of the element remained. Definitely a browser bug.\n\t\t\t\t\t//Note: we allow the user to override the auto-setting by defining WebkitBackfaceVisibility in the vars of the tween.\n\t\t\t\t\tif (_isSafariLT6) {\n\t\t\t\t\t\tthis._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt2 = pt;\n\t\t\t\twhile (pt2 && pt2._next) {\n\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t}\n\t\t\t\ttpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n\t\t\t\tthis._linkCSSP(tpt, null, pt2);\n\t\t\t\ttpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n\t\t\t\ttpt.data = this._transform || _getTransform(target, _cs, true);\n\t\t\t\ttpt.tween = tween;\n\t\t\t\ttpt.pr = -1; //ensures that the transforms get applied after the components are updated.\n\t\t\t\t_overwriteProps.pop(); //we don't want to force the overwrite of all \"transform\" tweens of the target - we only care about individual transform properties like scaleX, rotation, etc. The CSSPropTween constructor automatically adds the property to _overwriteProps which is why we need to pop() here.\n\t\t\t}\n\n\t\t\tif (_hasPriority) {\n\t\t\t\t//reorders the linked list in order of pr (priority)\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next;\n\t\t\t\t\tpt2 = first;\n\t\t\t\t\twhile (pt2 && pt2.pr > pt.pr) {\n\t\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._prev = pt2 ? pt2._prev : last)) {\n\t\t\t\t\t\tpt._prev._next = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst = pt;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._next = pt2)) {\n\t\t\t\t\t\tpt2._prev = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast = pt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t\tthis._firstPT = first;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\n\t\tp.parse = function(target, vars, pt, plugin) {\n\t\t\tvar style = target.style,\n\t\t\t\tp, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n\t\t\tfor (p in vars) {\n\t\t\t\tes = vars[p]; //ending value string\n\t\t\t\tsp = _specialProps[p]; //SpecialProp lookup.\n\t\t\t\tif (typeof(es) === \"function\" && !(sp && sp.allowFunc)) {\n\t\t\t\t\tes = es(_index, _target);\n\t\t\t\t}\n\t\t\t\tif (sp) {\n\t\t\t\t\tpt = sp.parse(target, es, p, this, pt, plugin, vars);\n\t\t\t\t} else if (p.substr(0,2) === \"--\") { //for tweening CSS variables (which always start with \"--\"). To maximize performance and simplicity, we bypass CSSPlugin altogether and just add a normal property tween to the tween instance itself.\n\t\t\t\t\tthis._tween._propLookup[p] = this._addTween.call(this._tween, target.style, \"setProperty\", _getComputedStyle(target).getPropertyValue(p) + \"\", es + \"\", p, false, p);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tbs = _getStyle(target, p, _cs) + \"\";\n\t\t\t\t\tisStr = (typeof(es) === \"string\");\n\t\t\t\t\tif (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || (isStr && _rgbhslExp.test(es))) { //Opera uses background: to define color sometimes in addition to backgroundColor:\n\t\t\t\t\t\tif (!isStr) {\n\t\t\t\t\t\t\tes = _parseColor(es);\n\t\t\t\t\t\t\tes = ((es.length > 3) ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n\n\t\t\t\t\t} else if (isStr && _complexExp.test(es)) {\n\t\t\t\t\t\tpt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbn = parseFloat(bs);\n\t\t\t\t\t\tbsfx = (bn || bn === 0) ? bs.substr((bn + \"\").length) : \"\"; //remember, bs could be non-numeric like \"normal\" for fontWeight, so we should default to a blank suffix in that case.\n\n\t\t\t\t\t\tif (bs === \"\" || bs === \"auto\") {\n\t\t\t\t\t\t\tif (p === \"width\" || p === \"height\") {\n\t\t\t\t\t\t\t\tbn = _getDimension(target, p, _cs);\n\t\t\t\t\t\t\t\tbsfx = \"px\";\n\t\t\t\t\t\t\t} else if (p === \"left\" || p === \"top\") {\n\t\t\t\t\t\t\t\tbn = _calculateOffset(target, p, _cs);\n\t\t\t\t\t\t\t\tbsfx = \"px\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbn = (p !== \"opacity\") ? 0 : 1;\n\t\t\t\t\t\t\t\tbsfx = \"\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trel = (isStr && es.charAt(1) === \"=\");\n\t\t\t\t\t\tif (rel) {\n\t\t\t\t\t\t\ten = parseInt(es.charAt(0) + \"1\", 10);\n\t\t\t\t\t\t\tes = es.substr(2);\n\t\t\t\t\t\t\ten *= parseFloat(es);\n\t\t\t\t\t\t\tesfx = es.replace(_suffixExp, \"\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ten = parseFloat(es);\n\t\t\t\t\t\t\tesfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (esfx === \"\") {\n\t\t\t\t\t\t\tesfx = (p in _suffixMap) ? _suffixMap[p] : bsfx; //populate the end suffix, prioritizing the map, then if none is found, use the beginning suffix.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tes = (en || en === 0) ? (rel ? en + bn : en) + esfx : vars[p]; //ensures that any += or -= prefixes are taken care of. Record the end value before normalizing the suffix because we always want to end the tween on exactly what they intended even if it doesn't match the beginning value's suffix.\n\t\t\t\t\t\t//if the beginning/ending suffixes don't match, normalize them...\n\t\t\t\t\t\tif (bsfx !== esfx) if (esfx !== \"\" || p === \"lineHeight\") if (en || en === 0) if (bn) { //note: if the beginning value (bn) is 0, we don't need to convert units!\n\t\t\t\t\t\t\tbn = _convertToPixels(target, p, bn, bsfx);\n\t\t\t\t\t\t\tif (esfx === \"%\") {\n\t\t\t\t\t\t\t\tbn /= _convertToPixels(target, p, 100, \"%\") / 100;\n\t\t\t\t\t\t\t\tif (vars.strictUnits !== true) { //some browsers report only \"px\" values instead of allowing \"%\" with getComputedStyle(), so we assume that if we're tweening to a %, we should start there too unless strictUnits:true is defined. This approach is particularly useful for responsive designs that use from() tweens.\n\t\t\t\t\t\t\t\t\tbs = bn + \"%\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n\t\t\t\t\t\t\t\tbn /= _convertToPixels(target, p, 1, esfx);\n\n\t\t\t\t\t\t\t//otherwise convert to pixels.\n\t\t\t\t\t\t\t} else if (esfx !== \"px\") {\n\t\t\t\t\t\t\t\ten = _convertToPixels(target, p, en, esfx);\n\t\t\t\t\t\t\t\tesfx = \"px\"; //we don't use bsfx after this, so we don't need to set it to px too.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (rel) if (en || en === 0) {\n\t\t\t\t\t\t\t\tes = (en + bn) + esfx; //the changes we made affect relative calculations, so adjust the end value here.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rel) {\n\t\t\t\t\t\t\ten += bn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((bn || bn === 0) && (en || en === 0)) { //faster than isNaN(). Also, previously we required en !== bn but that doesn't really gain much performance and it prevents _parseToProxy() from working properly if beginning and ending values match but need to get tweened by an external plugin anyway. For example, a bezier tween where the target starts at left:0 and has these points: [{left:50},{left:0}] wouldn't work properly because when parsing the last point, it'd match the first (current) one and a non-tweening CSSPropTween would be recorded when we actually need a normal tween (type:0) so that things get updated during the tween properly.\n\t\t\t\t\t\t\tpt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, (_autoRound !== false && (esfx === \"px\" || p === \"zIndex\")), 0, bs, es);\n\t\t\t\t\t\t\tpt.xs0 = esfx;\n\t\t\t\t\t\t\t//DEBUG: _log(\"tween \"+p+\" from \"+pt.b+\" (\"+bn+esfx+\") to \"+pt.e+\" with suffix: \"+pt.xs0);\n\t\t\t\t\t\t} else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n\t\t\t\t\t\t\t_log(\"invalid \" + p + \" tween value: \" + vars[p]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n\t\t\t\t\t\t\tpt.xs0 = (es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1)) ? bs : es; //intermediate value should typically be set immediately (end value) except for \"display\" or things like borderTopStyle, borderBottomStyle, etc. which should use the beginning value during the tween.\n\t\t\t\t\t\t\t//DEBUG: _log(\"non-tweening value \"+p+\": \"+pt.xs0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (plugin) if (pt && !pt.plugin) {\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pt;\n\t\t};\n\n\n\t\t//gets called every time the tween updates, passing the new ratio (typically a value between 0 and 1, but not always (for example, if an Elastic.easeOut is used, the value can jump above 1 mid-tween). It will always start and 0 and end at 1.\n\t\tp.setRatio = function(v) {\n\t\t\tvar pt = this._firstPT,\n\t\t\t\tmin = 0.000001,\n\t\t\t\tval, str, i;\n\t\t\t//at the end of the tween, we set the values to exactly what we received in order to make sure non-tweening values (like \"position\" or \"float\" or whatever) are set and so that if the beginning/ending suffixes (units) didn't match and we normalized to px, the value that the user passed in is used here. We check to see if the tween is at its beginning in case it's a from() tween in which case the ratio will actually go from 1 to 0 over the course of the tween (backwards).\n\t\t\tif (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.type !== 2) {\n\t\t\t\t\t\tif (pt.r && pt.type !== -1) {\n\t\t\t\t\t\t\tval = pt.r(pt.s + pt.c);\n\t\t\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\t\t\tpt.t[pt.p] = val + pt.xs0;\n\t\t\t\t\t\t\t} else if (pt.type === 1) { //complex value (one that typically has multiple numbers inside a string, like \"rect(5px,10px,20px,25px)\"\n\t\t\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\t\t\tstr = pt.xs0 + val + pt.xs1;\n\t\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpt.t[pt.p] = str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.e;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\n\t\t\t} else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -0.000001) {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tval = pt.c * v + pt.s;\n\t\t\t\t\tif (pt.r) {\n\t\t\t\t\t\tval = pt.r(val);\n\t\t\t\t\t} else if (val < min) if (val > -min) {\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\tpt.t[pt.p] = val + pt.xs0;\n\t\t\t\t\t} else if (pt.type === 1) { //complex value (one that typically has multiple numbers inside a string, like \"rect(5px,10px,20px,25px)\"\n\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\tif (i === 2) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n\t\t\t\t\t\t} else if (i === 3) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n\t\t\t\t\t\t} else if (i === 4) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n\t\t\t\t\t\t} else if (i === 5) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr = pt.xs0 + val + pt.xs1;\n\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt.t[pt.p] = str;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (pt.type === -1) { //non-tweening value\n\t\t\t\t\t\tpt.t[pt.p] = pt.xs0;\n\n\t\t\t\t\t} else if (pt.setRatio) { //custom setRatio() for things like SpecialProps, external plugins, etc.\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\n\t\t\t//if the tween is reversed all the way back to the beginning, we need to restore the original values which may have different units (like % instead of px or em or whatever).\n\t\t\t} else {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.type !== 2) {\n\t\t\t\t\t\tpt.t[pt.p] = pt.b;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @private\n\t\t * Forces rendering of the target's transforms (rotation, scale, etc.) whenever the CSSPlugin's setRatio() is called.\n\t\t * Basically, this tells the CSSPlugin to create a CSSPropTween (type 2) after instantiation that runs last in the linked\n\t\t * list and calls the appropriate (3D or 2D) rendering function. We separate this into its own method so that we can call\n\t\t * it from other plugins like BezierPlugin if, for example, it needs to apply an autoRotation and this CSSPlugin\n\t\t * doesn't have any transform-related properties of its own. You can call this method as many times as you\n\t\t * want and it won't create duplicate CSSPropTweens.\n\t\t *\n\t\t * @param {boolean} threeD if true, it should apply 3D tweens (otherwise, just 2D ones are fine and typically faster)\n\t\t */\n\t\tp._enableTransforms = function(threeD) {\n\t\t\tthis._transform = this._transform || _getTransform(this._target, _cs, true); //ensures that the element has a _gsTransform property with the appropriate values.\n\t\t\tthis._transformType = (!(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3)) ? 3 : 2;\n\t\t};\n\n\t\tvar lazySet = function(v) {\n\t\t\tthis.t[this.p] = this.e;\n\t\t\tthis.data._linkCSSP(this, this._next, null, true); //we purposefully keep this._next even though it'd make sense to null it, but this is a performance optimization, as this happens during the while (pt) {} loop in setRatio() at the bottom of which it sets pt = pt._next, so if we null it, the linked list will be broken in that loop.\n\t\t};\n\t\t/** @private Gives us a way to set a value on the first render (and only the first render). **/\n\t\tp._addLazySet = function(t, p, v) {\n\t\t\tvar pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n\t\t\tpt.e = v;\n\t\t\tpt.setRatio = lazySet;\n\t\t\tpt.data = this;\n\t\t};\n\n\t\t/** @private **/\n\t\tp._linkCSSP = function(pt, next, prev, remove) {\n\t\t\tif (pt) {\n\t\t\t\tif (next) {\n\t\t\t\t\tnext._prev = pt;\n\t\t\t\t}\n\t\t\t\tif (pt._next) {\n\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t}\n\t\t\t\tif (pt._prev) {\n\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t} else if (this._firstPT === pt) {\n\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\tremove = true; //just to prevent resetting this._firstPT 5 lines down in case pt._next is null. (optimized for speed)\n\t\t\t\t}\n\t\t\t\tif (prev) {\n\t\t\t\t\tprev._next = pt;\n\t\t\t\t} else if (!remove && this._firstPT === null) {\n\t\t\t\t\tthis._firstPT = pt;\n\t\t\t\t}\n\t\t\t\tpt._next = next;\n\t\t\t\tpt._prev = prev;\n\t\t\t}\n\t\t\treturn pt;\n\t\t};\n\n\t\tp._mod = function(lookup) {\n\t\t\tvar pt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (typeof(lookup[pt.p]) === \"function\") { //only gets called by RoundPropsPlugin (ModifyPlugin manages all the rendering internally for CSSPlugin properties that need modification). Remember, we handle rounding a bit differently in this plugin for performance reasons, leveraging \"r\" as an indicator that the value should be rounded internally.\n\t\t\t\t\tpt.r = lookup[pt.p];\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t};\n\n\t\t//we need to make sure that if alpha or autoAlpha is killed, opacity is too. And autoAlpha affects the \"visibility\" property.\n\t\tp._kill = function(lookup) {\n\t\t\tvar copy = lookup,\n\t\t\t\tpt, p, xfirst;\n\t\t\tif (lookup.autoAlpha || lookup.alpha) {\n\t\t\t\tcopy = {};\n\t\t\t\tfor (p in lookup) { //copy the lookup so that we're not changing the original which may be passed elsewhere.\n\t\t\t\t\tcopy[p] = lookup[p];\n\t\t\t\t}\n\t\t\t\tcopy.opacity = 1;\n\t\t\t\tif (copy.autoAlpha) {\n\t\t\t\t\tcopy.visibility = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lookup.className && (pt = this._classNamePT)) { //for className tweens, we need to kill any associated CSSPropTweens too; a linked list starts at the className's \"xfirst\".\n\t\t\t\txfirst = pt.xfirst;\n\t\t\t\tif (xfirst && xfirst._prev) {\n\t\t\t\t\tthis._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev); //break off the prev\n\t\t\t\t} else if (xfirst === this._firstPT) {\n\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t}\n\t\t\t\tif (pt._next) {\n\t\t\t\t\tthis._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n\t\t\t\t}\n\t\t\t\tthis._classNamePT = null;\n\t\t\t}\n\t\t\tpt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.plugin && pt.plugin !== p && pt.plugin._kill) { //for plugins that are registered with CSSPlugin, we should notify them of the kill.\n\t\t\t\t\tpt.plugin._kill(lookup);\n\t\t\t\t\tp = pt.plugin;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn TweenPlugin.prototype._kill.call(this, copy);\n\t\t};\n\n\n\n\t\t//used by cascadeTo() for gathering all the style properties of each child element into an array for comparison.\n\t\tvar _getChildStyles = function(e, props, targets) {\n\t\t\t\tvar children, i, child, type;\n\t\t\t\tif (e.slice) {\n\t\t\t\t\ti = e.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_getChildStyles(e[i], props, targets);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchildren = e.childNodes;\n\t\t\t\ti = children.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tchild = children[i];\n\t\t\t\t\ttype = child.type;\n\t\t\t\t\tif (child.style) {\n\t\t\t\t\t\tprops.push(_getAllStyles(child));\n\t\t\t\t\t\tif (targets) {\n\t\t\t\t\t\t\ttargets.push(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n\t\t\t\t\t\t_getChildStyles(child, props, targets);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t/**\n\t\t * Typically only useful for className tweens that may affect child elements, this method creates a TweenLite\n\t\t * and then compares the style properties of all the target's child elements at the tween's start and end, and\n\t\t * if any are different, it also creates tweens for those and returns an array containing ALL of the resulting\n\t\t * tweens (so that you can easily add() them to a TimelineLite, for example). The reason this functionality is\n\t\t * wrapped into a separate static method of CSSPlugin instead of being integrated into all regular className tweens\n\t\t * is because it creates entirely new tweens that may have completely different targets than the original tween,\n\t\t * so if they were all lumped into the original tween instance, it would be inconsistent with the rest of the API\n\t\t * and it would create other problems. For example:\n\t\t *  - If I create a tween of elementA, that tween instance may suddenly change its target to include 50 other elements (unintuitive if I specifically defined the target I wanted)\n\t\t *  - We can't just create new independent tweens because otherwise, what happens if the original/parent tween is reversed or pause or dropped into a TimelineLite for tight control? You'd expect that tween's behavior to affect all the others.\n\t\t *  - Analyzing every style property of every child before and after the tween is an expensive operation when there are many children, so this behavior shouldn't be imposed on all className tweens by default, especially since it's probably rare that this extra functionality is needed.\n\t\t *\n\t\t * @param {Object} target object to be tweened\n\t\t * @param {number} Duration in seconds (or frames for frames-based tweens)\n\t\t * @param {Object} Object containing the end values, like {className:\"newClass\", ease:Linear.easeNone}\n\t\t * @return {Array} An array of TweenLite instances\n\t\t */\n\t\tCSSPlugin.cascadeTo = function(target, duration, vars) {\n\t\t\tvar tween = TweenLite.to(target, duration, vars),\n\t\t\t\tresults = [tween],\n\t\t\t\tb = [],\n\t\t\t\te = [],\n\t\t\t\ttargets = [],\n\t\t\t\t_reservedProps = TweenLite._internals.reservedProps,\n\t\t\t\ti, difs, p, from;\n\t\t\ttarget = tween._targets || tween.target;\n\t\t\t_getChildStyles(target, b, targets);\n\t\t\ttween.render(duration, true, true);\n\t\t\t_getChildStyles(target, e);\n\t\t\ttween.render(0, true, true);\n\t\t\ttween._enabled(true);\n\t\t\ti = targets.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tdifs = _cssDif(targets[i], b[i], e[i]);\n\t\t\t\tif (difs.firstMPT) {\n\t\t\t\t\tdifs = difs.difs;\n\t\t\t\t\tfor (p in vars) {\n\t\t\t\t\t\tif (_reservedProps[p]) {\n\t\t\t\t\t\t\tdifs[p] = vars[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfrom = {};\n\t\t\t\t\tfor (p in difs) {\n\t\t\t\t\t\tfrom[p] = b[i][p];\n\t\t\t\t\t}\n\t\t\t\t\tresults.push(TweenLite.fromTo(targets[i], duration, from, difs));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tTweenPlugin.activate([CSSPlugin]);\n\t\treturn CSSPlugin;\n\n\t}, true);\n\nexport var CSSPlugin = globals.CSSPlugin;\nexport { CSSPlugin as default };","/*!\n * VERSION: 0.6.1\n * DATE: 2018-08-27\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n/* eslint-disable */\n\nimport { _gsScope } from \"./TweenLite.js\";\n\nexport var AttrPlugin = _gsScope._gsDefine.plugin({\n\tpropName: \"attr\",\n\tAPI: 2,\n\tversion: \"0.6.1\",\n\n\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\tinit: function(target, value, tween, index) {\n\t\tvar p, end;\n\t\tif (typeof(target.setAttribute) !== \"function\") {\n\t\t\treturn false;\n\t\t}\n\t\tfor (p in value) {\n\t\t\tend = value[p];\n\t\t\tif (typeof(end) === \"function\") {\n\t\t\t\tend = end(index, target);\n\t\t\t}\n\t\t\tthis._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", end + \"\", p, false, p);\n\t\t\tthis._overwriteProps.push(p);\n\t\t}\n\t\treturn true;\n\t}\n\n});\n\nexport { AttrPlugin as default };\n\n\n\n","/*!\n * VERSION: 1.6.0\n * DATE: 2018-08-27\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\n\nimport { _gsScope } from \"./TweenLite.js\";\n\nexport var RoundPropsPlugin = _gsScope._gsDefine.plugin({\n\t\t\t\tpropName: \"roundProps\",\n\t\t\t\tversion: \"1.7.0\",\n\t\t\t\tpriority: -1,\n\t\t\t\tAPI: 2,\n\n\t\t\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\tinit: function(target, value, tween) {\n\t\t\t\t\tthis._tween = tween;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t}),\n\t\t\t_getRoundFunc = function(v) { //pass in 0.1 get a function that'll round to the nearest tenth, or 5 to round to the closest 5, or 0.001 to the closest 1000th, etc.\n\t\t\t\tvar p = v < 1 ? Math.pow(10, (v + \"\").length - 2) : 1; //to avoid floating point math errors (like 24 * 0.1 == 2.4000000000000004), we chop off at a specific number of decimal places (much faster than toFixed()\n\t\t\t\treturn function(n) {\n\t\t\t\t\treturn ((Math.round(n / v) * v * p) | 0) / p;\n\t\t\t\t};\n\t\t\t},\n\t\t\t_roundLinkedList = function(node, mod) {\n\t\t\t\twhile (node) {\n\t\t\t\t\tif (!node.f && !node.blob) {\n\t\t\t\t\t\tnode.m = mod || Math.round;\n\t\t\t\t\t}\n\t\t\t\t\tnode = node._next;\n\t\t\t\t}\n\t\t\t},\n\t\t\tp = RoundPropsPlugin.prototype;\n\n\t\tp._onInitAllProps = function() {\n\t\t\tvar tween = this._tween,\n\t\t\t\trp = tween.vars.roundProps,\n\t\t\t\tlookup = {},\n\t\t\t\trpt = tween._propLookup.roundProps,\n\t\t\t\tpt, next, i, p;\n\t\t\tif (typeof(rp) === \"object\" && !rp.push) {\n\t\t\t\tfor (p in rp) {\n\t\t\t\t\tlookup[p] = _getRoundFunc(rp[p]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeof(rp) === \"string\") {\n\t\t\t\t\trp = rp.split(\",\");\n\t\t\t\t}\n\t\t\t\ti = rp.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tlookup[rp[i]] = Math.round;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (p in lookup) {\n\t\t\t\tpt = tween._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next; //record here, because it may get removed\n\t\t\t\t\tif (pt.pg) {\n\t\t\t\t\t\tpt.t._mod(lookup);\n\t\t\t\t\t} else if (pt.n === p) {\n\t\t\t\t\t\tif (pt.f === 2 && pt.t) { //a blob (text containing multiple numeric values)\n\t\t\t\t\t\t\t_roundLinkedList(pt.t._firstPT, lookup[p]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._add(pt.t, p, pt.s, pt.c, lookup[p]);\n\t\t\t\t\t\t\t//remove from linked list\n\t\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\t\tnext._prev = pt._prev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\t\t\tpt._prev._next = next;\n\t\t\t\t\t\t\t} else if (tween._firstPT === pt) {\n\t\t\t\t\t\t\t\ttween._firstPT = next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt._next = pt._prev = null;\n\t\t\t\t\t\t\ttween._propLookup[p] = rpt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp._add = function(target, p, s, c, mod) {\n\t\t\tthis._addTween(target, p, s, s + c, p, mod || Math.round);\n\t\t\tthis._overwriteProps.push(p);\n\t\t};\n\nexport { RoundPropsPlugin as default };\n","/*!\n * VERSION: 0.3.1\n * DATE: 2018-08-27\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\n\nimport { _gsScope } from \"./TweenLite.js\";\n\nexport var DirectionalRotationPlugin = _gsScope._gsDefine.plugin({\n\t\tpropName: \"directionalRotation\",\n\t\tversion: \"0.3.1\",\n\t\tAPI: 2,\n\n\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\tinit: function(target, value, tween, index) {\n\t\t\tif (typeof(value) !== \"object\") {\n\t\t\t\tvalue = {rotation:value};\n\t\t\t}\n\t\t\tthis.finals = {};\n\t\t\tvar cap = (value.useRadians === true) ? Math.PI * 2 : 360,\n\t\t\t\tmin = 0.000001,\n\t\t\t\tp, v, start, end, dif, split;\n\t\t\tfor (p in value) {\n\t\t\t\tif (p !== \"useRadians\") {\n\t\t\t\t\tend = value[p];\n\t\t\t\t\tif (typeof(end) === \"function\") {\n\t\t\t\t\t\tend = end(index, target);\n\t\t\t\t\t}\n\t\t\t\t\tsplit = (end + \"\").split(\"_\");\n\t\t\t\t\tv = split[0];\n\t\t\t\t\tstart = parseFloat( (typeof(target[p]) !== \"function\") ? target[p] : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]() );\n\t\t\t\t\tend = this.finals[p] = (typeof(v) === \"string\" && v.charAt(1) === \"=\") ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n\t\t\t\t\tdif = end - start;\n\t\t\t\t\tif (split.length) {\n\t\t\t\t\t\tv = split.join(\"_\");\n\t\t\t\t\t\tif (v.indexOf(\"short\") !== -1) {\n\t\t\t\t\t\t\tdif = dif % cap;\n\t\t\t\t\t\t\tif (dif !== dif % (cap / 2)) {\n\t\t\t\t\t\t\t\tdif = (dif < 0) ? dif + cap : dif - cap;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t\t\t\t\t\t\tdif = ((dif + cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t} else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t\t\t\t\t\t\tdif = ((dif - cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dif > min || dif < -min) {\n\t\t\t\t\t\tthis._addTween(target, p, start, start + dif, p);\n\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\tset: function(ratio) {\n\t\t\tvar pt;\n\t\t\tif (ratio !== 1) {\n\t\t\t\tthis._super.setRatio.call(this, ratio);\n\t\t\t} else {\n\t\t\t\tpt = this._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.f) {\n\t\t\t\t\t\tpt.t[pt.p](this.finals[pt.p]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.t[pt.p] = this.finals[pt.p];\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\nDirectionalRotationPlugin._autoCSS = true;\n\nexport { DirectionalRotationPlugin as default };","/*!\n * VERSION: 2.1.3\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n/* eslint-disable */\n\nimport TweenLite, { _gsScope, globals, Animation, SimpleTimeline } from \"./TweenLite.js\";\n\n_gsScope._gsDefine(\"TimelineLite\", [\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"], function() {\n\n\t\tvar TimelineLite = function(vars) {\n\t\t\t\tSimpleTimeline.call(this, vars);\n\t\t\t\tvar self = this,\n\t\t\t\t\tv = self.vars,\n\t\t\t\t\tval, p;\n\t\t\t\tself._labels = {};\n\t\t\t\tself.autoRemoveChildren = !!v.autoRemoveChildren;\n\t\t\t\tself.smoothChildTiming = !!v.smoothChildTiming;\n\t\t\t\tself._sortChildren = true;\n\t\t\t\tself._onUpdate = v.onUpdate;\n\t\t\t\tfor (p in v) {\n\t\t\t\t\tval = v[p];\n\t\t\t\t\tif (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tv[p] = self._swapSelfInParams(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (_isArray(v.tweens)) {\n\t\t\t\t\tself.add(v.tweens, 0, v.align, v.stagger);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_tinyNum = 0.00000001,\n\t\t\tTweenLiteInternals = TweenLite._internals,\n\t\t\t_internals = TimelineLite._internals = {},\n\t\t\t_isSelector = TweenLiteInternals.isSelector,\n\t\t\t_isArray = TweenLiteInternals.isArray,\n\t\t\t_lazyTweens = TweenLiteInternals.lazyTweens,\n\t\t\t_lazyRender = TweenLiteInternals.lazyRender,\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\t_copy = function(vars) {\n\t\t\t\tvar copy = {}, p;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tcopy[p] = vars[p];\n\t\t\t\t}\n\t\t\t\treturn copy;\n\t\t\t},\n\t\t\t_applyCycle = function(vars, targets, i) {\n\t\t\t\tvar alt = vars.cycle,\n\t\t\t\t\tp, val;\n\t\t\t\tfor (p in alt) {\n\t\t\t\t\tval = alt[p];\n\t\t\t\t\tvars[p] = (typeof(val) === \"function\") ? val(i, targets[i], targets) : val[i % val.length];\n\t\t\t\t}\n\t\t\t\tdelete vars.cycle;\n\t\t\t},\n\t\t\t_pauseCallback = _internals.pauseCallback = function() {},\n\t\t\t_slice = function(a) { //don't use [].slice because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\tvar b = [],\n\t\t\t\t\tl = a.length,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 0; i !== l; b.push(a[i++]));\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\t_defaultImmediateRender = function(tl, toVars, fromVars, defaultFalse) { //default to immediateRender:true unless otherwise set in toVars, fromVars or if defaultFalse is passed in as true\n\t\t\t\tvar ir = \"immediateRender\";\n\t\t\t\tif (!(ir in toVars)) {\n\t\t\t\t\ttoVars[ir] = !((fromVars && fromVars[ir] === false) || defaultFalse);\n\t\t\t\t}\n\t\t\t\treturn toVars;\n\t\t\t},\n\t\t\t//for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following\n\t\t\t_distribute = function(v) {\n\t\t\t\tif (typeof(v) === \"function\") {\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tvar vars = (typeof(v) === \"object\") ? v : {each:v}, //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total \"amount\" that's chunked out among them all.\n\t\t\t\t\tease = vars.ease,\n\t\t\t\t\tfrom = vars.from || 0,\n\t\t\t\t\tbase = vars.base || 0,\n\t\t\t\t\tcache = {},\n\t\t\t\t\tisFromKeyword = isNaN(from),\n\t\t\t\t\taxis = vars.axis,\n\t\t\t\t\tratio = {center:0.5, end:1}[from] || 0;\n\t\t\t\treturn function(i, target, a) {\n\t\t\t\t\tvar l = (a || vars).length,\n\t\t\t\t\t\tdistances = cache[l],\n\t\t\t\t\t\toriginX, originY, x, y, d, j, max, min, wrap;\n\t\t\t\t\tif (!distances) {\n\t\t\t\t\t\twrap = (vars.grid === \"auto\") ? 0 : (vars.grid || [Infinity])[0];\n\t\t\t\t\t\tif (!wrap) {\n\t\t\t\t\t\t\tmax = -Infinity;\n\t\t\t\t\t\t\twhile (max < (max = a[wrap++].getBoundingClientRect().left) && wrap < l) { }\n\t\t\t\t\t\t\twrap--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdistances = cache[l] = [];\n\t\t\t\t\t\toriginX = isFromKeyword ? (Math.min(wrap, l) * ratio) - 0.5 : from % wrap;\n\t\t\t\t\t\toriginY = isFromKeyword ? l * ratio / wrap - 0.5 : (from / wrap) | 0;\n\t\t\t\t\t\tmax = 0;\n\t\t\t\t\t\tmin = Infinity;\n\t\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\t\tx = (j % wrap) - originX;\n\t\t\t\t\t\t\ty = originY - ((j / wrap) | 0);\n\t\t\t\t\t\t\tdistances[j] = d = !axis ? Math.sqrt(x * x + y * y) : Math.abs((axis === \"y\") ? y : x);\n\t\t\t\t\t\t\tif (d > max) {\n\t\t\t\t\t\t\t\tmax = d;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (d < min) {\n\t\t\t\t\t\t\t\tmin = d;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdistances.max = max - min;\n\t\t\t\t\t\tdistances.min = min;\n\t\t\t\t\t\tdistances.v = l = vars.amount || (vars.each * (wrap > l ? l - 1 : !axis ? Math.max(wrap, l / wrap) : axis === \"y\" ? l / wrap : wrap)) || 0;\n\t\t\t\t\t\tdistances.b = (l < 0) ? base - l : base;\n\t\t\t\t\t}\n\t\t\t\t\tl = (distances[i] - distances.min) / distances.max;\n\t\t\t\t\treturn distances.b + (ease ? ease.getRatio(l) : l) * distances.v;\n\t\t\t\t};\n\t\t\t},\n\t\t\tp = TimelineLite.prototype = new SimpleTimeline();\n\n\t\tTimelineLite.version = \"2.1.3\";\n\t\tTimelineLite.distribute = _distribute;\n\t\tp.constructor = TimelineLite;\n\t\tp.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n\n\t\t/* might use later...\n\t\t//translates a local time inside an animation to the corresponding time on the root/global timeline, factoring in all nesting and timeScales.\n\t\tfunction localToGlobal(time, animation) {\n\t\t\twhile (animation) {\n\t\t\t\ttime = (time / animation._timeScale) + animation._startTime;\n\t\t\t\tanimation = animation.timeline;\n\t\t\t}\n\t\t\treturn time;\n\t\t}\n\n\t\t//translates the supplied time on the root/global timeline into the corresponding local time inside a particular animation, factoring in all nesting and timeScales\n\t\tfunction globalToLocal(time, animation) {\n\t\t\tvar scale = 1;\n\t\t\ttime -= localToGlobal(0, animation);\n\t\t\twhile (animation) {\n\t\t\t\tscale *= animation._timeScale;\n\t\t\t\tanimation = animation.timeline;\n\t\t\t}\n\t\t\treturn time * scale;\n\t\t}\n\t\t*/\n\n\t\tp.to = function(target, duration, vars, position) {\n\t\t\tvar Engine = (vars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\treturn duration ? this.add( new Engine(target, duration, vars), position) : this.set(target, vars, position);\n\t\t};\n\n\t\tp.from = function(target, duration, vars, position) {\n\t\t\treturn this.add( ((vars.repeat && _globals.TweenMax) || TweenLite).from(target, duration, _defaultImmediateRender(this, vars)), position);\n\t\t};\n\n\t\tp.fromTo = function(target, duration, fromVars, toVars, position) {\n\t\t\tvar Engine = (toVars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\ttoVars = _defaultImmediateRender(this, toVars, fromVars);\n\t\t\treturn duration ? this.add( Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n\t\t};\n\n\t\tp.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvar tl = new TimelineLite({onComplete:onCompleteAll, onCompleteParams:onCompleteAllParams, callbackScope:onCompleteAllScope, smoothChildTiming:this.smoothChildTiming}),\n\t\t\t\tstaggerFunc = _distribute(vars.stagger || stagger),\n\t\t\t\tstartAt = vars.startAt,\n\t\t\t\tcycle = vars.cycle,\n\t\t\t\tcopy, i;\n\t\t\tif (typeof(targets) === \"string\") {\n\t\t\t\ttargets = TweenLite.selector(targets) || targets;\n\t\t\t}\n\t\t\ttargets = targets || [];\n\t\t\tif (_isSelector(targets)) { //if the targets object is a selector, translate it into an array.\n\t\t\t\ttargets = _slice(targets);\n\t\t\t}\n\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\tcopy = _copy(vars);\n\t\t\t\tif (startAt) {\n\t\t\t\t\tcopy.startAt = _copy(startAt);\n\t\t\t\t\tif (startAt.cycle) {\n\t\t\t\t\t\t_applyCycle(copy.startAt, targets, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cycle) {\n\t\t\t\t\t_applyCycle(copy, targets, i);\n\t\t\t\t\tif (copy.duration != null) {\n\t\t\t\t\t\tduration = copy.duration;\n\t\t\t\t\t\tdelete copy.duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttl.to(targets[i], duration, copy, staggerFunc(i, targets[i], targets));\n\t\t\t}\n\t\t\treturn this.add(tl, position);\n\t\t};\n\n\t\tp.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvars.runBackwards = true;\n\t\t\treturn this.staggerTo(targets, duration, _defaultImmediateRender(this, vars), stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\treturn this.staggerTo(targets, duration, _defaultImmediateRender(this, toVars, fromVars), stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.call = function(callback, params, scope, position) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\n\t\tp.set = function(target, vars, position) {\n\t\t\treturn this.add( new TweenLite(target, 0, _defaultImmediateRender(this, vars, null, true)), position);\n\t\t};\n\n\t\tTimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n\t\t\tvars = vars || {};\n\t\t\tif (vars.smoothChildTiming == null) {\n\t\t\t\tvars.smoothChildTiming = true;\n\t\t\t}\n\t\t\tvar tl = new TimelineLite(vars),\n\t\t\t\troot = tl._timeline,\n\t\t\t\thasNegativeStart, time,\ttween, next;\n\t\t\tif (ignoreDelayedCalls == null) {\n\t\t\t\tignoreDelayedCalls = true;\n\t\t\t}\n\t\t\troot._remove(tl, true);\n\t\t\ttl._startTime = 0;\n\t\t\ttl._rawPrevTime = tl._time = tl._totalTime = root._time;\n\t\t\ttween = root._first;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next;\n\t\t\t\tif (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n\t\t\t\t\ttime = tween._startTime - tween._delay;\n\t\t\t\t\tif (time < 0) {\n\t\t\t\t\t\thasNegativeStart = 1;\n\t\t\t\t\t}\n\t\t\t\t\ttl.add(tween, time);\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t\troot.add(tl, 0);\n\t\t\tif (hasNegativeStart) { //calling totalDuration() will force the adjustment necessary to shift the children forward so none of them start before zero, and moves the timeline backwards the same amount, so the playhead is still aligned where it should be globally, but the timeline doesn't have illegal children that start before zero.\n\t\t\t\ttl.totalDuration();\n\t\t\t}\n\t\t\treturn tl;\n\t\t};\n\n\t\tp.add = function(value, position, align, stagger) {\n\t\t\tvar self = this,\n\t\t\t\tcurTime, l, i, child, tl, beforeRawTime;\n\t\t\tif (typeof(position) !== \"number\") {\n\t\t\t\tposition = self._parseTimeOrLabel(position, 0, true, value);\n\t\t\t}\n\t\t\tif (!(value instanceof Animation)) {\n\t\t\t\tif ((value instanceof Array) || (value && value.push && _isArray(value))) {\n\t\t\t\t\talign = align || \"normal\";\n\t\t\t\t\tstagger = stagger || 0;\n\t\t\t\t\tcurTime = position;\n\t\t\t\t\tl = value.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif (_isArray(child = value[i])) {\n\t\t\t\t\t\t\tchild = new TimelineLite({tweens:child});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.add(child, curTime);\n\t\t\t\t\t\tif (typeof(child) !== \"string\" && typeof(child) !== \"function\") {\n\t\t\t\t\t\t\tif (align === \"sequence\") {\n\t\t\t\t\t\t\t\tcurTime = child._startTime + (child.totalDuration() / child._timeScale);\n\t\t\t\t\t\t\t} else if (align === \"start\") {\n\t\t\t\t\t\t\t\tchild._startTime -= child.delay();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurTime += stagger;\n\t\t\t\t\t}\n\t\t\t\t\treturn self._uncache(true);\n\t\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\t\treturn self.addLabel(value, position);\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\tvalue = TweenLite.delayedCall(0, value);\n\t\t\t\t} else {\n\t\t\t\t\tthrow(\"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSimpleTimeline.prototype.add.call(self, value, position);\n\n\t\t\tif (value._time || (!value._duration && value._initted)) { //in case, for example, the _startTime is moved on a tween that has already rendered. Imagine it's at its end state, then the startTime is moved WAY later (after the end of this timeline), it should render at its beginning.\n\t\t\t\tcurTime = (self.rawTime() - value._startTime) * value._timeScale;\n\t\t\t\tif (!value._duration || Math.abs(Math.max(0, Math.min(value.totalDuration(), curTime))) - value._totalTime > 0.00001) {\n\t\t\t\t\tvalue.render(curTime, false, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.\n\t\t\tif (self._gc || self._time === self._duration) if (!self._paused) if (self._duration < self.duration()) {\n\t\t\t\t//in case any of the ancestors had completed but should now be enabled...\n\t\t\t\ttl = self;\n\t\t\t\tbeforeRawTime = (tl.rawTime() > value._startTime); //if the tween is placed on the timeline so that it starts BEFORE the current rawTime, we should align the playhead (move the timeline). This is because sometimes users will create a timeline, let it finish, and much later append a tween and expect it to run instead of jumping to its end state. While technically one could argue that it should jump to its end state, that's not what users intuitively expect.\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tif (beforeRawTime && tl._timeline.smoothChildTiming) {\n\t\t\t\t\t\ttl.totalTime(tl._totalTime, true); //moves the timeline (shifts its startTime) if necessary, and also enables it.\n\t\t\t\t\t} else if (tl._gc) {\n\t\t\t\t\t\ttl._enabled(true, false);\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn self;\n\t\t};\n\n\t\tp.remove = function(value) {\n\t\t\tif (value instanceof Animation) {\n\t\t\t\tthis._remove(value, false);\n\t\t\t\tvar tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline; //now that it's removed, default it to the root timeline so that if it gets played again, it doesn't jump back into this timeline.\n\t\t\t\tvalue._startTime = (value._paused ? value._pauseTime : tl._time) - ((!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale); //ensure that if it gets played again, the timing is correct.\n\t\t\t\treturn this;\n\t\t\t} else if (value instanceof Array || (value && value.push && _isArray(value))) {\n\t\t\t\tvar i = value.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tthis.remove(value[i]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\treturn this.removeLabel(value);\n\t\t\t}\n\t\t\treturn this.kill(null, value);\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tSimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n\t\t\tvar last = this._last;\n\t\t\tif (!last) {\n\t\t\t\tthis._time = this._totalTime = this._duration = this._totalDuration = 0;\n\t\t\t} else if (this._time > this.duration()) {\n\t\t\t\tthis._time = this._duration;\n\t\t\t\tthis._totalTime = this._totalDuration;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.append = function(value, offsetOrLabel) {\n\t\t\treturn this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n\t\t};\n\n\t\tp.insert = p.insertMultiple = function(value, position, align, stagger) {\n\t\t\treturn this.add(value, position || 0, align, stagger);\n\t\t};\n\n\t\tp.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n\t\t\treturn this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n\t\t};\n\n\t\tp.addLabel = function(label, position) {\n\t\t\tthis._labels[label] = this._parseTimeOrLabel(position);\n\t\t\treturn this;\n\t\t};\n\n\t\tp.addPause = function(position, callback, params, scope) {\n\t\t\tvar t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n\t\t\tt.vars.onComplete = t.vars.onReverseComplete = callback;\n\t\t\tt.data = \"isPause\";\n\t\t\tthis._hasPause = true;\n\t\t\treturn this.add(t, position);\n\t\t};\n\n\t\tp.removeLabel = function(label) {\n\t\t\tdelete this._labels[label];\n\t\t\treturn this;\n\t\t};\n\n\t\tp.getLabelTime = function(label) {\n\t\t\treturn (this._labels[label] != null) ? this._labels[label] : -1;\n\t\t};\n\n\t\tp._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n\t\t\tvar clippedDuration, i;\n\t\t\t//if we're about to add a tween/timeline (or an array of them) that's already a child of this timeline, we should remove it first so that it doesn't contaminate the duration().\n\t\t\tif (ignore instanceof Animation && ignore.timeline === this) {\n\t\t\t\tthis.remove(ignore);\n\t\t\t} else if (ignore && ((ignore instanceof Array) || (ignore.push && _isArray(ignore)))) {\n\t\t\t\ti = ignore.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n\t\t\t\t\t\tthis.remove(ignore[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tclippedDuration = (typeof(timeOrLabel) === \"number\" && !offsetOrLabel) ? 0 : (this.duration() > 99999999999) ? this.recent().endTime(false) : this._duration; //in case there's a child that infinitely repeats, users almost never intend for the insertion point of a new child to be based on a SUPER long value like that so we clip it and assume the most recently-added child's endTime should be used instead.\n\t\t\tif (typeof(offsetOrLabel) === \"string\") {\n\t\t\t\treturn this._parseTimeOrLabel(offsetOrLabel, (appendIfAbsent && typeof(timeOrLabel) === \"number\" && this._labels[offsetOrLabel] == null) ? timeOrLabel - clippedDuration : 0, appendIfAbsent);\n\t\t\t}\n\t\t\toffsetOrLabel = offsetOrLabel || 0;\n\t\t\tif (typeof(timeOrLabel) === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) { //if the string is a number like \"1\", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).\n\t\t\t\ti = timeOrLabel.indexOf(\"=\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tif (this._labels[timeOrLabel] == null) {\n\t\t\t\t\t\treturn appendIfAbsent ? (this._labels[timeOrLabel] = clippedDuration + offsetOrLabel) : offsetOrLabel;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._labels[timeOrLabel] + offsetOrLabel;\n\t\t\t\t}\n\t\t\t\toffsetOrLabel = parseInt(timeOrLabel.charAt(i-1) + \"1\", 10) * Number(timeOrLabel.substr(i+1));\n\t\t\t\ttimeOrLabel = (i > 1) ? this._parseTimeOrLabel(timeOrLabel.substr(0, i-1), 0, appendIfAbsent) : clippedDuration;\n\t\t\t} else if (timeOrLabel == null) {\n\t\t\t\ttimeOrLabel = clippedDuration;\n\t\t\t}\n\t\t\treturn Number(timeOrLabel) + offsetOrLabel;\n\t\t};\n\n\t\tp.seek = function(position, suppressEvents) {\n\t\t\treturn this.totalTime((typeof(position) === \"number\") ? position : this._parseTimeOrLabel(position), (suppressEvents !== false));\n\t\t};\n\n\t\tp.stop = function() {\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.gotoAndPlay = function(position, suppressEvents) {\n\t\t\treturn this.play(position, suppressEvents);\n\t\t};\n\n\t\tp.gotoAndStop = function(position, suppressEvents) {\n\t\t\treturn this.pause(position, suppressEvents);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar self = this,\n\t\t\t\tprevTime = self._time,\n\t\t\t\ttotalDur = (!self._dirty) ? self._totalDuration : self.totalDuration(),\n\t\t\t\tprevStart = self._startTime,\n\t\t\t\tprevTimeScale = self._timeScale,\n\t\t\t\tprevPaused = self._paused,\n\t\t\t\ttween, isComplete, next, callback, internalForce, pauseTween, curTime, pauseTime;\n\t\t\tif (prevTime !== self._time) { //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).\n\t\t\t\ttime += self._time - prevTime;\n\t\t\t}\n\t\t\tif (self._hasPause && !self._forcingPlayhead && !suppressEvents) {\n\t\t\t\tif (time > prevTime) {\n\t\t\t\t\ttween = self._first;\n\t\t\t\t\twhile (tween && tween._startTime <= time && !pauseTween) {\n\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && self._rawPrevTime === 0)) {\n\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttween = self._last;\n\t\t\t\t\twhile (tween && tween._startTime >= time && !pauseTween) {\n\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = tween._prev;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pauseTween) {\n\t\t\t\t\tself._time = self._totalTime = time = pauseTween._startTime;\n\t\t\t\t\tpauseTime = self._startTime + (self._reversed ? self._duration - time : time) / self._timeScale;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (time >= totalDur - _tinyNum && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tself._totalTime = self._time = totalDur;\n\t\t\t\tif (!self._reversed) if (!self._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tinternalForce = !!self._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t\tif (self._duration === 0) if ((time <= 0 && time >= -_tinyNum) || self._rawPrevTime < 0 || self._rawPrevTime === _tinyNum) if (self._rawPrevTime !== time && self._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (self._rawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself._rawPrevTime = (self._duration || !suppressEvents || time || self._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\ttime = totalDur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7.\n\n\t\t\t} else if (time < _tinyNum) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tself._totalTime = self._time = 0;\n\t\t\t\tif (time > -_tinyNum) {\n\t\t\t\t\ttime = 0;\n\t\t\t\t}\n\t\t\t\tif (prevTime !== 0 || (self._duration === 0 && self._rawPrevTime !== _tinyNum && (self._rawPrevTime > 0 || (time < 0 && self._rawPrevTime >= 0)))) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = self._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tself._active = false;\n\t\t\t\t\tif (self._timeline.autoRemoveChildren && self._reversed) { //ensures proper GC if a timeline is resumed after it's finished reversing.\n\t\t\t\t\t\tinternalForce = isComplete = true;\n\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t} else if (self._rawPrevTime >= 0 && self._first) { //when going back beyond the start, force a render so that zero-duration tweens that sit at the very beginning render their start values properly. Otherwise, if the parent timeline's playhead lands exactly at this timeline's startTime, and then moves backwards, the zero-duration tweens at the beginning would still be at their end state.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tself._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tself._rawPrevTime = (self._duration || !suppressEvents || time || self._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\tif (time === 0 && isComplete) { //if there's a zero-duration tween at the very beginning of a timeline and the playhead lands EXACTLY at time 0, that tween will correctly render its end values, but we need to keep the timeline alive for one more render so that the beginning values render properly as the parent's playhead keeps moving beyond the begining. Imagine obj.x starts at 0 and then we do tl.set(obj, {x:100}).to(obj, 1, {x:200}) and then later we tl.reverse()...the goal is to have obj.x revert to 0. If the playhead happens to land on exactly 0, without this chunk of code, it'd complete the timeline and remove it from the rendering queue (not good).\n\t\t\t\t\t\ttween = self._first;\n\t\t\t\t\t\twhile (tween && tween._startTime === 0) {\n\t\t\t\t\t\t\tif (!tween._duration) {\n\t\t\t\t\t\t\t\tisComplete = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!self._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tself._totalTime = self._time = self._rawPrevTime = time;\n\t\t\t}\n\t\t\tif ((self._time === prevTime || !self._first) && !force && !internalForce && !pauseTween) {\n\t\t\t\treturn;\n\t\t\t} else if (!self._initted) {\n\t\t\t\tself._initted = true;\n\t\t\t}\n\n\t\t\tif (!self._active) if (!self._paused && self._time !== prevTime && time > 0) {\n\t\t\t\tself._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\n\t\t\tif (prevTime === 0) if (self.vars.onStart) if (self._time !== 0 || !self._duration) if (!suppressEvents) {\n\t\t\t\tself._callback(\"onStart\");\n\t\t\t}\n\n\t\t\tcurTime = self._time;\n\t\t\tif (curTime >= prevTime) {\n\t\t\t\ttween = self._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== self._time || (self._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= curTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tself.pause();\n\t\t\t\t\t\t\tself._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = self._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== self._time || (self._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tpauseTween = tween._prev; //the linked list is organized by _startTime, thus it's possible that a tween could start BEFORE the pause and end after it, in which case it would be positioned before the pause tween in the linked list, but we should render it before we pause() the timeline and cease rendering. This is only a concern when going in reverse.\n\t\t\t\t\t\t\twhile (pauseTween && pauseTween.endTime() > self._time) {\n\t\t\t\t\t\t\t\tpauseTween.render( (pauseTween._reversed ? pauseTween.totalDuration() - ((time - pauseTween._startTime) * pauseTween._timeScale) : (time - pauseTween._startTime) * pauseTween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t\t\tpauseTween = pauseTween._prev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpauseTween = null;\n\t\t\t\t\t\t\tself.pause();\n\t\t\t\t\t\t\tself._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (self._onUpdate) if (!suppressEvents) {\n\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tself._callback(\"onUpdate\");\n\t\t\t}\n\n\t\t\tif (callback) if (!self._gc) if (prevStart === self._startTime || prevTimeScale !== self._timeScale) if (self._time === 0 || totalDur >= self.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onComplete on a timeline that reports/checks tweened values.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t\tif (self._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tself._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tself._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && self.vars[callback]) {\n\t\t\t\t\tself._callback(callback);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._hasPausedChild = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._paused || ((tween instanceof TimelineLite) && tween._hasPausedChild())) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || -9999999999;\n\t\t\tvar a = [],\n\t\t\t\ttween = this._first,\n\t\t\t\tcnt = 0;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime < ignoreBeforeTime) {\n\t\t\t\t\t//do nothing\n\t\t\t\t} else if (tween instanceof TweenLite) {\n\t\t\t\t\tif (tweens !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (timelines !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t\tif (nested !== false) {\n\t\t\t\t\t\ta = a.concat(tween.getChildren(true, tweens, timelines));\n\t\t\t\t\t\tcnt = a.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp.getTweensOf = function(target, nested) {\n\t\t\tvar disabled = this._gc,\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\ttweens, i;\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(true, true); //getTweensOf() filters out disabled tweens, and we have to mark them as _gc = true when the timeline completes in order to allow clean garbage collection, so temporarily re-enable the timeline here.\n\t\t\t}\n\t\t\ttweens = TweenLite.getTweensOf(target);\n\t\t\ti = tweens.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i].timeline === this || (nested && this._contains(tweens[i]))) {\n\t\t\t\t\ta[cnt++] = tweens[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(false, true);\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp.recent = function() {\n\t\t\treturn this._recent;\n\t\t};\n\n\t\tp._contains = function(tween) {\n\t\t\tvar tl = tween.timeline;\n\t\t\twhile (tl) {\n\t\t\t\tif (tl === this) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttl = tl.timeline;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || 0;\n\t\t\tvar tween = this._first,\n\t\t\t\tlabels = this._labels,\n\t\t\t\tp;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime >= ignoreBeforeTime) {\n\t\t\t\t\ttween._startTime += amount;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\tif (adjustLabels) {\n\t\t\t\tfor (p in labels) {\n\t\t\t\t\tif (labels[p] >= ignoreBeforeTime) {\n\t\t\t\t\t\tlabels[p] += amount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp._kill = function(vars, target) {\n\t\t\tif (!vars && !target) {\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\tvar tweens = (!target) ? this.getChildren(true, true, false) : this.getTweensOf(target),\n\t\t\t\ti = tweens.length,\n\t\t\t\tchanged = false;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i]._kill(vars, target)) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.clear = function(labels) {\n\t\t\tvar tweens = this.getChildren(false, true, true),\n\t\t\t\ti = tweens.length;\n\t\t\tthis._time = this._totalTime = 0;\n\t\t\twhile (--i > -1) {\n\t\t\t\ttweens[i]._enabled(false, false);\n\t\t\t}\n\t\t\tif (labels !== false) {\n\t\t\t\tthis._labels = {};\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\ttween.invalidate();\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn Animation.prototype.invalidate.call(this);;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (enabled === this._gc) {\n\t\t\t\tvar tween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\ttween._enabled(enabled, true);\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t};\n\n\t\tp.totalTime = function(time, suppressEvents, uncapped) {\n\t\t\tthis._forcingPlayhead = true;\n\t\t\tvar val = Animation.prototype.totalTime.apply(this, arguments);\n\t\t\tthis._forcingPlayhead = false;\n\t\t\treturn val;\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tthis.totalDuration(); //just triggers recalculation\n\t\t\t\t}\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tif (this.duration() !== 0 && value !== 0) {\n\t\t\t\tthis.timeScale(this._duration / value);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tvar max = 0,\n\t\t\t\t\t\tself = this,\n\t\t\t\t\t\ttween = self._last,\n\t\t\t\t\t\tprevStart = 999999999999,\n\t\t\t\t\t\tprev, end;\n\t\t\t\t\twhile (tween) {\n\t\t\t\t\t\tprev = tween._prev; //record it here in case the tween changes position in the sequence...\n\t\t\t\t\t\tif (tween._dirty) {\n\t\t\t\t\t\t\ttween.totalDuration(); //could change the tween._startTime, so make sure the tween's cache is clean before analyzing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime > prevStart && self._sortChildren && !tween._paused && !self._calculatingDuration) { //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence\n\t\t\t\t\t\t\tself._calculatingDuration = 1; //prevent endless recursive calls - there are methods that get triggered that check duration/totalDuration when we add(), like _parseTimeOrLabel().\n\t\t\t\t\t\t\tself.add(tween, tween._startTime - tween._delay);\n\t\t\t\t\t\t\tself._calculatingDuration = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprevStart = tween._startTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime < 0 && !tween._paused) { //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.\n\t\t\t\t\t\t\tmax -= tween._startTime;\n\t\t\t\t\t\t\tif (self._timeline.smoothChildTiming) {\n\t\t\t\t\t\t\t\tself._startTime += tween._startTime / self._timeScale;\n\t\t\t\t\t\t\t\tself._time -= tween._startTime;\n\t\t\t\t\t\t\t\tself._totalTime -= tween._startTime;\n\t\t\t\t\t\t\t\tself._rawPrevTime -= tween._startTime;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tself.shiftChildren(-tween._startTime, false, -9999999999);\n\t\t\t\t\t\t\tprevStart = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tend = tween._startTime + (tween._totalDuration / tween._timeScale);\n\t\t\t\t\t\tif (end > max) {\n\t\t\t\t\t\t\tmax = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = prev;\n\t\t\t\t\t}\n\t\t\t\t\tself._duration = self._totalDuration = max;\n\t\t\t\t\tself._dirty = false;\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (value && this.totalDuration()) ? this.timeScale(this._totalDuration / value) : this;\n\t\t};\n\n\t\tp.paused = function(value) {\n\t\t\tif (value === false && this._paused) { //if there's a pause directly at the spot from where we're unpausing, skip it.\n\t\t\t\tvar tween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tif (tween._startTime === this._time && tween.data === \"isPause\") {\n\t\t\t\t\t\ttween._rawPrevTime = 0; //remember, _rawPrevTime is how zero-duration tweens/callbacks sense directionality and determine whether or not to fire. If _rawPrevTime is the same as _startTime on the next render, it won't fire.\n\t\t\t\t\t}\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Animation.prototype.paused.apply(this, arguments);\n\t\t};\n\n\t\tp.usesFrames = function() {\n\t\t\tvar tl = this._timeline;\n\t\t\twhile (tl._timeline) {\n\t\t\t\ttl = tl._timeline;\n\t\t\t}\n\t\t\treturn (tl === Animation._rootFramesTimeline);\n\t\t};\n\n\t\tp.rawTime = function(wrapRepeats) {\n\t\t\treturn (wrapRepeats && (this._paused || (this._repeat && this.time() > 0 && this.totalProgress() < 1))) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(wrapRepeats) - this._startTime) * this._timeScale;\n\t\t};\n\n\t\treturn TimelineLite;\n\n\t}, true);\n\nexport var TimelineLite = globals.TimelineLite;\nexport { TimelineLite as default };\n","/*!\n * VERSION: 2.1.3\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n/* eslint-disable */\n\nimport TweenLite, { _gsScope, globals, Ease, Animation } from \"./TweenLite.js\";\nimport TimelineLite from \"./TimelineLite.js\";\n\n_gsScope._gsDefine(\"TimelineMax\", [\"TimelineLite\",\"TweenLite\",\"easing.Ease\"], function() {\n\t\t\n\t\tvar TimelineMax = function(vars) {\n\t\t\t\tTimelineLite.call(this, vars);\n\t\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\t\tthis._cycle = 0;\n\t\t\t\tthis._yoyo = !!this.vars.yoyo;\n\t\t\t\tthis._dirty = true;\n\t\t\t},\n\t\t\t_tinyNum = 0.00000001,\n\t\t\tTweenLiteInternals = TweenLite._internals,\n\t\t\t_lazyTweens = TweenLiteInternals.lazyTweens,\n\t\t\t_lazyRender = TweenLiteInternals.lazyRender,\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\t_easeNone = new Ease(null, null, 1, 0),\n\t\t\tp = TimelineMax.prototype = new TimelineLite();\n\n\t\tp.constructor = TimelineMax;\n\t\tp.kill()._gc = false;\n\t\tTimelineMax.version = \"2.1.3\";\n\n\t\tp.invalidate = function() {\n\t\t\tthis._yoyo = !!this.vars.yoyo;\n\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\tthis._uncache(true);\n\t\t\treturn TimelineLite.prototype.invalidate.call(this);\n\t\t};\n\n\t\tp.addCallback = function(callback, position, params, scope) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\n\t\tp.removeCallback = function(callback, position) {\n\t\t\tif (callback) {\n\t\t\t\tif (position == null) {\n\t\t\t\t\tthis._kill(null, callback);\n\t\t\t\t} else {\n\t\t\t\t\tvar a = this.getTweensOf(callback, false),\n\t\t\t\t\t\ti = a.length,\n\t\t\t\t\t\ttime = this._parseTimeOrLabel(position);\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i]._startTime === time) {\n\t\t\t\t\t\t\ta[i]._enabled(false, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.removePause = function(position) {\n\t\t\treturn this.removeCallback(TimelineLite._internals.pauseCallback, position);\n\t\t};\n\n\t\tp.tweenTo = function(position, vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar copy = {ease:_easeNone, useFrames:this.usesFrames(), immediateRender:false, lazy:false},\n\t\t\t\tEngine = (vars.repeat && _globals.TweenMax) || TweenLite,\n\t\t\t\tduration, p, t;\n\t\t\tfor (p in vars) {\n\t\t\t\tcopy[p] = vars[p];\n\t\t\t}\n\t\t\tcopy.time = this._parseTimeOrLabel(position);\n\t\t\tduration = (Math.abs(Number(copy.time) - this._time) / this._timeScale) || 0.001;\n\t\t\tt = new Engine(this, duration, copy);\n\t\t\tcopy.onStart = function() {\n\t\t\t\tt.target.paused(true);\n\t\t\t\tif (t.vars.time !== t.target.time() && duration === t.duration() && !t.isFromTo) { //don't make the duration zero - if it's supposed to be zero, don't worry because it's already initting the tween and will complete immediately, effectively making the duration zero anyway. If we make duration zero, the tween won't run at all.\n\t\t\t\t\tt.duration( Math.abs( t.vars.time - t.target.time()) / t.target._timeScale ).render(t.time(), true, true); //render() right away to ensure that things look right, especially in the case of .tweenTo(0).\n\t\t\t\t}\n\t\t\t\tif (vars.onStart) { //in case the user had an onStart in the vars - we don't want to overwrite it.\n\t\t\t\t\tvars.onStart.apply(vars.onStartScope || vars.callbackScope || t, vars.onStartParams || []); //don't use t._callback(\"onStart\") or it'll point to the copy.onStart and we'll get a recursion error.\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn t;\n\t\t};\n\n\t\tp.tweenFromTo = function(fromPosition, toPosition, vars) {\n\t\t\tvars = vars || {};\n\t\t\tfromPosition = this._parseTimeOrLabel(fromPosition);\n\t\t\tvars.startAt = {onComplete:this.seek, onCompleteParams:[fromPosition], callbackScope:this};\n\t\t\tvars.immediateRender = (vars.immediateRender !== false);\n\t\t\tvar t = this.tweenTo(toPosition, vars);\n\t\t\tt.isFromTo = 1; //to ensure we don't mess with the duration in the onStart (we've got the start and end values here, so lock it in)\n\t\t\treturn t.duration((Math.abs( t.vars.time - fromPosition) / this._timeScale) || 0.001);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar self = this,\n\t\t\t\tprevTime = self._time,\n\t\t\t\ttotalDur = (!self._dirty) ? self._totalDuration : self.totalDuration(),\n\t\t\t\tdur = self._duration,\n\t\t\t\tprevTotalTime = self._totalTime,\n\t\t\t\tprevStart = self._startTime,\n\t\t\t\tprevTimeScale = self._timeScale,\n\t\t\t\tprevRawPrevTime = self._rawPrevTime,\n\t\t\t\tprevPaused = self._paused,\n\t\t\t\tprevCycle = self._cycle,\n\t\t\t\ttween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime, pauseTime;\n\t\t\tif (prevTime !== self._time) { //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).\n\t\t\t\ttime += self._time - prevTime;\n\t\t\t}\n\t\t\tif (time >= totalDur - _tinyNum && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tif (!self._locked) {\n\t\t\t\t\tself._totalTime = totalDur;\n\t\t\t\t\tself._cycle = self._repeat;\n\t\t\t\t}\n\t\t\t\tif (!self._reversed) if (!self._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tinternalForce = !!self._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t\tif (self._duration === 0) if ((time <= 0 && time >= -_tinyNum) || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && self._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself._rawPrevTime = (self._duration || !suppressEvents || time || self._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\tif (self._yoyo && (self._cycle & 1)) {\n\t\t\t\t\tself._time = time = 0;\n\t\t\t\t} else {\n\t\t\t\t\tself._time = dur;\n\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7. We cannot do less then 0.0001 because the same issue can occur when the duration is extremely large like 999999999999 in which case adding 0.00000001, for example, causes it to act like nothing was added.\n\t\t\t\t}\n\n\t\t\t} else if (time < _tinyNum) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tif (!self._locked) {\n\t\t\t\t\tself._totalTime = self._cycle = 0;\n\t\t\t\t}\n\t\t\t\tself._time = 0;\n\t\t\t\tif (time > -_tinyNum) {\n\t\t\t\t\ttime = 0;\n\t\t\t\t}\n\t\t\t\tif (prevTime !== 0 || (dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || (time < 0 && prevRawPrevTime >= 0)) && !self._locked)) { //edge case for checking time < 0 && prevRawPrevTime >= 0: a zero-duration fromTo() tween inside a zero-duration timeline (yeah, very rare)\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = self._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tself._active = false;\n\t\t\t\t\tif (self._timeline.autoRemoveChildren && self._reversed) {\n\t\t\t\t\t\tinternalForce = isComplete = true;\n\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t} else if (prevRawPrevTime >= 0 && self._first) { //when going back beyond the start, force a render so that zero-duration tweens that sit at the very beginning render their start values properly. Otherwise, if the parent timeline's playhead lands exactly at this timeline's startTime, and then moves backwards, the zero-duration tweens at the beginning would still be at their end state.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tself._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tself._rawPrevTime = (dur || !suppressEvents || time || self._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\tif (time === 0 && isComplete) { //if there's a zero-duration tween at the very beginning of a timeline and the playhead lands EXACTLY at time 0, that tween will correctly render its end values, but we need to keep the timeline alive for one more render so that the beginning values render properly as the parent's playhead keeps moving beyond the begining. Imagine obj.x starts at 0 and then we do tl.set(obj, {x:100}).to(obj, 1, {x:200}) and then later we tl.reverse()...the goal is to have obj.x revert to 0. If the playhead happens to land on exactly 0, without this chunk of code, it'd complete the timeline and remove it from the rendering queue (not good).\n\t\t\t\t\t\ttween = self._first;\n\t\t\t\t\t\twhile (tween && tween._startTime === 0) {\n\t\t\t\t\t\t\tif (!tween._duration) {\n\t\t\t\t\t\t\t\tisComplete = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!self._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (dur === 0 && prevRawPrevTime < 0) { //without this, zero-duration repeating timelines (like with a simple callback nested at the very beginning and a repeatDelay) wouldn't render the first time through.\n\t\t\t\t\tinternalForce = true;\n\t\t\t\t}\n\t\t\t\tself._time = self._rawPrevTime = time;\n\t\t\t\tif (!self._locked) {\n\t\t\t\t\tself._totalTime = time;\n\t\t\t\t\tif (self._repeat !== 0) {\n\t\t\t\t\t\tcycleDuration = dur + self._repeatDelay;\n\t\t\t\t\t\tself._cycle = (self._totalTime / cycleDuration) >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but it gets reported as 0.79999999!)\n\t\t\t\t\t\tif (self._cycle) if (self._cycle === self._totalTime / cycleDuration && prevTotalTime <= time) {\n\t\t\t\t\t\t\tself._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself._time = self._totalTime - (self._cycle * cycleDuration);\n\t\t\t\t\t\tif (self._yoyo) if (self._cycle & 1) {\n\t\t\t\t\t\t\tself._time = dur - self._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (self._time > dur) {\n\t\t\t\t\t\t\tself._time = dur;\n\t\t\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding error\n\t\t\t\t\t\t} else if (self._time < 0) {\n\t\t\t\t\t\t\tself._time = time = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttime = self._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (self._hasPause && !self._forcingPlayhead && !suppressEvents) {\n\t\t\t\ttime = self._time;\n\t\t\t\tif (time > prevTime || (self._repeat && prevCycle !== self._cycle)) {\n\t\t\t\t\ttween = self._first;\n\t\t\t\t\twhile (tween && tween._startTime <= time && !pauseTween) {\n\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && self._rawPrevTime === 0)) {\n\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttween = self._last;\n\t\t\t\t\twhile (tween && tween._startTime >= time && !pauseTween) {\n\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = tween._prev;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pauseTween) {\n\t\t\t\t\tpauseTime = self._startTime + (self._reversed ? self._duration - pauseTween._startTime : pauseTween._startTime) / self._timeScale;\n\t\t\t\t\tif (pauseTween._startTime < dur) {\n\t\t\t\t\t\tself._time = self._rawPrevTime = time = pauseTween._startTime;\n\t\t\t\t\t\tself._totalTime = time + (self._cycle * (self._totalDuration + self._repeatDelay));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (self._cycle !== prevCycle) if (!self._locked) {\n\t\t\t\t/*\n\t\t\t\tmake sure children at the end/beginning of the timeline are rendered properly. If, for example,\n\t\t\t\ta 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which\n\t\t\t\twould get translated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there\n\t\t\t\tcould be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So\n\t\t\t\twe need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must\n\t\t\t\tensure that zero-duration tweens at the very beginning or end of the TimelineMax work.\n\t\t\t\t*/\n\t\t\t\tvar backwards = (self._yoyo && (prevCycle & 1) !== 0),\n\t\t\t\t\twrap = (backwards === (self._yoyo && (self._cycle & 1) !== 0)),\n\t\t\t\t\trecTotalTime = self._totalTime,\n\t\t\t\t\trecCycle = self._cycle,\n\t\t\t\t\trecRawPrevTime = self._rawPrevTime,\n\t\t\t\t\trecTime = self._time;\n\n\t\t\t\tself._totalTime = prevCycle * dur;\n\t\t\t\tif (self._cycle < prevCycle) {\n\t\t\t\t\tbackwards = !backwards;\n\t\t\t\t} else {\n\t\t\t\t\tself._totalTime += dur;\n\t\t\t\t}\n\t\t\t\tself._time = prevTime; //temporarily revert _time so that render() renders the children in the correct order. Without this, tweens won't rewind correctly. We could arhictect things in a \"cleaner\" way by splitting out the rendering queue into a separate method but for performance reasons, we kept it all inside this method.\n\n\t\t\t\tself._rawPrevTime = (dur === 0) ? prevRawPrevTime - 0.0001 : prevRawPrevTime;\n\t\t\t\tself._cycle = prevCycle;\n\t\t\t\tself._locked = true; //prevents changes to totalTime and skips repeat/yoyo behavior when we recursively call render()\n\t\t\t\tprevTime = (backwards) ? 0 : dur;\n\t\t\t\tself.render(prevTime, suppressEvents, (dur === 0));\n\t\t\t\tif (!suppressEvents) if (!self._gc) {\n\t\t\t\t\tif (self.vars.onRepeat) {\n\t\t\t\t\t\tself._cycle = recCycle; //in case the onRepeat alters the playhead or invalidates(), we shouldn't stay locked or use the previous cycle.\n\t\t\t\t\t\tself._locked = false;\n\t\t\t\t\t\tself._callback(\"onRepeat\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (prevTime !== self._time) { //in case there's a callback like onComplete in a nested tween/timeline that changes the playhead position, like via seek(), we should just abort.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (wrap) {\n\t\t\t\t\tself._cycle = prevCycle; //if there's an onRepeat, we reverted this above, so make sure it's set properly again. We also unlocked in that scenario, so reset that too.\n\t\t\t\t\tself._locked = true;\n\t\t\t\t\tprevTime = (backwards) ? dur + 0.0001 : -0.0001;\n\t\t\t\t\tself.render(prevTime, true, false);\n\t\t\t\t}\n\t\t\t\tself._locked = false;\n\t\t\t\tif (self._paused && !prevPaused) { //if the render() triggered callback that paused this timeline, we should abort (very rare, but possible)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tself._time = recTime;\n\t\t\t\tself._totalTime = recTotalTime;\n\t\t\t\tself._cycle = recCycle;\n\t\t\t\tself._rawPrevTime = recRawPrevTime;\n\t\t\t}\n\n\t\t\tif ((self._time === prevTime || !self._first) && !force && !internalForce && !pauseTween) {\n\t\t\t\tif (prevTotalTime !== self._totalTime) if (self._onUpdate) if (!suppressEvents) { //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.\n\t\t\t\t\tself._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (!self._initted) {\n\t\t\t\tself._initted = true;\n\t\t\t}\n\n\t\t\tif (!self._active) if (!self._paused && self._totalTime !== prevTotalTime && time > 0) {\n\t\t\t\tself._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\n\t\t\tif (prevTotalTime === 0) if (self.vars.onStart) if (self._totalTime !== 0 || !self._totalDuration) if (!suppressEvents) {\n\t\t\t\tself._callback(\"onStart\");\n\t\t\t}\n\n\t\t\tcurTime = self._time;\n\t\t\tif (curTime >= prevTime) {\n\t\t\t\ttween = self._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== self._time || (self._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= self._time && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tself.pause();\n\t\t\t\t\t\t\tself._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = self._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== self._time || (self._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tpauseTween = tween._prev; //the linked list is organized by _startTime, thus it's possible that a tween could start BEFORE the pause and end after it, in which case it would be positioned before the pause tween in the linked list, but we should render it before we pause() the timeline and cease rendering. This is only a concern when going in reverse.\n\t\t\t\t\t\t\twhile (pauseTween && pauseTween.endTime() > self._time) {\n\t\t\t\t\t\t\t\tpauseTween.render( (pauseTween._reversed ? pauseTween.totalDuration() - ((time - pauseTween._startTime) * pauseTween._timeScale) : (time - pauseTween._startTime) * pauseTween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t\t\tpauseTween = pauseTween._prev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpauseTween = null;\n\t\t\t\t\t\t\tself.pause();\n\t\t\t\t\t\t\tself._pauseTime = pauseTime; //so that when we resume(), it's starting from exactly the right spot (the pause() method uses the rawTime for the parent, but that may be a bit too far ahead)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (self._onUpdate) if (!suppressEvents) {\n\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tself._callback(\"onUpdate\");\n\t\t\t}\n\t\t\tif (callback) if (!self._locked) if (!self._gc) if (prevStart === self._startTime || prevTimeScale !== self._timeScale) if (self._time === 0 || totalDur >= self.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onComplete on a timeline that reports/checks tweened values.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t\tif (self._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tself._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tself._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && self.vars[callback]) {\n\t\t\t\t\tself._callback(callback);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.getActive = function(nested, tweens, timelines) {\n\t\t\tvar a = [],\n\t\t\t\tall = this.getChildren(nested || (nested == null), tweens || (nested == null), !!timelines),\n\t\t\t\tcnt = 0,\n\t\t\t\tl = all.length,\n\t\t\t\ti, tween;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\ttween = all[i];\n\t\t\t\tif (tween.isActive()) {\n\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\n\t\tp.getLabelAfter = function(time) {\n\t\t\tif (!time) if (time !== 0) { //faster than isNan()\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\tl = labels.length,\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (labels[i].time > time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tp.getLabelBefore = function(time) {\n\t\t\tif (time == null) {\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\ti = labels.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (labels[i].time < time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tp.getLabelsArray = function() {\n\t\t\tvar a = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tp;\n\t\t\tfor (p in this._labels) {\n\t\t\t\ta[cnt++] = {time:this._labels[p], name:p};\n\t\t\t}\n\t\t\ta.sort(function(a,b) {\n\t\t\t\treturn a.time - b.time;\n\t\t\t});\n\t\t\treturn a;\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tthis._locked = false; //unlock and set cycle in case invalidate() is called from inside an onRepeat\n\t\t\treturn TimelineLite.prototype.invalidate.call(this);\n\t\t};\n\n\n//---- GETTERS / SETTERS -------------------------------------------------------------------------------------------------------\n\n\t\tp.progress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? (this._time / this.duration()) || 0 : this.totalTime( this.duration() * ((this._yoyo && (this._cycle & 1) !== 0) ? 1 - value : value) + (this._cycle * (this._duration + this._repeatDelay)), suppressEvents);\n\t\t};\n\n\t\tp.totalProgress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? (this._totalTime / this.totalDuration()) || 0 : this.totalTime( this.totalDuration() * value, suppressEvents);\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tTimelineLite.prototype.totalDuration.call(this); //just forces refresh\n\t\t\t\t\t//Instead of Infinity, we use 999999999999 so that we can accommodate reverses.\n\t\t\t\t\tthis._totalDuration = (this._repeat === -1) ? 999999999999 : this._duration * (this._repeat + 1) + (this._repeatDelay * this._repeat);\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (this._repeat === -1 || !value) ? this : this.timeScale( this.totalDuration() / value );\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\tvar duration = this._duration,\n\t\t\t\tcycle = this._cycle,\n\t\t\t\tcycleDur = cycle * (duration + this._repeatDelay);\n\t\t\tif (value > duration) {\n\t\t\t\tvalue = duration;\n\t\t\t}\n\t\t\treturn this.totalTime((this._yoyo && (cycle & 1)) ? duration - value + cycleDur : this._repeat ? value + cycleDur : value, suppressEvents);\n\t\t};\n\n\t\tp.repeat = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeat;\n\t\t\t}\n\t\t\tthis._repeat = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.repeatDelay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeatDelay;\n\t\t\t}\n\t\t\tthis._repeatDelay = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.yoyo = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._yoyo;\n\t\t\t}\n\t\t\tthis._yoyo = value;\n\t\t\treturn this;\n\t\t};\n\n\t\tp.currentLabel = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this.getLabelBefore(this._time + _tinyNum);\n\t\t\t}\n\t\t\treturn this.seek(value, true);\n\t\t};\n\t\t\n\t\treturn TimelineMax;\n\t\t\n\t}, true);\n\nexport var TimelineMax = globals.TimelineMax;\nexport { TimelineLite, TimelineMax as default };","/*!\n * VERSION: 1.3.9\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\nimport { _gsScope } from \"./TweenLite.js\";\n\n\t\tvar _RAD2DEG = 180 / Math.PI,\n\t\t\t_r1 = [],\n\t\t\t_r2 = [],\n\t\t\t_r3 = [],\n\t\t\t_corProps = {},\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\tSegment = function(a, b, c, d) {\n\t\t\t\tif (c === d) { //if c and d match, the final autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tc = d - (d - b) / 1000000;\n\t\t\t\t}\n\t\t\t\tif (a === b) { //if a and b match, the starting autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tb = a + (c - a) / 1000000;\n\t\t\t\t}\n\t\t\t\tthis.a = a;\n\t\t\t\tthis.b = b;\n\t\t\t\tthis.c = c;\n\t\t\t\tthis.d = d;\n\t\t\t\tthis.da = d - a;\n\t\t\t\tthis.ca = c - a;\n\t\t\t\tthis.ba = b - a;\n\t\t\t},\n\t\t\t_correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",\n\t\t\tcubicToQuadratic = function(a, b, c, d) {\n\t\t\t\tvar q1 = {a:a},\n\t\t\t\t\tq2 = {},\n\t\t\t\t\tq3 = {},\n\t\t\t\t\tq4 = {c:d},\n\t\t\t\t\tmab = (a + b) / 2,\n\t\t\t\t\tmbc = (b + c) / 2,\n\t\t\t\t\tmcd = (c + d) / 2,\n\t\t\t\t\tmabc = (mab + mbc) / 2,\n\t\t\t\t\tmbcd = (mbc + mcd) / 2,\n\t\t\t\t\tm8 = (mbcd - mabc) / 8;\n\t\t\t\tq1.b = mab + (a - mab) / 4;\n\t\t\t\tq2.b = mabc + m8;\n\t\t\t\tq1.c = q2.a = (q1.b + q2.b) / 2;\n\t\t\t\tq2.c = q3.a = (mabc + mbcd) / 2;\n\t\t\t\tq3.b = mbcd - m8;\n\t\t\t\tq4.b = mcd + (d - mcd) / 4;\n\t\t\t\tq3.c = q4.a = (q3.b + q4.b) / 2;\n\t\t\t\treturn [q1, q2, q3, q4];\n\t\t\t},\n\t\t\t_calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t\t\t\tvar l = a.length - 1,\n\t\t\t\t\tii = 0,\n\t\t\t\t\tcp1 = a[0].a,\n\t\t\t\t\ti, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tseg = a[ii];\n\t\t\t\t\tp1 = seg.a;\n\t\t\t\t\tp2 = seg.d;\n\t\t\t\t\tp3 = a[ii+1].d;\n\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tr1 = _r1[i];\n\t\t\t\t\t\tr2 = _r2[i];\n\t\t\t\t\t\ttl = ((r2 + r1) * curviness * 0.25) / (basic ? 0.5 : _r3[i] || 0.5);\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : (r1 !== 0 ? tl / r1 : 0));\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : (r2 !== 0 ? tl / r2 : 0));\n\t\t\t\t\t\tmm = p2 - (m1 + (((m2 - m1) * ((r1 * 3 / (r1 + r2)) + 0.5) / 4) || 0));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * curviness * 0.5;\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * curviness * 0.5;\n\t\t\t\t\t\tmm = p2 - (m1 + m2) / 2;\n\t\t\t\t\t}\n\t\t\t\t\tm1 += mm;\n\t\t\t\t\tm2 += mm;\n\n\t\t\t\t\tseg.c = cp2 = m1;\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tseg.b = cp1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.\n\t\t\t\t\t}\n\n\t\t\t\t\tseg.da = p2 - p1;\n\t\t\t\t\tseg.ca = cp2 - p1;\n\t\t\t\t\tseg.ba = cp1 - p1;\n\n\t\t\t\t\tif (quad) {\n\t\t\t\t\t\tqb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t\t\tii += 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tii++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcp1 = m2;\n\t\t\t\t}\n\t\t\t\tseg = a[ii];\n\t\t\t\tseg.b = cp1;\n\t\t\t\tseg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.\n\t\t\t\tseg.da = seg.d - seg.a;\n\t\t\t\tseg.ca = seg.c - seg.a;\n\t\t\t\tseg.ba = cp1 - seg.a;\n\t\t\t\tif (quad) {\n\t\t\t\t\tqb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseAnchors = function(values, p, correlate, prepend) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tl, i, p1, p2, p3, tmp;\n\t\t\t\tif (prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t\ti = values.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (typeof( (tmp = values[i][p]) ) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t\t\t\t\t\t\tvalues[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tl = values.length - 2;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\ta[0] = new Segment(values[0][p], 0, 0, values[0][p]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tp1 = values[i][p];\n\t\t\t\t\tp2 = values[i+1][p];\n\t\t\t\t\ta[i] = new Segment(p1, 0, 0, p2);\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tp3 = values[i+2][p];\n\t\t\t\t\t\t_r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t\t\t\t\t\t_r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[i] = new Segment(values[i][p], 0, 0, values[i+1][p]);\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\tbezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t\t\t\tvar obj = {},\n\t\t\t\t\tprops = [],\n\t\t\t\t\tfirst = prepend || values[0],\n\t\t\t\t\ti, p, a, j, r, l, seamless, last;\n\t\t\t\tcorrelate = (typeof(correlate) === \"string\") ? \",\"+correlate+\",\" : _correlate;\n\t\t\t\tif (curviness == null) {\n\t\t\t\t\tcurviness = 1;\n\t\t\t\t}\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\t//check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)\n\t\t\t\tif (values.length > 1) {\n\t\t\t\t\tlast = values[values.length - 1];\n\t\t\t\t\tseamless = true;\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = props[i];\n\t\t\t\t\t\tif (Math.abs(first[p] - last[p]) > 0.05) { //build in a tolerance of +/-0.05 to accommodate rounding errors.\n\t\t\t\t\t\t\tseamless = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\tvalues = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens\n\t\t\t\t\t\tif (prepend) {\n\t\t\t\t\t\t\tvalues.unshift(prepend);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues.push(values[1]);\n\t\t\t\t\t\tprepend = values[values.length - 3];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_r1.length = _r2.length = _r3.length = 0;\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\t_corProps[p] = (correlate.indexOf(\",\"+p+\",\") !== -1);\n\t\t\t\t\tobj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t\t\t\t}\n\t\t\t\ti = _r1.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_r1[i] = Math.sqrt(_r1[i]);\n\t\t\t\t\t_r2[i] = Math.sqrt(_r2[i]);\n\t\t\t\t}\n\t\t\t\tif (!basic) {\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (_corProps[p]) {\n\t\t\t\t\t\t\ta = obj[props[i]];\n\t\t\t\t\t\t\tl = a.length - 1;\n\t\t\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\t\t\tr = (a[j+1].da / _r2[j] + a[j].da / _r1[j]) || 0;\n\t\t\t\t\t\t\t\t_r3[j] = (_r3[j] || 0) + r * r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti = _r3.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_r3[i] = Math.sqrt(_r3[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\tj = quadratic ? 4 : 1;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\ta = obj[p];\n\t\t\t\t\t_calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\ta.splice(0, j);\n\t\t\t\t\t\ta.splice(a.length - j, j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_parseBezierData = function(values, type, prepend) {\n\t\t\t\ttype = type || \"soft\";\n\t\t\t\tvar obj = {},\n\t\t\t\t\tinc = (type === \"cubic\") ? 3 : 2,\n\t\t\t\t\tsoft = (type === \"soft\"),\n\t\t\t\t\tprops = [],\n\t\t\t\t\ta, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t\t\t\tif (soft && prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t}\n\t\t\t\tif (values == null || values.length < inc + 1) { throw \"invalid Bezier data\"; }\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\tobj[p] = cur = [];\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tl = values.length;\n\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\ta = (prepend == null) ? values[j][p] : (typeof( (tmp = values[j][p]) ) === \"string\" && tmp.charAt(1) === \"=\") ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t\t\t\t\t\tif (soft) if (j > 1) if (j < l - 1) {\n\t\t\t\t\t\t\tcur[cnt++] = (a + cur[cnt-2]) / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcur[cnt++] = a;\n\t\t\t\t\t}\n\t\t\t\t\tl = cnt - inc + 1;\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tfor (j = 0; j < l; j += inc) {\n\t\t\t\t\t\ta = cur[j];\n\t\t\t\t\t\tb = cur[j+1];\n\t\t\t\t\t\tc = cur[j+2];\n\t\t\t\t\t\td = (inc === 2) ? 0 : cur[j+3];\n\t\t\t\t\t\tcur[cnt++] = tmp = (inc === 3) ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t\t\t\t}\n\t\t\t\t\tcur.length = cnt;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_addCubicLengths = function(a, steps, resolution) {\n\t\t\t\tvar inc = 1 / resolution,\n\t\t\t\t\tj = a.length,\n\t\t\t\t\td, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t\t\t\twhile (--j > -1) {\n\t\t\t\t\tbez = a[j];\n\t\t\t\t\ts = bez.a;\n\t\t\t\t\tda = bez.d - s;\n\t\t\t\t\tca = bez.c - s;\n\t\t\t\t\tba = bez.b - s;\n\t\t\t\t\td = d1 = 0;\n\t\t\t\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\t\t\t\tp = inc * i;\n\t\t\t\t\t\tinv = 1 - p;\n\t\t\t\t\t\td = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t\t\t\t\t\tindex = j * resolution + i - 1;\n\t\t\t\t\t\tsteps[index] = (steps[index] || 0) + d * d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseLengthData = function(obj, resolution) {\n\t\t\t\tresolution = resolution >> 0 || 6;\n\t\t\t\tvar a = [],\n\t\t\t\t\tlengths = [],\n\t\t\t\t\td = 0,\n\t\t\t\t\ttotal = 0,\n\t\t\t\t\tthreshold = resolution - 1,\n\t\t\t\t\tsegments = [],\n\t\t\t\t\tcurLS = [], //current length segments array\n\t\t\t\t\tp, i, l, index;\n\t\t\t\tfor (p in obj) {\n\t\t\t\t\t_addCubicLengths(obj[p], a, resolution);\n\t\t\t\t}\n\t\t\t\tl = a.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\td += Math.sqrt(a[i]);\n\t\t\t\t\tindex = i % resolution;\n\t\t\t\t\tcurLS[index] = d;\n\t\t\t\t\tif (index === threshold) {\n\t\t\t\t\t\ttotal += d;\n\t\t\t\t\t\tindex = (i / resolution) >> 0;\n\t\t\t\t\t\tsegments[index] = curLS;\n\t\t\t\t\t\tlengths[index] = total;\n\t\t\t\t\t\td = 0;\n\t\t\t\t\t\tcurLS = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {length:total, lengths:lengths, segments:segments};\n\t\t\t},\n\n\n\n\t\t\tBezierPlugin = _gsScope._gsDefine.plugin({\n\t\t\t\t\tpropName: \"bezier\",\n\t\t\t\t\tpriority: -1,\n\t\t\t\t\tversion: \"1.3.9\",\n\t\t\t\t\tAPI: 2,\n\t\t\t\t\tglobal:true,\n\n\t\t\t\t\t//gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\t\tinit: function(target, vars, tween) {\n\t\t\t\t\t\tthis._target = target;\n\t\t\t\t\t\tif (vars instanceof Array) {\n\t\t\t\t\t\t\tvars = {values:vars};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._func = {};\n\t\t\t\t\t\tthis._mod = {};\n\t\t\t\t\t\tthis._props = [];\n\t\t\t\t\t\tthis._timeRes = (vars.timeResolution == null) ? 6 : parseInt(vars.timeResolution, 10);\n\t\t\t\t\t\tvar values = vars.values || [],\n\t\t\t\t\t\t\tfirst = {},\n\t\t\t\t\t\t\tsecond = values[0],\n\t\t\t\t\t\t\tautoRotate = vars.autoRotate || tween.vars.orientToBezier,\n\t\t\t\t\t\t\tp, isFunc, i, j, prepend;\n\n\t\t\t\t\t\tthis._autoRotate = autoRotate ? (autoRotate instanceof Array) ? autoRotate : [[\"x\",\"y\",\"rotation\",((autoRotate === true) ? 0 : Number(autoRotate) || 0)]] : null;\n\t\t\t\t\t\tfor (p in second) {\n\t\t\t\t\t\t\tthis._props.push(p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\n\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\tisFunc = this._func[p] = (typeof(target[p]) === \"function\");\n\t\t\t\t\t\t\tfirst[p] = (!isFunc) ? parseFloat(target[p]) : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]();\n\t\t\t\t\t\t\tif (!prepend) if (first[p] !== values[0][p]) {\n\t\t\t\t\t\t\t\tprepend = first;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._beziers = (vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\") ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, (vars.type === \"thruBasic\"), vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t\t\t\t\t\tthis._segCount = this._beziers[p].length;\n\n\t\t\t\t\t\tif (this._timeRes) {\n\t\t\t\t\t\t\tvar ld = _parseLengthData(this._beziers, this._timeRes);\n\t\t\t\t\t\t\tthis._length = ld.length;\n\t\t\t\t\t\t\tthis._lengths = ld.lengths;\n\t\t\t\t\t\t\tthis._segments = ld.segments;\n\t\t\t\t\t\t\tthis._l1 = this._li = this._s1 = this._si = 0;\n\t\t\t\t\t\t\tthis._l2 = this._lengths[0];\n\t\t\t\t\t\t\tthis._curSeg = this._segments[0];\n\t\t\t\t\t\t\tthis._s2 = this._curSeg[0];\n\t\t\t\t\t\t\tthis._prec = 1 / this._curSeg.length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((autoRotate = this._autoRotate)) {\n\t\t\t\t\t\t\tthis._initialRotations = [];\n\t\t\t\t\t\t\tif (!(autoRotate[0] instanceof Array)) {\n\t\t\t\t\t\t\t\tthis._autoRotate = autoRotate = [autoRotate];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti = autoRotate.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\t\tp = autoRotate[i][j];\n\t\t\t\t\t\t\t\t\tthis._func[p] = (typeof(target[p]) === \"function\") ? target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ] : false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = autoRotate[i][2];\n\t\t\t\t\t\t\t\tthis._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\t\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\n\t\t\t\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\t\t\t\tset: function(v) {\n\t\t\t\t\t\tvar segments = this._segCount,\n\t\t\t\t\t\t\tfunc = this._func,\n\t\t\t\t\t\t\ttarget = this._target,\n\t\t\t\t\t\t\tnotStart = (v !== this._startRatio),\n\t\t\t\t\t\t\tcurIndex, inv, i, p, b, t, val, l, lengths, curSeg, v1;\n\t\t\t\t\t\tif (!this._timeRes) {\n\t\t\t\t\t\t\tcurIndex = (v < 0) ? 0 : (v >= 1) ? segments - 1 : (segments * v) >> 0;\n\t\t\t\t\t\t\tt = (v - (curIndex * (1 / segments))) * segments;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlengths = this._lengths;\n\t\t\t\t\t\t\tcurSeg = this._curSeg;\n\t\t\t\t\t\t\tv1 = v * this._length;\n\t\t\t\t\t\t\ti = this._li;\n\t\t\t\t\t\t\t//find the appropriate segment (if the currently cached one isn't correct)\n\t\t\t\t\t\t\tif (v1 > this._l2 && i < segments - 1) {\n\t\t\t\t\t\t\t\tl = segments - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._l2 = lengths[++i]) <= v1) {\t}\n\t\t\t\t\t\t\t\tthis._l1 = lengths[i-1];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[(this._s1 = this._si = 0)];\n\t\t\t\t\t\t\t} else if (v1 < this._l1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._l1 = lengths[--i]) >= v1) { }\n\t\t\t\t\t\t\t\tif (i === 0 && v1 < this._l1) {\n\t\t\t\t\t\t\t\t\tthis._l1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._l2 = lengths[i];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[this._si];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurIndex = i;\n\t\t\t\t\t\t\t//now find the appropriate sub-segment (we split it into the number of pieces that was defined by \"precision\" and measured each one)\n\t\t\t\t\t\t\tv1 -= this._l1;\n\t\t\t\t\t\t\ti = this._si;\n\t\t\t\t\t\t\tif (v1 > this._s2 && i < curSeg.length - 1) {\n\t\t\t\t\t\t\t\tl = curSeg.length - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._s2 = curSeg[++i]) <= v1) {\t}\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[i-1];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t} else if (v1 < this._s1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._s1 = curSeg[--i]) >= v1) {\t}\n\t\t\t\t\t\t\t\tif (i === 0 && v1 < this._s1) {\n\t\t\t\t\t\t\t\t\tthis._s1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[i];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tt = (v === 1) ? 1 : ((i + (v1 - this._s1) / (this._s2 - this._s1)) * this._prec) || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinv = 1 - t;\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\t\t\t\t\t\t\tb = this._beziers[p][curIndex];\n\t\t\t\t\t\t\tval = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\tval = this._mod[p](val, target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._autoRotate) {\n\t\t\t\t\t\t\tvar ar = this._autoRotate,\n\t\t\t\t\t\t\t\tb2, x1, y1, x2, y2, add, conv;\n\t\t\t\t\t\t\ti = ar.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tp = ar[i][2];\n\t\t\t\t\t\t\t\tadd = ar[i][3] || 0;\n\t\t\t\t\t\t\t\tconv = (ar[i][4] === true) ? 1 : _RAD2DEG;\n\t\t\t\t\t\t\t\tb = this._beziers[ar[i][0]];\n\t\t\t\t\t\t\t\tb2 = this._beziers[ar[i][1]];\n\n\t\t\t\t\t\t\t\tif (b && b2) { //in case one of the properties got overwritten.\n\t\t\t\t\t\t\t\t\tb = b[curIndex];\n\t\t\t\t\t\t\t\t\tb2 = b2[curIndex];\n\n\t\t\t\t\t\t\t\t\tx1 = b.a + (b.b - b.a) * t;\n\t\t\t\t\t\t\t\t\tx2 = b.b + (b.c - b.b) * t;\n\t\t\t\t\t\t\t\t\tx1 += (x2 - x1) * t;\n\t\t\t\t\t\t\t\t\tx2 += ((b.c + (b.d - b.c) * t) - x2) * t;\n\n\t\t\t\t\t\t\t\t\ty1 = b2.a + (b2.b - b2.a) * t;\n\t\t\t\t\t\t\t\t\ty2 = b2.b + (b2.c - b2.b) * t;\n\t\t\t\t\t\t\t\t\ty1 += (y2 - y1) * t;\n\t\t\t\t\t\t\t\t\ty2 += ((b2.c + (b2.d - b2.c) * t) - y2) * t;\n\n\t\t\t\t\t\t\t\t\tval = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\n\t\t\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\t\t\tval = this._mod[p](val, target); //for modProps\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}),\n\t\t\tp = BezierPlugin.prototype;\n\n\n\t\tBezierPlugin.bezierThrough = bezierThrough;\n\t\tBezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t\tBezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the \"css\" object using the autoCSS feature of TweenLite\n\t\tBezierPlugin.quadraticToCubic = function(a, b, c) {\n\t\t\treturn new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t};\n\n\t\tBezierPlugin._cssRegister = function() {\n\t\t\tvar CSSPlugin = _globals.CSSPlugin;\n\t\t\tif (!CSSPlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _internals = CSSPlugin._internals,\n\t\t\t\t_parseToProxy = _internals._parseToProxy,\n\t\t\t\t_setPluginRatio = _internals._setPluginRatio,\n\t\t\t\tCSSPropTween = _internals.CSSPropTween;\n\t\t\t_internals._registerComplexSpecialProp(\"bezier\", {parser:function(t, e, prop, cssp, pt, plugin) {\n\t\t\t\tif (e instanceof Array) {\n\t\t\t\t\te = {values:e};\n\t\t\t\t}\n\t\t\t\tplugin = new BezierPlugin();\n\t\t\t\tvar values = e.values,\n\t\t\t\t\tl = values.length - 1,\n\t\t\t\t\tpluginValues = [],\n\t\t\t\t\tv = {},\n\t\t\t\t\ti, p, data;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i <= l; i++) {\n\t\t\t\t\tdata = _parseToProxy(t, values[i], cssp, pt, plugin, (l !== i));\n\t\t\t\t\tpluginValues[i] = data.end;\n\t\t\t\t}\n\t\t\t\tfor (p in e) {\n\t\t\t\t\tv[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.\n\t\t\t\t}\n\t\t\t\tv.values = pluginValues;\n\t\t\t\tpt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t\t\t\tpt.data = data;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setPluginRatio;\n\t\t\t\tif (v.autoRotate === 0) {\n\t\t\t\t\tv.autoRotate = true;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t\t\t\t\ti = (v.autoRotate === true) ? 0 : Number(v.autoRotate);\n\t\t\t\t\tv.autoRotate = (data.end.left != null) ? [[\"left\",\"top\",\"rotation\",i,false]] : (data.end.x != null) ? [[\"x\",\"y\",\"rotation\",i,false]] : false;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate) {\n\t\t\t\t\tif (!cssp._transform) {\n\t\t\t\t\t\tcssp._enableTransforms(false);\n\t\t\t\t\t}\n\t\t\t\t\tdata.autoRotate = cssp._target._gsTransform;\n\t\t\t\t\tdata.proxy.rotation = data.autoRotate.rotation || 0;\n\t\t\t\t\tcssp._overwriteProps.push(\"rotation\");\n\t\t\t\t}\n\t\t\t\tplugin._onInitTween(data.proxy, v, cssp._tween);\n\t\t\t\treturn pt;\n\t\t\t}});\n\t\t};\n\n\t\tp._mod = function(lookup) {\n\t\t\tvar op = this._overwriteProps,\n\t\t\t\ti = op.length,\n\t\t\t\tval;\n\t\t\twhile (--i > -1) {\n\t\t\t\tval = lookup[op[i]];\n\t\t\t\tif (val && typeof(val) === \"function\") {\n\t\t\t\t\tthis._mod[op[i]] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._props,\n\t\t\t\tp, i;\n\t\t\tfor (p in this._beziers) {\n\t\t\t\tif (p in lookup) {\n\t\t\t\t\tdelete this._beziers[p];\n\t\t\t\t\tdelete this._func[p];\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i] === p) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ta = this._autoRotate;\n\t\t\tif (a) {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i][2]]) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._super._kill.call(this, lookup);\n\t\t};\n\nexport { BezierPlugin, BezierPlugin as default };","/*!\n * VERSION: 1.16.1\n * DATE: 2018-08-27\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\n\nimport { _gsScope, globals, Ease, Linear, Power0, Power1, Power2, Power3, Power4 } from \"./TweenLite.js\";\n\n_gsScope._gsDefine(\"easing.Back\", [\"easing.Ease\"], function() {\n\t\t\n\t\tvar w = (_gsScope.GreenSockGlobals || _gsScope),\n\t\t\tgs = w.com.greensock,\n\t\t\t_2PI = Math.PI * 2,\n\t\t\t_HALF_PI = Math.PI / 2,\n\t\t\t_class = gs._class,\n\t\t\t_create = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(){}, true),\n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\t_easeReg = Ease.register || function(){}, //put an empty function in place just as a safety measure in case someone loads an OLD version of TweenLite.js where Ease.register doesn't exist.\n\t\t\t_wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n\t\t\t\tvar C = _class(\"easing.\"+name, {\n\t\t\t\t\teaseOut:new EaseOut(),\n\t\t\t\t\teaseIn:new EaseIn(),\n\t\t\t\t\teaseInOut:new EaseInOut()\n\t\t\t\t}, true);\n\t\t\t\t_easeReg(C, name);\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\tEasePoint = function(time, value, next) {\n\t\t\t\tthis.t = time;\n\t\t\t\tthis.v = value;\n\t\t\t\tif (next) {\n\t\t\t\t\tthis.next = next;\n\t\t\t\t\tnext.prev = this;\n\t\t\t\t\tthis.c = next.v - value;\n\t\t\t\t\tthis.gap = next.t - time;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//Back\n\t\t\t_createBack = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(overshoot) {\n\t\t\t\t\t\tthis._p1 = (overshoot || overshoot === 0) ? overshoot : 1.70158;\n\t\t\t\t\t\tthis._p2 = this._p1 * 1.525;\n\t\t\t\t\t}, true), \n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\tp.config = function(overshoot) {\n\t\t\t\t\treturn new C(overshoot);\n\t\t\t\t};\n\t\t\t\treturn C;\n\t\t\t},\n\n\t\t\tBack = _wrap(\"Back\",\n\t\t\t\t_createBack(\"BackOut\", function(p) {\n\t\t\t\t\treturn ((p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackIn\", function(p) {\n\t\t\t\t\treturn p * p * ((this._p1 + 1) * p - this._p1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackInOut\", function(p) {\n\t\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * p * p * ((this._p2 + 1) * p - this._p2) : 0.5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n\t\t\t\t})\n\t\t\t),\n\n\n\t\t\t//SlowMo\n\t\t\tSlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n\t\t\t\tpower = (power || power === 0) ? power : 0.7;\n\t\t\t\tif (linearRatio == null) {\n\t\t\t\t\tlinearRatio = 0.7;\n\t\t\t\t} else if (linearRatio > 1) {\n\t\t\t\t\tlinearRatio = 1;\n\t\t\t\t}\n\t\t\t\tthis._p = (linearRatio !== 1) ? power : 0;\n\t\t\t\tthis._p1 = (1 - linearRatio) / 2;\n\t\t\t\tthis._p2 = linearRatio;\n\t\t\t\tthis._p3 = this._p1 + this._p2;\n\t\t\t\tthis._calcEnd = (yoyoMode === true);\n\t\t\t}, true),\n\t\t\tp = SlowMo.prototype = new Ease(),\n\t\t\tSteppedEase, ExpoScaleEase, RoughEase, _createElastic;\n\t\t\t\n\t\tp.constructor = SlowMo;\n\t\tp.getRatio = function(p) {\n\t\t\tvar r = p + (0.5 - p) * this._p;\n\t\t\tif (p < this._p1) {\n\t\t\t\treturn this._calcEnd ? 1 - ((p = 1 - (p / this._p1)) * p) : r - ((p = 1 - (p / this._p1)) * p * p * p * r);\n\t\t\t} else if (p > this._p3) {\n\t\t\t\treturn this._calcEnd ? (p === 1 ? 0 : 1 - (p = (p - this._p3) / this._p1) * p) : r + ((p - r) * (p = (p - this._p3) / this._p1) * p * p * p); //added p === 1 ? 0 to avoid floating point rounding errors from affecting the final value, like 1 - 0.7 = 0.30000000000000004 instead of 0.3\n\t\t\t}\n\t\t\treturn this._calcEnd ? 1 : r;\n\t\t};\n\t\tSlowMo.ease = new SlowMo(0.7, 0.7);\n\t\t\n\t\tp.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n\t\t\treturn new SlowMo(linearRatio, power, yoyoMode);\n\t\t};\n\n\n\t\t//SteppedEase\n\t\tSteppedEase = _class(\"easing.SteppedEase\", function(steps, immediateStart) {\n\t\t\t\tsteps = steps || 1;\n\t\t\t\tthis._p1 = 1 / steps;\n\t\t\t\tthis._p2 = steps + (immediateStart ? 0 : 1);\n\t\t\t\tthis._p3 = immediateStart ? 1 : 0;\n\t\t\t}, true);\n\t\tp = SteppedEase.prototype = new Ease();\t\n\t\tp.constructor = SteppedEase;\n\t\tp.getRatio = function(p) {\n\t\t\tif (p < 0) {\n\t\t\t\tp = 0;\n\t\t\t} else if (p >= 1) {\n\t\t\t\tp = 0.999999999;\n\t\t\t}\n\t\t\treturn (((this._p2 * p) | 0) + this._p3) * this._p1;\n\t\t};\n\t\tp.config = SteppedEase.config = function(steps, immediateStart) {\n\t\t\treturn new SteppedEase(steps, immediateStart);\n\t\t};\n\n\n\t\t//ExpoScaleEase\n\t\tExpoScaleEase = _class(\"easing.ExpoScaleEase\", function(start, end, ease) {\n\t\t\tthis._p1 = Math.log(end / start);\n\t\t\tthis._p2 = end - start;\n\t\t\tthis._p3 = start;\n\t\t\tthis._ease = ease;\n\t\t}, true);\n\t\tp = ExpoScaleEase.prototype = new Ease();\n\t\tp.constructor = ExpoScaleEase;\n\t\tp.getRatio = function(p) {\n\t\t\tif (this._ease) {\n\t\t\t\tp = this._ease.getRatio(p);\n\t\t\t}\n\t\t\treturn (this._p3 * Math.exp(this._p1 * p) - this._p3) / this._p2;\n\t\t};\n\t\tp.config = ExpoScaleEase.config = function(start, end, ease) {\n\t\t\treturn new ExpoScaleEase(start, end, ease);\n\t\t};\n\n\n\t\t//RoughEase\n\t\tRoughEase = _class(\"easing.RoughEase\", function(vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar taper = vars.taper || \"none\",\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tpoints = (vars.points || 20) | 0,\n\t\t\t\ti = points,\n\t\t\t\trandomize = (vars.randomize !== false),\n\t\t\t\tclamp = (vars.clamp === true),\n\t\t\t\ttemplate = (vars.template instanceof Ease) ? vars.template : null,\n\t\t\t\tstrength = (typeof(vars.strength) === \"number\") ? vars.strength * 0.4 : 0.4,\n\t\t\t\tx, y, bump, invX, obj, pnt;\n\t\t\twhile (--i > -1) {\n\t\t\t\tx = randomize ? Math.random() : (1 / points) * i;\n\t\t\t\ty = template ? template.getRatio(x) : x;\n\t\t\t\tif (taper === \"none\") {\n\t\t\t\t\tbump = strength;\n\t\t\t\t} else if (taper === \"out\") {\n\t\t\t\t\tinvX = 1 - x;\n\t\t\t\t\tbump = invX * invX * strength;\n\t\t\t\t} else if (taper === \"in\") {\n\t\t\t\t\tbump = x * x * strength;\n\t\t\t\t} else if (x < 0.5) {  //\"both\" (start)\n\t\t\t\t\tinvX = x * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t} else {\t\t\t\t//\"both\" (end)\n\t\t\t\t\tinvX = (1 - x) * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t}\n\t\t\t\tif (randomize) {\n\t\t\t\t\ty += (Math.random() * bump) - (bump * 0.5);\n\t\t\t\t} else if (i % 2) {\n\t\t\t\t\ty += bump * 0.5;\n\t\t\t\t} else {\n\t\t\t\t\ty -= bump * 0.5;\n\t\t\t\t}\n\t\t\t\tif (clamp) {\n\t\t\t\t\tif (y > 1) {\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t} else if (y < 0) {\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[cnt++] = {x:x, y:y};\n\t\t\t}\n\t\t\ta.sort(function(a, b) {\n\t\t\t\treturn a.x - b.x;\n\t\t\t});\n\n\t\t\tpnt = new EasePoint(1, 1, null);\n\t\t\ti = points;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj = a[i];\n\t\t\t\tpnt = new EasePoint(obj.x, obj.y, pnt);\n\t\t\t}\n\n\t\t\tthis._prev = new EasePoint(0, 0, (pnt.t !== 0) ? pnt : pnt.next);\n\t\t}, true);\n\t\tp = RoughEase.prototype = new Ease();\n\t\tp.constructor = RoughEase;\n\t\tp.getRatio = function(p) {\n\t\t\tvar pnt = this._prev;\n\t\t\tif (p > pnt.t) {\n\t\t\t\twhile (pnt.next && p >= pnt.t) {\n\t\t\t\t\tpnt = pnt.next;\n\t\t\t\t}\n\t\t\t\tpnt = pnt.prev;\n\t\t\t} else {\n\t\t\t\twhile (pnt.prev && p <= pnt.t) {\n\t\t\t\t\tpnt = pnt.prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._prev = pnt;\n\t\t\treturn (pnt.v + ((p - pnt.t) / pnt.gap) * pnt.c);\n\t\t};\n\t\tp.config = function(vars) {\n\t\t\treturn new RoughEase(vars);\n\t\t};\n\t\tRoughEase.ease = new RoughEase();\n\n\n\t\t//Bounce\n\t\t_wrap(\"Bounce\",\n\t\t\t_create(\"BounceOut\", function(p) {\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\treturn 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t}\n\t\t\t\treturn 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t}),\n\t\t\t_create(\"BounceIn\", function(p) {\n\t\t\t\tif ((p = 1 - p) < 1 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * p * p);\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n\t\t\t\t}\n\t\t\t\treturn 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n\t\t\t}),\n\t\t\t_create(\"BounceInOut\", function(p) {\n\t\t\t\tvar invert = (p < 0.5);\n\t\t\t\tif (invert) {\n\t\t\t\t\tp = 1 - (p * 2);\n\t\t\t\t} else {\n\t\t\t\t\tp = (p * 2) - 1;\n\t\t\t\t}\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\tp = 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t} else {\n\t\t\t\t\tp = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t\t}\n\t\t\t\treturn invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n\t\t\t})\n\t\t);\n\n\n\t\t//CIRC\n\t\t_wrap(\"Circ\",\n\t\t\t_create(\"CircOut\", function(p) {\n\t\t\t\treturn Math.sqrt(1 - (p = p - 1) * p);\n\t\t\t}),\n\t\t\t_create(\"CircIn\", function(p) {\n\t\t\t\treturn -(Math.sqrt(1 - (p * p)) - 1);\n\t\t\t}),\n\t\t\t_create(\"CircInOut\", function(p) {\n\t\t\t\treturn ((p*=2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n\t\t\t})\n\t\t);\n\n\n\t\t//Elastic\n\t\t_createElastic = function(n, f, def) {\n\t\t\tvar C = _class(\"easing.\" + n, function(amplitude, period) {\n\t\t\t\t\tthis._p1 = (amplitude >= 1) ? amplitude : 1; //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.\n\t\t\t\t\tthis._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n\t\t\t\t\tthis._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n\t\t\t\t\tthis._p2 = _2PI / this._p2; //precalculate to optimize\n\t\t\t\t}, true),\n\t\t\t\tp = C.prototype = new Ease();\n\t\t\tp.constructor = C;\n\t\t\tp.getRatio = f;\n\t\t\tp.config = function(amplitude, period) {\n\t\t\t\treturn new C(amplitude, period);\n\t\t\t};\n\t\t\treturn C;\n\t\t};\n\t\t_wrap(\"Elastic\",\n\t\t\t_createElastic(\"ElasticOut\", function(p) {\n\t\t\t\treturn this._p1 * Math.pow(2, -10 * p) * Math.sin( (p - this._p3) * this._p2 ) + 1;\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticIn\", function(p) {\n\t\t\t\treturn -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * this._p2 ));\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? -0.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 *(p -= 1)) * Math.sin( (p - this._p3) * this._p2 ) * 0.5 + 1;\n\t\t\t}, 0.45)\n\t\t);\n\n\n\t\t//Expo\n\t\t_wrap(\"Expo\",\n\t\t\t_create(\"ExpoOut\", function(p) {\n\t\t\t\treturn 1 - Math.pow(2, -10 * p);\n\t\t\t}),\n\t\t\t_create(\"ExpoIn\", function(p) {\n\t\t\t\treturn Math.pow(2, 10 * (p - 1)) - 0.001;\n\t\t\t}),\n\t\t\t_create(\"ExpoInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\t\t\t})\n\t\t);\n\n\n\t\t//Sine\n\t\t_wrap(\"Sine\",\n\t\t\t_create(\"SineOut\", function(p) {\n\t\t\t\treturn Math.sin(p * _HALF_PI);\n\t\t\t}),\n\t\t\t_create(\"SineIn\", function(p) {\n\t\t\t\treturn -Math.cos(p * _HALF_PI) + 1;\n\t\t\t}),\n\t\t\t_create(\"SineInOut\", function(p) {\n\t\t\t\treturn -0.5 * (Math.cos(Math.PI * p) - 1);\n\t\t\t})\n\t\t);\n\n\t\t_class(\"easing.EaseLookup\", {\n\t\t\t\tfind:function(s) {\n\t\t\t\t\treturn Ease.map[s];\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//register the non-standard eases\n\t\t_easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n\t\t_easeReg(RoughEase, \"RoughEase\", \"ease,\");\n\t\t_easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n\t\t\n\t\treturn Back;\n\t\t\n\t}, true);\n\nexport var Back = globals.Back;\nexport var Elastic = globals.Elastic;\nexport var Bounce = globals.Bounce;\nexport var RoughEase = globals.RoughEase;\nexport var SlowMo = globals.SlowMo;\nexport var SteppedEase = globals.SteppedEase;\nexport var Circ = globals.Circ;\nexport var Expo = globals.Expo;\nexport var Sine = globals.Sine;\nexport var ExpoScaleEase = globals.ExpoScaleEase;\nexport { Linear, Power0, Power1, Power2, Power3, Power4 };","/*!\n * VERSION: 2.1.3\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\n\nimport TweenLite, { TweenPlugin, Ease, Power0, Power1, Power2, Power3, Power4, Linear } from \"./TweenLite.js\";\nimport TweenMaxBase from \"./TweenMaxBase.js\";\nimport CSSPlugin from \"./CSSPlugin.js\";\nimport AttrPlugin from \"./AttrPlugin.js\";\nimport RoundPropsPlugin from \"./RoundPropsPlugin.js\";\nimport DirectionalRotationPlugin from \"./DirectionalRotationPlugin.js\";\nimport TimelineLite from \"./TimelineLite.js\";\nimport TimelineMax from \"./TimelineMax.js\";\nimport BezierPlugin from \"./BezierPlugin.js\";\nimport { Back, Elastic, Bounce, RoughEase, SlowMo, SteppedEase, Circ, Expo, Sine, ExpoScaleEase } from \"./EasePack.js\";\n\n//the following two lines are designed to prevent tree shaking of the classes that were historically included with TweenMax (otherwise, folks would have to reference CSSPlugin, for example, to ensure their CSS-related animations worked)\nexport var TweenMax = TweenMaxBase;\nTweenMax._autoActivated = [TimelineLite, TimelineMax, CSSPlugin, AttrPlugin, BezierPlugin, RoundPropsPlugin, DirectionalRotationPlugin, Back, Elastic, Bounce, RoughEase, SlowMo, SteppedEase, Circ, Expo, Sine, ExpoScaleEase];\n\nexport { TweenMax as default };\nexport { TweenLite, TimelineLite, TimelineMax, CSSPlugin, AttrPlugin, BezierPlugin, DirectionalRotationPlugin, RoundPropsPlugin, TweenPlugin, Ease, Power0, Power1, Power2, Power3, Power4, Linear, Back, Elastic, Bounce, RoughEase, SlowMo, SteppedEase, Circ, Expo, Sine, ExpoScaleEase };\n","import{Scene as e,OrthographicCamera as t,WebGLRenderer as n,TextureLoader as i,LinearFilter as o,VideoTexture as a,ShaderMaterial as r,Vector4 as s,PlaneBufferGeometry as f,Mesh as l}from\"three\";import d from\"gsap/TweenMax\";export default function(v){function u(){for(var e=arguments,t=0;t<arguments.length;t++)if(void 0!==e[t])return e[t]}console.log(\"%c Hover effect by Robin Delaporte: https://github.com/robin-dela/hover-effect \",\"color: #bada55; font-size: 0.8rem\");var m=v.parent,p=v.displacementImage,c=v.image1,g=v.image2,h=u(v.imagesRatio,1),y=u(v.intensity1,v.intensity,1),x=u(v.intensity2,v.intensity,1),F=u(v.angle,Math.PI/4),w=u(v.angle1,F),H=u(v.angle2,3*-F),W=u(v.speedIn,v.speed,1.6),E=u(v.speedOut,v.speed,1.2),P=u(v.hover,!0),U=u(v.easing,Expo.easeOut),C=u(v.video,!1);if(m)if(c&&g&&p){var D=new e,L=new t(m.offsetWidth/-2,m.offsetWidth/2,m.offsetHeight/2,m.offsetHeight/-2,1,1e3);L.position.z=1;var M=new n({antialias:!1,alpha:!0});M.setPixelRatio(2),M.setClearColor(16777215,0),M.setSize(m.offsetWidth,m.offsetHeight),m.appendChild(M.domElement);var R=function(){M.render(D,L)},V=new i;V.crossOrigin=\"\";var _,z,b=V.load(p,R);if(b.magFilter=b.minFilter=o,C){var O=function(){requestAnimationFrame(O),M.render(D,L)};O(),(C=document.createElement(\"video\")).autoplay=!0,C.loop=!0,C.src=c,C.load();var S=document.createElement(\"video\");S.autoplay=!0,S.loop=!0,S.src=g,S.load();var I=new a(C),j=new a(S);I.magFilter=j.magFilter=o,I.minFilter=j.minFilter=o,S.addEventListener(\"loadeddata\",function(){S.play(),(j=new a(S)).magFilter=o,j.minFilter=o,A.uniforms.texture2.value=j},!1),C.addEventListener(\"loadeddata\",function(){C.play(),(I=new a(C)).magFilter=o,I.minFilter=o,A.uniforms.texture1.value=I},!1)}else I=V.load(c,R),j=V.load(g,R),I.magFilter=j.magFilter=o,I.minFilter=j.minFilter=o;var q=h;m.offsetHeight/m.offsetWidth<q?(_=1,z=m.offsetHeight/m.offsetWidth/q):(_=m.offsetWidth/m.offsetHeight*q,z=1);var A=new r({uniforms:{intensity1:{type:\"f\",value:y},intensity2:{type:\"f\",value:x},dispFactor:{type:\"f\",value:0},angle1:{type:\"f\",value:w},angle2:{type:\"f\",value:H},texture1:{type:\"t\",value:I},texture2:{type:\"t\",value:j},disp:{type:\"t\",value:b},res:{type:\"vec4\",value:new s(m.offsetWidth,m.offsetHeight,_,z)},dpr:{type:\"f\",value:window.devicePixelRatio}},vertexShader:\"\\nvarying vec2 vUv;\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\",fragmentShader:\"\\nvarying vec2 vUv;\\n\\nuniform float dispFactor;\\nuniform float dpr;\\nuniform sampler2D disp;\\n\\nuniform sampler2D texture1;\\nuniform sampler2D texture2;\\nuniform float angle1;\\nuniform float angle2;\\nuniform float intensity1;\\nuniform float intensity2;\\nuniform vec4 res;\\nuniform vec2 parent;\\n\\nmat2 getRotM(float angle) {\\n  float s = sin(angle);\\n  float c = cos(angle);\\n  return mat2(c, -s, s, c);\\n}\\n\\nvoid main() {\\n  vec4 disp = texture2D(disp, vUv);\\n  vec2 dispVec = vec2(disp.r, disp.g);\\n\\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\\n\\n\\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\\n}\\n\",transparent:!0,opacity:1}),T=new f(m.offsetWidth,m.offsetHeight,1),k=new l(T,A);D.add(k),P&&(m.addEventListener(\"mouseenter\",B),m.addEventListener(\"touchstart\",B),m.addEventListener(\"mouseleave\",G),m.addEventListener(\"touchend\",G)),window.addEventListener(\"resize\",function(e){m.offsetHeight/m.offsetWidth<q?(_=1,z=m.offsetHeight/m.offsetWidth/q):(_=m.offsetWidth/m.offsetHeight*q,z=1),k.material.uniforms.res.value=new s(m.offsetWidth,m.offsetHeight,_,z),M.setSize(m.offsetWidth,m.offsetHeight),R()}),this.next=B,this.previous=G}else console.warn(\"One or more images are missing\");else console.warn(\"Parent missing\");function B(){d.to(A.uniforms.dispFactor,W,{value:1,ease:U,onUpdate:R,onComplete:R})}function G(){d.to(A.uniforms.dispFactor,E,{value:0,ease:U,onUpdate:R,onComplete:R})}}\n//# sourceMappingURL=hover-effect.es.js.map\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\n\nvar resolve = require('./bundle-manifest').resolve;\n\nmodule.exports = function (fromId, toId) {\n  return relative(dirname(resolve(fromId)), resolve(toId));\n};\n\nfunction dirname(_filePath) {\n  if (_filePath === '') {\n    return '.';\n  }\n\n  var filePath = _filePath[_filePath.length - 1] === '/' ? _filePath.slice(0, _filePath.length - 1) : _filePath;\n  var slashIndex = filePath.lastIndexOf('/');\n  return slashIndex === -1 ? '.' : filePath.slice(0, slashIndex);\n}\n\nfunction relative(from, to) {\n  if (from === to) {\n    return '';\n  }\n\n  var fromParts = from.split('/');\n\n  if (fromParts[0] === '.') {\n    fromParts.shift();\n  }\n\n  var toParts = to.split('/');\n\n  if (toParts[0] === '.') {\n    toParts.shift();\n  } // Find where path segments diverge.\n\n\n  var i;\n  var divergeIndex;\n\n  for (i = 0; (i < toParts.length || i < fromParts.length) && divergeIndex == null; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      divergeIndex = i;\n    }\n  } // If there are segments from \"from\" beyond the point of divergence,\n  // return back up the path to that point using \"..\".\n\n\n  var parts = [];\n\n  for (i = 0; i < fromParts.length - divergeIndex; i++) {\n    parts.push('..');\n  } // If there are segments from \"to\" beyond the point of divergence,\n  // continue using the remaining segments.\n\n\n  if (toParts.length > divergeIndex) {\n    parts.push.apply(parts, toParts.slice(divergeIndex));\n  }\n\n  return parts.join('/');\n}\n\nmodule.exports._dirname = dirname;\nmodule.exports._relative = relative;","import hoverEffect from 'hover-effect';\r\nimport image1 from './assets/images/01.png';\r\nimport image2 from './assets/images/02.png';\r\nimport displacementImage from './assets/images/diss.png';\r\n  new hoverEffect({\r\n    parent: document.querySelector(\".distortion\"),\r\n    intensity: 0.2,\r\n    image1,\r\n    image2,\r\n    displacementImage,\r\n    imagesRatio: 380 / 300,\r\n  });\r\n\r\n  // NAVBAR\r\n  TweenMax.staggerFrom(\r\n    \".navbar div\",\r\n    1.5,\r\n    {\r\n      delay: 1.5,\r\n      opacity: 0,\r\n      y: \"20\",\r\n      ease: Expo.easeInOut,\r\n    },\r\n    0.08\r\n  );\r\n\r\n  // MEDIA\r\n  TweenMax.staggerFrom(\r\n    \".media ul li\",\r\n    1.5,\r\n    {\r\n      delay: 1.5,\r\n      opacity: 0,\r\n      x: \"-20\",\r\n      ease: Expo.easeInOut,\r\n    },\r\n    0.08\r\n  );\r\n\r\n  // TEXT\r\n  TweenMax.from(\".text h1 .hidetext\", 1.5, {\r\n    delay: 1,\r\n    y: \"100%\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  TweenMax.from(\".text h3 .hidetext\", 1.5, {\r\n    delay: 1.2,\r\n    y: \"100%\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  TweenMax.from(\".text p .hidetext\", 1.5, {\r\n    delay: 1.3,\r\n    y: \"100%\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  TweenMax.from(\".text h2\", 1.5, {\r\n    delay: 1.5,\r\n    opacity: 0,\r\n    x: \"-10000\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  // SPONSOR\r\n  TweenMax.from(\".sponsor img\", 1.5, {\r\n    delay: 1.5,\r\n    opacity: 0,\r\n    y: \"20\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  TweenMax.from(\".sponsor p\", 1.5, {\r\n    delay: 1.6,\r\n    opacity: 0,\r\n    y: \"20\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  // DISTORTION\r\n  TweenMax.from(\".distortion\", 1.5, {\r\n    delay: 2,\r\n    opacity: 0,\r\n    y: \"20\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  // OVERLAY\r\n  TweenMax.to(\".first\", 1.5, {\r\n    delay: 0.5,\r\n    top: \"-100%\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  TweenMax.to(\".second\", 1.5, {\r\n    delay: 0.7,\r\n    top: \"-100%\",\r\n    ease: Expo.easeInOut,\r\n  });\r\n\r\n  TweenMax.to(\".third\", 1.5, {\r\n    delay: 0.9,\r\n    top: \"-100%\",\r\n    ease: Expo.easeInOut,\r\n  });"],"names":["$parcel$global","globalThis","self","window","global","$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$parcel$interopDefault","a","__esModule","default","$3dc40b307e9ddfa37c6a55725e66a38b$var$mapping","resolved","id","Error","pairs","i","keys","undefined","Number","isInteger","value","sign","Function","x","toString","match","target","TypeError","arguments","output","nextKey","listeners","hasEventListener","listener","_listeners","type","removeEventListener","indexOf","listenerArray","index","splice","dispatchEvent","event","this","array","l","length","$bd91b0f0455505fd987424dc38ef63e3$export$REVISION","$bd91b0f0455505fd987424dc38ef63e3$export$MOUSE","LEFT","MIDDLE","RIGHT","slice","$bd91b0f0455505fd987424dc38ef63e3$export$CullFaceNone","negate","max","vector","matrix","te","quaternion","copy","$bd91b0f0455505fd987424dc38ef63e3$export$DstAlphaFactor","$bd91b0f0455505fd987424dc38ef63e3$export$ShortType","$bd91b0f0455505fd987424dc38ef63e3$export$UnsignedShortType","$bd91b0f0455505fd987424dc38ef63e3$export$IntType","$bd91b0f0455505fd987424dc38ef63e3$export$UnsignedIntType","$bd91b0f0455505fd987424dc38ef63e3$export$FloatType","$bd91b0f0455505fd987424dc38ef63e3$export$HalfFloatType","$bd91b0f0455505fd987424dc38ef63e3$export$UnsignedShort4444Type","$bd91b0f0455505fd987424dc38ef63e3$export$UnsignedShort565Type","$bd91b0f0455505fd987424dc38ef63e3$export$UnsignedInt248Type","$bd91b0f0455505fd987424dc38ef63e3$export$RGBAFormat","$bd91b0f0455505fd987424dc38ef63e3$export$RGBEFormat","$bd91b0f0455505fd987424dc38ef63e3$export$DepthFormat","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_S3TC_DXT1_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_S3TC_DXT5_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGB_PVRTC_4BPPV1_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGB_ETC1_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_ASTC_4x4_Format","$bd91b0f0455505fd987424dc38ef63e3$export$GammaEncoding","$bd91b0f0455505fd987424dc38ef63e3$export$RGBEEncoding","$bd91b0f0455505fd987424dc38ef63e3$export$LogLuvEncoding","$bd91b0f0455505fd987424dc38ef63e3$export$RGBM7Encoding","$bd91b0f0455505fd987424dc38ef63e3$export$RGBM16Encoding","$bd91b0f0455505fd987424dc38ef63e3$export$RGBDEncoding","$bd91b0f0455505fd987424dc38ef63e3$export$ObjectSpaceNormalMap","uuid","d0","clamp","Math","min","b2","b1","a2","lut","d1","y","t","range","radToDeg","radians","$bd91b0f0455505fd987424dc38ef63e3$export$Math","isPowerOfTwo","ceilPowerOfTwo","floorPowerOfTwo","pow","floor","randFloat","low","high","random","RAD2DEG","assign","$bd91b0f0455505fd987424dc38ef63e3$export$Vector2","scalar","m","elements","me","z","_y","a31","b12","be","b13","b22","b31","defineProperties","setY","prototype","getComponent","clone","add","w","console","addScalar","s","addVectors","b","addScaledVector","sub","warn","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","set","clampLength","ceil","round","roundToZero","dot","minVal","cross","manhattanLength","normalize","abs","angle","distanceTo","sqrt","distanceToSquared","dx","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v2","equals","fromArray","offset","toArray","fromBufferAttribute","dy","attribute","getX","c","cos","center","v1","$bd91b0f0455505fd987424dc38ef63e3$export$Matrix4","isMatrix4","n11","n14","n21","n22","n23","n24","n31","n12","n13","n32","n33","n34","n41","n42","n43","n44","copyPosition","xAxis","extractBasis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","d","bf","ae","af","order","ce","cf","df","de","f","sin","bd","ac","bc","ad","makeRotationFromQuaternion","zero","one","$bd91b0f0455505fd987424dc38ef63e3$export$Vector3","compose","q","lookAt","eye","lengthSq","crossVectors","multiplyMatrices","premultiply","a11","a12","a21","a41","a42","b11","a22","b23","b24","applyToBufferAttribute","b43","b44","a13","b32","count","applyMatrix4","a23","b33","a24","setXYZ","determinant","b21","a43","a44","b41","b14","b34","transpose","tmp","setPosition","det","msg","throwOnDegenerate","detInv","t12","t13","t14","scale","getMaxScaleOnAxis","scaleXSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","makeScale","makeShear","_z","x2","y2","z2","xx","xy","wz","sx","sy","sz","xz","wy","yz","wx","position","invSX","invSY","_x","invSZ","zz","setFromRotationMatrix","makePerspective","far","yy","near","right","makeOrthographic","left","top","bottom","p","h","_w","$bd91b0f0455505fd987424dc38ef63e3$export$Quaternion","qm","slerpFlat","dst","dstOffset","w0","w1","x0","x1","len","dir","y0","y1","z0","z1","tDir","onChangeCallback","src0","srcOffset0","src1","srcOffset1","sqrSin","isQuaternion","constructor","setFromEuler","s1","c1","s2","c3","s3","setFromAxisAngle","c2","update","trace","m32","m13","m21","m11","m22","m23","m12","m31","m33","setFromUnitVectors","r","EPS","vFrom","vTo","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qbx","qby","qbz","qay","qaw","qaz","qbw","qax","cosHalfTheta","qb","sqrSinHalfTheta","sinHalfTheta","halfTheta","atan2","ratioA","onChange","callback","setScalar","setX","ratioB","setZ","setComponent","multiplyVectors","applyEuler","applyAxisAngle","applyQuaternion","qx","qy","iy","qw","iz","project","unproject","transformDirection","error","clampScalar","maxVal","camera","getInverse","projectionMatrix","matrixWorld","bx","ay","bz","az","by","ax","projectOnVector","projectOnPlane","normal","dz","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","radius","setFromMatrixPosition","planeNormal","getY","getZ","phi","$bd91b0f0455505fd987424dc38ef63e3$export$Matrix3","isMatrix3","identity","setFromMatrix4","t11","getNormalMatrix","a32","matrix4","transposeIntoArray","a33","setUvTransform","rotate","translate","ty","$bd91b0f0455505fd987424dc38ef63e3$var$_canvas","$bd91b0f0455505fd987424dc38ef63e3$export$ImageUtils","canvas","HTMLCanvasElement","image","context","putImageData","drawImage","width","toDataURL","$bd91b0f0455505fd987424dc38ef63e3$var$textureId","name","mipmaps","mapping","wrapS","magFilter","anisotropy","format","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","$bd91b0f0455505fd987424dc38ef63e3$export$Texture","closestPoint","clipping_planes_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$linedashed_vert","source","wrapT","minFilter","repeat","encoding","generator","rotation","wrap","isRootObject","url","Array","images","minZ","height","setFromBufferAttribute","Infinity","minY","maxX","maxY","box","activeCubeFace","getCenter","isEmpty","getSize","expandByVector","setFromMatrix","constant","$bd91b0f0455505fd987424dc38ef63e3$var$normal_fragment_begin","p2","p3","p4","p5","$bd91b0f0455505fd987424dc38ef63e3$var$normal_fragment_maps","p1","$bd91b0f0455505fd987424dc38ef63e3$export$Plane","$bd91b0f0455505fd987424dc38ef63e3$export$NearestFilter","textures","dispose","transformUv","uv","$bd91b0f0455505fd987424dc38ef63e3$export$UVMapping","$bd91b0f0455505fd987424dc38ef63e3$export$RepeatWrapping","$bd91b0f0455505fd987424dc38ef63e3$export$ClampToEdgeWrapping","$bd91b0f0455505fd987424dc38ef63e3$export$MirroredRepeatWrapping","isArray","meta","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","$bd91b0f0455505fd987424dc38ef63e3$export$Vector4","epsilon","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","$bd91b0f0455505fd987424dc38ef63e3$export$WebGLRenderTarget","$bd91b0f0455505fd987424dc38ef63e3$export$WebGLRenderTargetCube","$bd91b0f0455505fd987424dc38ef63e3$export$DataTexture","$bd91b0f0455505fd987424dc38ef63e3$export$Box3","isBox3","minX","maxZ","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","size","create","expandByScalar","expandByObject","geometry","vertices","scope","object","updateMatrixWorld","traverse","containsPoint","point","containsBox","getParameter","intersectsBox","intersectsSphere","points","intersectsPlane","plane","halfSize","intersectsTriangle","f1","testAxis","extents","triangleNormal","j","axes","v0","isGeometry","satForAxes","node","distanceToPoint","clampedPoint","getBoundingSphere","sphere","$bd91b0f0455505fd987424dc38ef63e3$export$Sphere","optionalCenter","maxRadiusSq","p0","triangle","radiusSum","clampPoint","f0","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","intersectLine","direction","denominator","line","start","il","intersectsLine","startSign","coplanarPoint","normalMatrix","optionalNormalMatrix","referencePoint","planes","frustum","me13","me3","me2","intersectsSprite","negRadius","distance","inverseNormalLength","$bd91b0f0455505fd987424dc38ef63e3$var$alphamap_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$alphamap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$alphatest_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$aomap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$begin_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$bumpmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$clipping_planes_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$clipping_planes_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$color_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$common","$bd91b0f0455505fd987424dc38ef63e3$var$defaultnormal_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$displacementmap_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$displacementmap_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$emissivemap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$encodings_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$envmap_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$envmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$envmap_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$gradientmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$fog_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$fog_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$fog_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$lightmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$lights_lambert_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$lights_pars_begin","$bd91b0f0455505fd987424dc38ef63e3$var$envmap_physical_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$lights_phong_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$lights_phong_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$lights_physical_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$lights_fragment_begin","$bd91b0f0455505fd987424dc38ef63e3$var$lights_physical_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$logdepthbuf_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$logdepthbuf_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$logdepthbuf_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$map_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$map_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$packing","$bd91b0f0455505fd987424dc38ef63e3$var$premultiplied_alpha_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$project_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$shadowmap_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$dithering_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$dithering_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$roughnessmap_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$roughnessmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$shadowmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$shadowmap_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$skinbase_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$skinning_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$skinnormal_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$specularmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$specularmap_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$tonemapping_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$uv_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$uv_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$uv2_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$uv2_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$uv2_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$worldpos_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$background_frag","$bd91b0f0455505fd987424dc38ef63e3$var$background_vert","$bd91b0f0455505fd987424dc38ef63e3$var$equirect_frag","$bd91b0f0455505fd987424dc38ef63e3$var$cube_frag","me8","me15","me12","$bd91b0f0455505fd987424dc38ef63e3$var$cube_vert","$bd91b0f0455505fd987424dc38ef63e3$var$depth_frag","me9","$bd91b0f0455505fd987424dc38ef63e3$var$depth_vert","$bd91b0f0455505fd987424dc38ef63e3$var$distanceRGBA_frag","me14","$bd91b0f0455505fd987424dc38ef63e3$var$distanceRGBA_vert","$bd91b0f0455505fd987424dc38ef63e3$var$meshbasic_frag","$bd91b0f0455505fd987424dc38ef63e3$var$meshbasic_vert","$bd91b0f0455505fd987424dc38ef63e3$var$meshmatcap_frag","$bd91b0f0455505fd987424dc38ef63e3$var$meshlambert_frag","$bd91b0f0455505fd987424dc38ef63e3$var$meshlambert_vert","$bd91b0f0455505fd987424dc38ef63e3$var$meshphong_vert","$bd91b0f0455505fd987424dc38ef63e3$var$meshphysical_frag","$bd91b0f0455505fd987424dc38ef63e3$var$meshphysical_vert","$bd91b0f0455505fd987424dc38ef63e3$var$points_vert","$bd91b0f0455505fd987424dc38ef63e3$var$normal_frag","$bd91b0f0455505fd987424dc38ef63e3$var$normal_vert","$bd91b0f0455505fd987424dc38ef63e3$var$points_frag","$bd91b0f0455505fd987424dc38ef63e3$var$sprite_frag","alphamap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$sprite_vert","$bd91b0f0455505fd987424dc38ef63e3$export$ShaderChunk","alphamap_fragment","aomap_fragment","alphatest_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$aomap_fragment","aomap_pars_fragment","bsdfs","$bd91b0f0455505fd987424dc38ef63e3$var$bsdfs","clipping_planes_fragment","clipping_planes_pars_vertex","color_fragment","clipping_planes_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$color_fragment","color_pars_fragment","defaultnormal_vertex","color_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$color_vertex","common","cube_uv_reflection_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$cube_uv_reflection_fragment","displacementmap_pars_vertex","emissivemap_pars_fragment","envmap_fragment","envmap_pars_vertex","envmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$ColorKeywords","$bd91b0f0455505fd987424dc38ef63e3$var$lightmap_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$lights_fragment_maps","$bd91b0f0455505fd987424dc38ef63e3$var$lights_fragment_end","$bd91b0f0455505fd987424dc38ef63e3$var$logdepthbuf_vertex","color_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$map_particle_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$map_particle_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$metalnessmap_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$metalnessmap_pars_fragment","displacementmap_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$morphnormal_vertex","emissivemap_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$morphtarget_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$morphtarget_vertex","encodings_fragment","encodings_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$normalmap_pars_fragment","fog_vertex","fog_pars_vertex","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$shadowmask_pars_fragment","lights_pars_begin","lights_phong_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$skinning_vertex","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","$bd91b0f0455505fd987424dc38ef63e3$var$tonemapping_pars_fragment","lights_fragment_end","logdepthbuf_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$uv_pars_vertex","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$equirect_vert","packing","$bd91b0f0455505fd987424dc38ef63e3$var$linedashed_frag","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$meshmatcap_vert","shadowmap_pars_vertex","$bd91b0f0455505fd987424dc38ef63e3$var$meshphong_frag","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$shadow_frag","tonemapping_fragment","$bd91b0f0455505fd987424dc38ef63e3$var$shadow_vert","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","src","background_frag","u","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","property","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","uniforms","meshlambert_vert","merged","meshmatcap_frag","meshmatcap_vert","$bd91b0f0455505fd987424dc38ef63e3$var$cloneUniforms","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","$bd91b0f0455505fd987424dc38ef63e3$export$UniformsUtils","points_vert","shadow_frag","$bd91b0f0455505fd987424dc38ef63e3$var$mergeUniforms","shadow_vert","sprite_frag","sprite_vert","isColor","isVector2","isVector3","isVector4","isTexture","shadowRadius","g","setHex","setStyle","hex","setRGB","setHSL","string","parseFloat","components","handleAlpha","color","style","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","copyLinearToSRGB","getHexString","hue","saturation","lightness","delta","getStyle","offsetHSL","hsl","color1","exec","parseInt","charAt","hslA","getHSL","hslB","toJSON","$bd91b0f0455505fd987424dc38ef63e3$export$UniformsLib","diffuse","$bd91b0f0455505fd987424dc38ef63e3$export$Color","map","uvTransform","alphaMap","specularmap","specularMap","envMap","envmap","flipEnvMap","reflectivity","maxMipLevel","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","normalmap","displacementmap","displacementMap","displacementScale","roughnessMap","roughnessmap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogNear","fogDensity","fogColor","fogFar","lights","ambientLightColor","directionalLights","properties","shadowMapSize","directionalShadowMatrix","spotLights","coneCos","shadow","shadowBias","spotShadowMap","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","opacity","$bd91b0f0455505fd987424dc38ef63e3$export$ShaderLib","vertexShader","lambert","emissive","fragmentShader","shininess","matcap","dashed","dashSize","totalSize","depth","sprite","background","t2D","tCube","referencePosition","nearDistance","farDistance","clearCoat","aomap","isAnimating","animationLoop","requestAnimationFrame","onAnimationFrame","stop","setAnimationLoop","setContext","gl","buffers","bufferType","buffer","bufferData","onUploadCallback","Uint16Array","Uint32Array","Uint8Array","updateRange","bindBuffer","deleteBuffer","delete","isInterleavedBufferAttribute","data","updateBuffer","cube","vertexNormals","tFlip","materialIndex","tEquirect","vertexColors","$bd91b0f0455505fd987424dc38ef63e3$export$Euler","_order","isEuler","setFromVector3","createBuffer","asin","bufferSubData","BYTES_PER_ELEMENT","subarray","setFromQuaternion","newOrder","mask","DefaultOrder","m1","$bd91b0f0455505fd987424dc38ef63e3$export$Face3","optionalResult","$bd91b0f0455505fd987424dc38ef63e3$export$Layers","channel","enable","toggle","test","$bd91b0f0455505fd987424dc38ef63e3$var$object3DId","parent","children","configurable","modelViewMatrix","layers","visible","castShadow","receiveShadow","frustumCulled","userData","$bd91b0f0455505fd987424dc38ef63e3$export$Object3D","isObject3D","onBeforeRender","applyMatrix","setRotationFromMatrix","q1","rotateOnWorldAxis","rotateOnAxis","translateX","translateY","translateOnAxis","worldToLocal","updateWorldMatrix","generateUUID","DefaultUp","remove","getObjectById","getObjectByProperty","getWorldPosition","$bd91b0f0455505fd987424dc38ef63e3$export$EventDispatcher","decompose","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","force","matrixWorldNeedsUpdate","updateChildren","updateParents","geometries","metadata","JSON","stringify","library","element","isMesh","serialize","parameters","shape","shapes","material","uuids","push","materials","extractFromCache","cache","key","values","recursive","renderOrder","child","$bd91b0f0455505fd987424dc38ef63e3$var$geometryId","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","boundingBox","boundingSphere","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","groupsNeedUpdate","$bd91b0f0455505fd987424dc38ef63e3$export$Geometry","vertex","face","jl","computeBoundingBox","rotateX","uvs2","attributes","uv2","positions","obj","fromBufferGeometry","indices","normals","uvs","groups","group","addFace","computeFaceNormals","computeVertexNormals","cb","fl","vC","vB","ab","areaWeighted","vl","morphTargetsLength","morphTargetsPosition","morphNormalsLength","itemSize","normalized","call","Uint8ClampedArray","Int16Array","$bd91b0f0455505fd987424dc38ef63e3$export$Uint16BufferAttribute","morphTarget","computeFlatVertexNormals","__originalFaceNormal","__originalVertexNormals","dstNormalsFace","tmpGeo","faceNormal","computeBoundingSphere","materialIndexOffset","vertices2","vertexCopy","vertices1","colors2","faces2","faceCopy","faceVertexNormals","faces1","uvCopy","uvs1","mesh","mergeVertices","verticesMap","precisionPoints","precision","unique","changes","faceIndicesToRemove","idx","diff","newUvs1","_id","newUvs2","uvsHash","hasFaceUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","hasFaceVertexUv","getUvIndex","getNormalIndex","getColorIndex","enabled","normalsHash","hash","colorsHash","getHex","k","kl","morphNormal","srcVertexNormal","destVertexNormal","faceNormals","skinIndices","lineDistances","colorsNeedUpdate","lineDistancesNeedUpdate","dynamic","isBufferAttribute","setArray","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setW","setXY","setXYZW","$bd91b0f0455505fd987424dc38ef63e3$export$BufferAttribute","$bd91b0f0455505fd987424dc38ef63e3$export$Int8BufferAttribute","$bd91b0f0455505fd987424dc38ef63e3$export$Uint8BufferAttribute","$bd91b0f0455505fd987424dc38ef63e3$export$Uint8ClampedBufferAttribute","$bd91b0f0455505fd987424dc38ef63e3$export$Int32BufferAttribute","$bd91b0f0455505fd987424dc38ef63e3$export$Uint32BufferAttribute","$bd91b0f0455505fd987424dc38ef63e3$export$Float32BufferAttribute","$bd91b0f0455505fd987424dc38ef63e3$var$DirectGeometry","computeGroups","morphTargetsNormal","hasSkinIndices","hasSkinWeights","hasFaceVertexUv2","vertexUvs","$bd91b0f0455505fd987424dc38ef63e3$var$bufferGeometryId","morphAttributes","drawRange","$bd91b0f0455505fd987424dc38ef63e3$export$BufferGeometry","getIndex","$bd91b0f0455505fd987424dc38ef63e3$var$arrayMax","removeAttribute","clearGroups","setDrawRange","setFromObject","isPoints","addAttribute","updateFromObject","direct","__directGeometry","fromGeometry","needsUpdate","fromDirectGeometry","Float32Array","$bd91b0f0455505fd987424dc38ef63e3$export$BoxGeometry","polygonOffsetUnits","linewidth","gapSize","premultipliedAlpha","wireframe","wireframeLinewidth","wireframeLinejoin","isRoot","widthSegments","blending","numberOfVertices","groupStart","segmentWidth","segmentHeight","widthHalf","clipShadows","heightHalf","clipIntersection","srcPlanes","clippingPlanes","dstPlanes","gridY1","ix","gridX1","gridY","$bd91b0f0455505fd987424dc38ef63e3$export$Material","defines","transparent","blendDst","blendSrcAlpha","blendEquationAlpha","depthTest","colorWrite","setIndex","polygonOffsetFactor","dithering","alphaTest","uniformsNeedUpdate","heightSegments","setValues","$bd91b0f0455505fd987424dc38ef63e3$export$ShaderMaterial","clipping","extensions","uniform","isNaN","pA","pC","pB","merge","isBufferGeometry","attribute1","attributeArray2","attributeSize","attributeArray1","normalizeNormals","toNonIndexed","geometry2","array2","addGroup","elementsNeedUpdate","morphAttribute","depthSegments","buildPlane","gridX","vertexCounter","groupCount","depthHalf","$bd91b0f0455505fd987424dc38ef63e3$export$BoxBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$PlaneGeometry","height_half","segment_width","segment_height","$bd91b0f0455505fd987424dc38ef63e3$export$PlaneBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$var$materialId","$bd91b0f0455505fd987424dc38ef63e3$export$NormalBlending","side","$bd91b0f0455505fd987424dc38ef63e3$export$FrontSide","flatShading","$bd91b0f0455505fd987424dc38ef63e3$export$NoColors","blendDstAlpha","depthFunc","$bd91b0f0455505fd987424dc38ef63e3$export$LessEqualDepth","depthWrite","isMaterial","parse","newValue","metalness","emissiveIntensity","clearCoatRoughness","aoMap","bumpScale","normalMap","vbc","boxMesh","origin","$bd91b0f0455505fd987424dc38ef63e3$export$Ray","$bd91b0f0455505fd987424dc38ef63e3$export$SubtractiveBlending","$bd91b0f0455505fd987424dc38ef63e3$export$ReverseSubtractEquation","at","blendEquation","$bd91b0f0455505fd987424dc38ef63e3$export$Uncharted2ToneMapping","recast","polygonOffset","closestPointToPoint","getNormal","targetLengthSq","dot12","getPlane","intersection","checkBufferGeometryIntersection","faceIndex","extension","capabilities","info","maxInstancedCount","render","renderInstances","maxAnisotropy","combine","$bd91b0f0455505fd987424dc38ef63e3$export$CubeRefractionMapping","isWebGL2","getMaxAnisotropy","getMaxPrecision","logarithmicDepthBuffer","maxVertexTextures","maxTextureSize","instanceCount","renderer","state","objects","calls","mode","clearColor","setClearColor","buffergeometry","updateList","scene","lines","frame","$bd91b0f0455505fd987424dc38ef63e3$export$MultiplyBlending","programs","autoReset","reset","influencesList","morphInfluences","program","objectInfluences","morphTargetInfluences","influences","influence","getUniforms","planeMesh","setMode","$bd91b0f0455505fd987424dc38ef63e3$export$CubeTexture","$bd91b0f0455505fd987424dc38ef63e3$export$DataTexture3D","$bd91b0f0455505fd987424dc38ef63e3$var$emptyTexture","$bd91b0f0455505fd987424dc38ef63e3$var$emptyTexture3d","$bd91b0f0455505fd987424dc38ef63e3$var$emptyCubeTexture","$bd91b0f0455505fd987424dc38ef63e3$var$mat3array","renderingShadows","viewNormalMatrix","$bd91b0f0455505fd987424dc38ef63e3$var$mat2array","resetGlobalState","uniform1i","$bd91b0f0455505fd987424dc38ef63e3$var$arraysEqual","uniform2fv","addr","dstArray","i4","uniform3f","firstElem","$bd91b0f0455505fd987424dc38ef63e3$var$arrayCacheF32","localClippingEnabled","enableLocalClipping","projectPlanes","nBlocks","blockSize","fromCache","Int32Array","$bd91b0f0455505fd987424dc38ef63e3$var$arrayCacheI32","allocTextureUnit","uniform1f","uniform3fv","$bd91b0f0455505fd987424dc38ef63e3$var$copyArray","uniform4f","uniform4fv","onGeometryDispose","uniformMatrix3fv","wireframeAttributes","uniformMatrix4fv","$bd91b0f0455505fd987424dc38ef63e3$var$mat4array","unit","setTexture2D","geometryAttributes","uniform2iv","geometryIndex","uniform3iv","uniform4iv","$bd91b0f0455505fd987424dc38ef63e3$var$setValue2fv","$bd91b0f0455505fd987424dc38ef63e3$var$setValue3fv","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLIndexedBufferRenderer","bytesPerElement","$bd91b0f0455505fd987424dc38ef63e3$var$setValue1i","$bd91b0f0455505fd987424dc38ef63e3$var$setValue3iv","uniform1fv","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLInfo","updateCache","$bd91b0f0455505fd987424dc38ef63e3$var$flatten","$bd91b0f0455505fd987424dc38ef63e3$var$allocTexUnits","uniformMatrix2fv","triangles","$bd91b0f0455505fd987424dc38ef63e3$var$setValue1fv","$bd91b0f0455505fd987424dc38ef63e3$var$setValueV2a","$bd91b0f0455505fd987424dc38ef63e3$var$setValueV3a","$bd91b0f0455505fd987424dc38ef63e3$var$setValueV4a","$bd91b0f0455505fd987424dc38ef63e3$var$setValueM3a","$bd91b0f0455505fd987424dc38ef63e3$var$setValueT6a","$bd91b0f0455505fd987424dc38ef63e3$var$setValue1iv","$bd91b0f0455505fd987424dc38ef63e3$var$setValue2iv","$bd91b0f0455505fd987424dc38ef63e3$var$setValue4iv","$bd91b0f0455505fd987424dc38ef63e3$var$getSingularSetter","setValue","seq","container","uniformObject","path","activeInfo","pathLength","$bd91b0f0455505fd987424dc38ef63e3$export$NearestMipMapNearestFilter","$bd91b0f0455505fd987424dc38ef63e3$var$UniformContainer","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLUniforms","upload","seqWithValue","directionDistance","distanceSqToPoint","segDir","segExtent","distanceSqToSegment","a01","s0","tmin","sqrDist","b0","extDet","optionalPointOnRay","optionalPointOnSegment","intersectSphere","tca","d2","radius2","thc","distanceToPlane","intersectPlane","wireframeLinecap","distToPoint","invdirx","tmax","invdiry","tymin","tymax","invdirz","tzmin","tzmax","intersectBox","intersectTriangle","edge1","edge2","backfaceCulling","DdN","denom","getUV","dot02","dot01","dot00","$bd91b0f0455505fd987424dc38ef63e3$export$Triangle","uv3","getBarycoord","barycoord","setFromPointsAndIndices","getArea","setFromCoplanarPoints","vab","vbp","vcp","d4","d3","vc","d5","d6","vb","$bd91b0f0455505fd987424dc38ef63e3$export$MultiplyOperation","skinning","$bd91b0f0455505fd987424dc38ef63e3$export$MeshBasicMaterial","refractionRatio","drawMode","$bd91b0f0455505fd987424dc38ef63e3$export$Mesh","morphTargetDictionary","ml","inverseMatrix","ray","tempB","tempC","uvA","uvC","intersectionPoint","intersect","$bd91b0f0455505fd987424dc38ef63e3$export$BackSide","intersectionPointWorld","raycaster","checkIntersection","groupMaterial","end","faceMaterial","fvA","fvB","fvC","vA","uvs_f","uvB","clearAlpha","currentBackgroundVersion","renderList","currentBackground","forceClear","result","clear","setClear","getClearColor","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","maxTextures","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatVertexTextures","numGlobalPlanes","updateMorphTargets","init","numIntersection","globalState","beginShadows","endShadows","nGlobal","numPlanes","nPlanes","skipTransform","flatSize","viewMatrix","$bd91b0f0455505fd987424dc38ef63e3$export$CustomBlending","getExtension","intersects","_bufferGeometry","memory","getWireframeAttribute","drawElements","getUniformLocation","$bd91b0f0455505fd987424dc38ef63e3$var$parseUniform","$bd91b0f0455505fd987424dc38ef63e3$export$ReinhardToneMapping","toneMappingName","$bd91b0f0455505fd987424dc38ef63e3$export$ACESFilmicToneMapping","toneMapping","chunks","join","numClippingPlanes","pattern","include","replace","$bd91b0f0455505fd987424dc38ef63e3$var$setValue1f","unroll","shadowMapTypeDefine","shadowMapType","$bd91b0f0455505fd987424dc38ef63e3$export$PCFShadowMap","envMapTypeDefine","envMapModeDefine","$bd91b0f0455505fd987424dc38ef63e3$export$CubeReflectionMapping","$bd91b0f0455505fd987424dc38ef63e3$export$CubeUVReflectionMapping","$bd91b0f0455505fd987424dc38ef63e3$export$CubeUVRefractionMapping","$bd91b0f0455505fd987424dc38ef63e3$export$EquirectangularRefractionMapping","$bd91b0f0455505fd987424dc38ef63e3$export$SphericalReflectionMapping","envMapBlendingDefine","$bd91b0f0455505fd987424dc38ef63e3$export$MixOperation","$bd91b0f0455505fd987424dc38ef63e3$export$AddOperation","gammaFactorDefine","isRawShaderMaterial","prefixVertex","prefixFragment","customExtensions","customDefines","$bd91b0f0455505fd987424dc38ef63e3$var$replaceLightNums","$bd91b0f0455505fd987424dc38ef63e3$var$replaceClippingPlaneNums","$bd91b0f0455505fd987424dc38ef63e3$var$parseIncludes","$bd91b0f0455505fd987424dc38ef63e3$var$unrollLoops","isGLSL3ShaderMaterial","isShaderMaterial","vertexGlsl","fragmentGlsl","glFragmentShader","attachShader","glVertexShader","index0AttributeName","linkProgram","programLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","SpriteMaterial","parameterNames","uniform1iv","skeleton","nVertexUniforms","maxBones","$bd91b0f0455505fd987424dc38ef63e3$export$LinearEncoding","getParameters","currentRenderTarget","shaderID","supportsVertexTextures","mapEncoding","matcapEncoding","envMapMode","envMapEncoding","getTextureEncodingFromMap","objectSpaceNormalMap","code","usedTimes","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","sizeAttenuation","useVertexTexture","maxMorphTargets","maxMorphNormals","numDirLights","numPointLights","numSpotLights","numRectAreaLights","numHemiLights","numClipIntersection","shadowMapEnabled","physicallyCorrectLights","doubleSided","flipSided","depthPacking","getProgramCode","programInfo","gammaOutput","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLProgram","$bd91b0f0455505fd987424dc38ef63e3$var$RePathPart","WeakMap","next","getProgramParameter","renderItem","renderItems","renderItemsIndex","opaque","$bd91b0f0455505fd987424dc38ef63e3$var$getEncodingComponents","getNextRenderItem","PI","unshift","lists","functionName","shadowCameraFar","decay","groundColor","halfWidth","halfHeight","light","$bd91b0f0455505fd987424dc38ef63e3$var$count","$bd91b0f0455505fd987424dc38ef63e3$var$UniformsCache","stateID","$bd91b0f0455505fd987424dc38ef63e3$export$NearestMipMapLinearFilter","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","directional","directionalShadowMap","spot","rectArea","vector3","matrix42","$bd91b0f0455505fd987424dc38ef63e3$export$EquirectangularReflectionMapping","isDirectionalLight","bias","mapSize","list","cameras","isSpotLight","intensity","penumbraCos","spotShadowMatrix","isRectAreaLight","trim","lightsArray","shadowsArray","$bd91b0f0455505fd987424dc38ef63e3$var$programIdCount","setupLights","pushLight","pushShadow","MeshPhongMaterial","renderStates","MeshStandardMaterial","renderState","$bd91b0f0455505fd987424dc38ef63e3$export$BasicDepthPacking","isSkinnedMesh","allocateBones","displacementBias","$bd91b0f0455505fd987424dc38ef63e3$export$MeshDistanceMaterial","$bd91b0f0455505fd987424dc38ef63e3$export$MeshDepthMaterial","envMapCubeUV","gammaInput","hemi","nClipPlanes","nClipIntersection","shadowMap","shadows","shadowSide","$bd91b0f0455505fd987424dc38ef63e3$export$DoubleSide","cubeDirections","cubeUps","_NumberOfMaterialVariants","useMorphing","_MorphingFlag","useSkinning","_SkinningFlag","depthMaterial","_depthMaterials","distanceMaterial","autoUpdate","_renderer","isPointLight","_shadowMapSize","vpWidth","vpHeight","shadowCamera","updateProjectionMatrix","isSpotLightShadow","_lightPositionWorld","faceCount","_lookTarget","setRenderTarget","cube2DViewPorts","vpDimensions","_frustum","materialVariants","_distanceMaterials","customMaterial","materialsForVariant","variantIndex","cachedMaterial","renderBufferDirect","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","setTest","setFunc","currentDepthFunc","$bd91b0f0455505fd987424dc38ef63e3$export$NeverDepth","$bd91b0f0455505fd987424dc38ef63e3$export$EqualDepth","$bd91b0f0455505fd987424dc38ef63e3$export$GreaterEqualDepth","$bd91b0f0455505fd987424dc38ef63e3$export$GreaterDepth","$bd91b0f0455505fd987424dc38ef63e3$export$NotEqualDepth","currentDepthClear","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","disable","penumbra","stencilMask","stencilFunc","stencilRef","stencilFail","stencilOp","stencilZFail","stencilZPass","stencil","colorBuffer","ColorBuffer","DepthBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentBoundTextures","bindTexture","texParameteri","$bd91b0f0455505fd987424dc38ef63e3$export$CullFaceBack","setBlending","$bd91b0f0455505fd987424dc38ef63e3$export$NoBlending","enableAttributeAndDivisor","emptyTextures","enableVertexAttribArray","meshPerAttribute","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLRenderState","disableVertexAttribArray","currentBlendSrcAlpha","currentBlendDstAlpha","blendEquationSeparate","setPolygonOffset","frontFace","cullFace","getCompressedTextureFormats","useProgram","setMaterial","setScissorTest","setFlipSided","setCullFace","setLineWidth","activeTexture","compressedTexImage2D","texImage2D","texImage3D","_videoTextures","_canvas","document","createElementNS","getContext","HTMLImageElement","generateMipmap","textureProperties","glFormat","glType","getDepthMaterial","units","webglSlot","currentTextureSlot","boundTexture","webglType","apply","pars","currentScissor","initAttributes","disableUnusedAttributes","textureType","deallocateTexture","isVideoTexture","deallocateRenderTarget","renderTarget","_gl","deleteTexture","__webglTexture","isDataTexture3D","deleteFramebuffer","renderTargetProperties","depthMask","complete","uploadTexture","$bd91b0f0455505fd987424dc38ef63e3$export$NoToneMapping","$bd91b0f0455505fd987424dc38ef63e3$export$LinearToneMapping","$bd91b0f0455505fd987424dc38ef63e3$export$CineonToneMapping","__image__webglTextureCube","isCompressed","cubeImage","clampToMaxSize","setTextureParameters","textureNeedsGenerateMipmaps","__version","slot","isPowerOfTwoImage","__webglInit","makePowerOfTwo","isDepthTexture","glInternalFormat","convert","utils","__maxMipLevel","mipmap","textureTarget","bindFramebuffer","framebufferTexture2D","$bd91b0f0455505fd987424dc38ef63e3$export$OneMinusSrcAlphaFactor","setupFrameBufferTexture","blendSrc","webglTexture","isCube","isWebGLRenderTargetCube","setupDepthTexture","setupRenderBufferStorage","$bd91b0f0455505fd987424dc38ef63e3$export$OneMinusSrcColorFactor","__webglDepthbuffer","addEventListener","onRenderTargetDispose","isTargetPowerOfTwo","__webglFramebuffer","setTextureCube","setTextureCubeDynamic","setupRenderTarget","updateRenderTargetMipmap","$bd91b0f0455505fd987424dc38ef63e3$export$LinearFilter","$bd91b0f0455505fd987424dc38ef63e3$export$LinearMipMapNearestFilter","$bd91b0f0455505fd987424dc38ef63e3$export$UnsignedByteType","$bd91b0f0455505fd987424dc38ef63e3$export$ByteType","$bd91b0f0455505fd987424dc38ef63e3$export$LuminanceFormat","$bd91b0f0455505fd987424dc38ef63e3$export$LuminanceAlphaFormat","$bd91b0f0455505fd987424dc38ef63e3$export$AddEquation","$bd91b0f0455505fd987424dc38ef63e3$export$DstColorFactor","$bd91b0f0455505fd987424dc38ef63e3$export$OneMinusDstColorFactor","$bd91b0f0455505fd987424dc38ef63e3$export$SrcAlphaSaturateFactor","$bd91b0f0455505fd987424dc38ef63e3$export$RGB_S3TC_DXT1_Format","matrixWorldInverse","projectionMatrixInverse","renderbuffer","bindRenderbuffer","renderbufferStorage","framebufferRenderbuffer","formats","frontFaceCW","$bd91b0f0455505fd987424dc38ef63e3$export$ZeroFactor","$bd91b0f0455505fd987424dc38ef63e3$export$SrcAlphaFactor","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_S3TC_DXT3_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_PVRTC_4BPPV1_Format","$bd91b0f0455505fd987424dc38ef63e3$export$MaxEquation","$bd91b0f0455505fd987424dc38ef63e3$export$Camera","isGroup","isCamera","focus","aspect","$bd91b0f0455505fd987424dc38ef63e3$export$PerspectiveCamera","fov","zoom","view","filmGauge","getFocalLength","tan","getFilmWidth","getFilmHeight","setViewOffset","fullWidth","setFrameOfReferenceType","frameOfReferenceType","session","updateVideoTexture","fullHeight","offsetX","offsetY","far2","left2","right2","ipd","xOffset","top2","near2","bottom2","bottomFov","frameData","filterFallback","poseTarget","controllers","standingMatrix","VRFrameData","tempQuaternion","cameraL","cameraR","bounds","isPresenting","currentSize","currentPixelRatio","eyeParameters","device","renderWidth","framebufferScaleFactor","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","gamepads","navigator","getGamepads","gamepad","controller","findGamepad","orientation","buttons","buttonId","getController","$bd91b0f0455505fd987424dc38ef63e3$export$Group","setDevice","setPoseTarget","getCamera","userHeight","getFrameData","stageParameters","pose","poseObject","attachment","tempPosition","updateControllers","cameraVR","getStandingMatrix","standingMatrixInverse","$bd91b0f0455505fd987424dc38ef63e3$var$setProjectionFromUnion","getLayers","layer","$bd91b0f0455505fd987424dc38ef63e3$export$DepthStencilFormat","leftBounds","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLAnimation","submitFrame","createRenderbuffer","onVRDisplayPresentChange","clearViewOffset","skew","isDataTexture","filmOffset","$bd91b0f0455505fd987424dc38ef63e3$export$ArrayCamera","$bd91b0f0455505fd987424dc38ef63e3$export$RGBFormat","$bd91b0f0455505fd987424dc38ef63e3$var$cameraLPos","projR","projL","leftFov","rightFov","translateZ","zOffset","createTexture","frameOfReference","inputSources","getDevice","setFramebuffer","setFramebufferScaleFactor","getInputSources","$bd91b0f0455505fd987424dc38ef63e3$export$LinearMipMapLinearFilter","$bd91b0f0455505fd987424dc38ef63e3$export$AlphaFormat","updateCamera","$bd91b0f0455505fd987424dc38ef63e3$export$RGB_PVRTC_2BPPV1_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_ASTC_5x4_Format","$bd91b0f0455505fd987424dc38ef63e3$export$OneMinusDstAlphaFactor","$bd91b0f0455505fd987424dc38ef63e3$export$AlwaysDepth","baseLayer","views","COMPRESSED_RGB_S3TC_DXT1_EXT","inputSource","inputPose","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","transformMatrix","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_ASTC_10x8_Format","COMPRESSED_RGB_ETC1_WEBGL","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_ASTC_10x10_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_ASTC_12x10_Format","$bd91b0f0455505fd987424dc38ef63e3$export$RGBA_ASTC_12x12_Format","onAnimationFrameCallback","MIN_EXT","Matrix4","autoClearColor","toneMappingExposure","programCache","morphtargets","bufferRenderer","indexedBufferRenderer","programAttributes","getAttributes","hasPositions","blendFuncSeparate","$bd91b0f0455505fd987424dc38ef63e3$export$AdditiveBlending","blendFunc","_currentCamera","_currentRenderTarget","contextAttributes","_stencil","_antialias","antialias","preserveDrawingBuffer","$bd91b0f0455505fd987424dc38ef63e3$export$WebGLUtils","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLState","_currentScissor","_currentViewport","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLProperties","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLTextures","focalLength","atan","vExtentSlope","vr","getContextAttributes","loseContext","forceContextRestore","restoreContext","bits","clearStencil","renderLists","preventDefault","log","_isContextLost","initGLContext","deallocateMaterial","releaseMaterialProgramReference","releaseProgram","_this","renderBufferImmediate","vertexAttribPointer","$bd91b0f0455505fd987424dc38ef63e3$export$WireframeGeometry","binormals","hasUvs","$bd91b0f0455505fd987424dc38ef63e3$var$cameraRPos","setProgram","updateBuffers","_currentGeometryProgram","rangeFactor","dataCount","rangeCount","drawCount","$bd91b0f0455505fd987424dc38ef63e3$export$TrianglesDrawMode","isLine","lineWidth","isLineSegments","isInstancedBufferGeometry","enableAttribute","vertexAttrib2fv","currentRenderState","isLight","initMaterial","time","_currentMaterialId","_localClippingEnabled","_clippingEnabled","_clipping","currentRenderList","sortObjects","rightBounds","sort","materialDefaultAttributeValues","defaultAttributeValues","programAttribute","geometryAttribute","opaqueObjects","overrideMaterial","transparentObjects","onAfterRender","isSprite","renderObject","_currentArrayCamera","_vector3","projectObject","isArrayCamera","_width","_height","isImmediateRenderObject","renderObjectImmediate","lightsStateHash","lightsHash","materialProperties","programChange","shader","onBeforeCompile","$bd91b0f0455505fd987424dc38ef63e3$export$FrontFaceDirectionCCW","_usedTextureUnits","_currentScissorTest","refreshProgram","refreshMaterial","refreshLights","p_uniforms","uCamPos","isMeshPhongMaterial","setOptional","bones","boneTexture","boneMatrices","boneTextureSize","m_uniforms","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","refreshUniformsPhong","isMeshStandardMaterial","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsNormal","refreshUniformsDash","refreshUniformsSprites","ltc_2","isSpriteMaterial","pixelRatio","uvScaleMap","bumpMap","hasNormals","isFog","isFogExp2","density","roughness","textureUnit","warned","setTexture3D","stride","setTexture","vertexAttrib3fv","_framebuffer","drawStart","rangeStart","$bd91b0f0455505fd987424dc38ef63e3$export$TangentSpaceNormalMap","framebuffer","$bd91b0f0455505fd987424dc38ef63e3$export$Fog","intersectsObject","$bd91b0f0455505fd987424dc38ef63e3$export$Scene","$bd91b0f0455505fd987424dc38ef63e3$export$InterleavedBuffer","isInterleavedBuffer","camera2","onUpload","interleavedBuffer","$bd91b0f0455505fd987424dc38ef63e3$export$InterleavedBufferAttribute","numSupportedMorphNormals","$bd91b0f0455505fd987424dc38ef63e3$export$SpriteMaterial","$bd91b0f0455505fd987424dc38ef63e3$var$geometry","float32Array","$bd91b0f0455505fd987424dc38ef63e3$export$Sprite","intersectPoint","mvPosition","worldScale","alignedPosition","vertexPosition","rotatedPosition","setFromMatrixScale","cameraPosition","isMeshLambertMaterial","isMeshBasicMaterial","levels","bone","boneInverses","getObjectForDistance","linejoin","matrixPosition","$bd91b0f0455505fd987424dc38ef63e3$export$Line","computeLineDistances","positionAttribute","calculateInverses","inverse","level","bindMode","bindMatrix","$bd91b0f0455505fd987424dc38ef63e3$export$SkinnedMesh","bind","bindMatrixInverse","normalizeSkinWeights","skinWeight","offsetMatrix","getBoneByName","$bd91b0f0455505fd987424dc38ef63e3$export$Bone","isBone","normalScale","linecap","$bd91b0f0455505fd987424dc38ef63e3$export$LineBasicMaterial","_currentFramebuffer","checkFramebufferStatus","restore","copyFramebufferToTexture","copyTexImage2D","srcTexture","dstTexture","texSubImage2D","$bd91b0f0455505fd987424dc38ef63e3$export$FogExp2","interSegment","interRay","vEnd","distSq","$bd91b0f0455505fd987424dc38ef63e3$export$LineSegments","_viewport","_pixelRatio","$bd91b0f0455505fd987424dc38ef63e3$export$LineLoop","$bd91b0f0455505fd987424dc38ef63e3$export$PointsMaterial","threshold","edges","slices","stacks","$bd91b0f0455505fd987424dc38ef63e3$export$PolyhedronGeometry","uvBuffer","detail","$bd91b0f0455505fd987424dc38ef63e3$export$TetrahedronGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$PolyhedronBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$DodecahedronGeometry","tubularSegments","radialSegments","closed","arc","$bd91b0f0455505fd987424dc38ef63e3$export$TorusBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$var$Earcut","triangulate","video","$bd91b0f0455505fd987424dc38ef63e3$var$splitEarcut","ear","dim","invSize","prevZ","$bd91b0f0455505fd987424dc38ef63e3$var$equals","$bd91b0f0455505fd987424dc38ef63e3$var$intersects","prev","$bd91b0f0455505fd987424dc38ef63e3$var$isValidDiagonal","$bd91b0f0455505fd987424dc38ef63e3$var$splitPolygon","queue","$bd91b0f0455505fd987424dc38ef63e3$var$eliminateHole","$bd91b0f0455505fd987424dc38ef63e3$var$filterPoints","$bd91b0f0455505fd987424dc38ef63e3$var$compareX","outerNode","$bd91b0f0455505fd987424dc38ef63e3$var$findHoleBridge","hx","hole","hy","nextZ","$bd91b0f0455505fd987424dc38ef63e3$var$sortLinked","edge","qSize","inSize","pSize","tail","func","leftmost","inside","py","$bd91b0f0455505fd987424dc38ef63e3$var$Node","an","last","sliceCount","sum","$bd91b0f0455505fd987424dc38ef63e3$export$ShapeUtils","contour","triangulateShape","$bd91b0f0455505fd987424dc38ef63e3$var$addContour","forEach","$bd91b0f0455505fd987424dc38ef63e3$var$removeDupEndPts","holeIndex","holes","aj","$bd91b0f0455505fd987424dc38ef63e3$export$ExtrudeGeometry","shapePoints","reverse","collinear0","EPSILON","v_next_len","ptPrevShift_y","v_prev_x","inPrev","ptNextShift_x","v_next_y","v_trans_y","shrink_by","v_trans_lensq","verticesArray","uvArray","vertexBuffer","addShape","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","ahole","concat","pt","vec","vert","vlen","v_next_x","inNext","splineTube","binormal","position2","extrudePts","extrudeByPath","v_prev_y","oneHoleMovements","verticesMovements","scalePt2","contourMovements","bs","buildSideFaces","f3","taper","sidewalls","layeroffset","bufferGeometry","placeholder","addVertex","nextIndex","uvgen","addUV","frames","tangents","generateTopUV","a_y","indexA","b_x","indexB","c_x","c_y","a_x","B","a_z","indexC","c_z","indexD","generateSegment","vector2","$bd91b0f0455505fd987424dc38ef63e3$export$ExtrudeBufferGeometry","text","$bd91b0f0455505fd987424dc38ef63e3$export$TextBufferGeometry","font","generateShapes","tube","phiStart","phiLength","thetaStart","thetaLength","$bd91b0f0455505fd987424dc38ef63e3$export$SphereBufferGeometry","P1","T","thetaEnd","grid","quOverP","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","segment","thetaSegmentLevel","$bd91b0f0455505fd987424dc38ef63e3$export$RingBufferGeometry","segments","$bd91b0f0455505fd987424dc38ef63e3$export$Points","localThresholdSq","localThreshold","testPoint","$bd91b0f0455505fd987424dc38ef63e3$export$VideoTexture","readyState","$bd91b0f0455505fd987424dc38ef63e3$export$CompressedTexture","$bd91b0f0455505fd987424dc38ef63e3$export$CanvasTexture","$bd91b0f0455505fd987424dc38ef63e3$export$DepthTexture","o","$bd91b0f0455505fd987424dc38ef63e3$export$ParametricGeometry","transformVertex","pu","pv","$bd91b0f0455505fd987424dc38ef63e3$export$ParametricBufferGeometry","getVertexByIndex","cols","bj","rows","pushVertex","centroid","azi","correctUV","azimuth","$bd91b0f0455505fd987424dc38ef63e3$export$TetrahedronBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$OctahedronGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$OctahedronBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$IcosahedronGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$IcosahedronBufferGeometry","identityMatrix","isLineBasicMaterial","$bd91b0f0455505fd987424dc38ef63e3$export$TubeBufferGeometry","P","generateBufferData","generateIndices","N","heightScale","$bd91b0f0455505fd987424dc38ef63e3$export$TorusKnotGeometry","localPrecisionSq","P2","calculatePositionOnCurve","cx","cu","su","cs","$bd91b0f0455505fd987424dc38ef63e3$export$TorusKnotBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$TorusGeometry","isPointsMaterial","hasHoles","$bd91b0f0455505fd987424dc38ef63e3$var$earcutLinked","clockwise","$bd91b0f0455505fd987424dc38ef63e3$var$signedArea","again","$bd91b0f0455505fd987424dc38ef63e3$var$removeNode","$bd91b0f0455505fd987424dc38ef63e3$var$insertNode","$bd91b0f0455505fd987424dc38ef63e3$var$area","$bd91b0f0455505fd987424dc38ef63e3$var$pointInTriangle","$bd91b0f0455505fd987424dc38ef63e3$var$intersectsPolygon","direction_eq","v_trans_x","$bd91b0f0455505fd987424dc38ef63e3$export$TubeGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$TextGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$RingGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$LatheGeometry","holeIndices","base","$bd91b0f0455505fd987424dc38ef63e3$export$ConeBufferGeometry","n1","$bd91b0f0455505fd987424dc38ef63e3$var$zOrder","radiusTop","radiusBottom","$bd91b0f0455505fd987424dc38ef63e3$export$CylinderBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$CylinderGeometry","numMerges","openEnded","$bd91b0f0455505fd987424dc38ef63e3$export$LatheBufferGeometry","curveSegments","$bd91b0f0455505fd987424dc38ef63e3$var$toJSON$1","indexOffset","shapeHoles","shapeHole","shapeVertices","$bd91b0f0455505fd987424dc38ef63e3$export$ShapeBufferGeometry","thresholdAngle","face1","face2","sourceVertices","$bd91b0f0455505fd987424dc38ef63e3$export$EdgesGeometry","indexRow","sinTheta","cosTheta","q2","$bd91b0f0455505fd987424dc38ef63e3$export$ConeGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$CircleGeometry","isClockWise","pts","SphereBufferGeometry","RingGeometry","RingBufferGeometry","PlaneGeometry","PlaneBufferGeometry","LatheGeometry","ShapeGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$ShapeGeometry","ShapeBufferGeometry","BoxBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$RawShaderMaterial","inPt","normalMapType","v_prev_lensq","v_prev_len","ptPrevShift_x","$bd91b0f0455505fd987424dc38ef63e3$export$MeshStandardMaterial","sf","holesMovements","getBevelVec","$bd91b0f0455505fd987424dc38ef63e3$export$MeshPhysicalMaterial","hl","specular","f4","$bd91b0f0455505fd987424dc38ef63e3$export$MeshToonMaterial","$bd91b0f0455505fd987424dc38ef63e3$export$MeshPhongMaterial","buildLidFaces","$bd91b0f0455505fd987424dc38ef63e3$export$ShadowMaterial","ConeBufferGeometry","CircleGeometry","CylinderGeometry","CylinderBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$var$WorldUVGenerator","$bd91b0f0455505fd987424dc38ef63e3$export$MeshNormalMaterial","$bd91b0f0455505fd987424dc38ef63e3$export$MeshLambertMaterial","verticesRow","$bd91b0f0455505fd987424dc38ef63e3$export$MeshMatcapMaterial","$bd91b0f0455505fd987424dc38ef63e3$export$LineDashedMaterial","RawShaderMaterial","ShaderMaterial","PointsMaterial","MeshToonMaterial","$bd91b0f0455505fd987424dc38ef63e3$var$Materials","$bd91b0f0455505fd987424dc38ef63e3$export$AnimationUtils","isTypedArray","ArrayBuffer","isView","times","compareTime","jsonKeys","parameterPositions","_cachedIndex","resultBuffer","valueSize","sampleSize","validate_interval","seek","t0","t1","pp","i1","linear_scan","t1global","settings","getSettings_","copySampleValue_","intervalChanged_","_weightPrev","_offsetNext","$bd91b0f0455505fd987424dc38ef63e3$export$CubicInterpolant","iPrev","endingStart","tPrev","$bd91b0f0455505fd987424dc38ef63e3$export$WrapAroundEnding","tNext","$bd91b0f0455505fd987424dc38ef63e3$export$ZeroSlopeEnding","halfDt","_weightNext","_offsetPrev","iNext","$bd91b0f0455505fd987424dc38ef63e3$export$Interpolant","$bd91b0f0455505fd987424dc38ef63e3$export$LinearInterpolant","interpolate_","$bd91b0f0455505fd987424dc38ef63e3$export$DiscreteInterpolant","setInterpolation","trackType","json","track","$bd91b0f0455505fd987424dc38ef63e3$export$KeyframeTrack","TimeBufferType","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","interpolation","$bd91b0f0455505fd987424dc38ef63e3$export$InterpolateDiscrete","factoryMethod","$bd91b0f0455505fd987424dc38ef63e3$export$InterpolateLinear","$bd91b0f0455505fd987424dc38ef63e3$export$InterpolateSmooth","message","createInterpolant","getInterpolation","prevTime","currTime","valid","smoothInterpolation","writeIndex","timeScale","from","nKeys","to","getValueSize","indexArray","generateCap","timeOffset","$bd91b0f0455505fd987424dc38ef63e3$export$BooleanKeyframeTrack","ValueTypeName","$bd91b0f0455505fd987424dc38ef63e3$export$ColorKeyframeTrack","$bd91b0f0455505fd987424dc38ef63e3$export$NumberKeyframeTrack","$bd91b0f0455505fd987424dc38ef63e3$export$CircleBufferGeometry","sampleValues","$bd91b0f0455505fd987424dc38ef63e3$export$QuaternionKeyframeTrack","$bd91b0f0455505fd987424dc38ef63e3$export$StringKeyframeTrack","nValues","valuePropertyName","giveUpAt","$bd91b0f0455505fd987424dc38ef63e3$export$QuaternionLinearInterpolant","$bd91b0f0455505fd987424dc38ef63e3$export$VectorKeyframeTrack","TorusKnotGeometry","TorusKnotBufferGeometry","tracks","TorusGeometry","duration","TorusBufferGeometry","resetDuration","toLowerCase","$bd91b0f0455505fd987424dc38ef63e3$var$parseKeyframeTrack","animationMorphTargets","animationToMorphTargets","clips","$bd91b0f0455505fd987424dc38ef63e3$export$AnimationClip","addNonemptyTrack","flattenJSON","animationKeys","clipName","fps","hierarchyTracks","optimize","urlModifier","transform","$bd91b0f0455505fd987424dc38ef63e3$var$loading","manager","$bd91b0f0455505fd987424dc38ef63e3$export$FileLoader","load","onError","$bd91b0f0455505fd987424dc38ef63e3$export$Cache","itemStart","setTimeout","cached","itemEnd","onLoad","onProgress","dataUriRegexResult","request","callbacks","itemError","responseType","header","setRequestHeader","send","$bd91b0f0455505fd987424dc38ef63e3$export$CompressedTextureLoader","loader","setResponseType","texDatas","mipmapCount","texData","clip","animationKey","morphTargetNames","files","file","response","charCodeAt","Blob","mimeType","parser","DOMParser","setWithCredentials","withCredentials","setMimeType","_parser","isCubemap","setPath","$bd91b0f0455505fd987424dc38ef63e3$export$ImageLoader","crossOrigin","resolveURL","isLineDashedMaterial","$bd91b0f0455505fd987424dc38ef63e3$export$CubeTextureLoader","urls","setCrossOrigin","loadTexture","forceClone","DataView","arcLengthDivisions","divisions","cacheArcLengths","fromJSON","aEndAngle","aClockwise","$bd91b0f0455505fd987424dc38ef63e3$export$ArcCurve","$bd91b0f0455505fd987424dc38ef63e3$export$EllipseCurve","c0","$bd91b0f0455505fd987424dc38ef63e3$export$LineCurve","isLineCurve","getPoint","optionalTarget","tangent","$bd91b0f0455505fd987424dc38ef63e3$export$Curve","$bd91b0f0455505fd987424dc38ef63e3$export$QuadraticBezierCurve","typeName","$bd91b0f0455505fd987424dc38ef63e3$export$QuadraticBezierCurve3","$bd91b0f0455505fd987424dc38ef63e3$export$SplineCurve","current","updateArcLengths","forward_scan","getLengths","arcLengths","targetArcLength","comparison","lengthAfter","t2","mat","MAX_VALUE","tz","afterEnd_","acos","$bd91b0f0455505fd987424dc38ef63e3$export$ZeroCurvatureEnding","endingEnd","aX","xRadius","yRadius","aStartAngle","twoPi","deltaAngle","samePoints","aY","isArcCurve","initCatmullRom","tension","dt1","$bd91b0f0455505fd987424dc38ef63e3$export$CatmullRomCurve3","intPoint","weight","$bd91b0f0455505fd987424dc38ef63e3$var$tmp","dt0","dt2","$bd91b0f0455505fd987424dc38ef63e3$var$px","$bd91b0f0455505fd987424dc38ef63e3$var$py","$bd91b0f0455505fd987424dc38ef63e3$var$pz","$bd91b0f0455505fd987424dc38ef63e3$var$QuadraticBezierP0","$bd91b0f0455505fd987424dc38ef63e3$var$CubicBezierP0","v3","$bd91b0f0455505fd987424dc38ef63e3$var$CubicBezier","$bd91b0f0455505fd987424dc38ef63e3$export$CubicBezierCurve","$bd91b0f0455505fd987424dc38ef63e3$export$CubicBezierCurve3","$bd91b0f0455505fd987424dc38ef63e3$export$LineCurve3","$bd91b0f0455505fd987424dc38ef63e3$var$CatmullRom","noLoop","numMorphTargets","ArcCurve","CubicBezierCurve","CubicBezierCurve3","EllipseCurve","LineCurve","LineCurve3","QuadraticBezierCurve3","SplineCurve","$bd91b0f0455505fd987424dc38ef63e3$export$CurvePath","parts","curve","curves","endPoint","getLength","segmentLength","lens","getCurveLengths","cacheLengths","sums","lengths","getSpacedPoints","getPoints","morphTargetName","resolution","autoClose","boneName","$bd91b0f0455505fd987424dc38ef63e3$var$Curves","$bd91b0f0455505fd987424dc38ef63e3$export$Path","currentPoint","lineTo","bezierCurveTo","isLoading","itemsLoaded","splineThru","onStart","absarc","ellipse","absellipse","firstPoint","lastPoint","$bd91b0f0455505fd987424dc38ef63e3$export$LoadingManager","cy","zoomW","$bd91b0f0455505fd987424dc38ef63e3$var$Geometries","geometryShapes","parseImages","aRadius","$bd91b0f0455505fd987424dc38ef63e3$export$Shape","getPointsHoles","holesPts","parseFromString","$bd91b0f0455505fd987424dc38ef63e3$export$Light","XMLHttpRequest","$bd91b0f0455505fd987424dc38ef63e3$export$HemisphereLight","$bd91b0f0455505fd987424dc38ef63e3$export$LightShadow","$bd91b0f0455505fd987424dc38ef63e3$export$SpotLightShadow","overrideMimeType","power","$bd91b0f0455505fd987424dc38ef63e3$export$SpotLight","animations","$bd91b0f0455505fd987424dc38ef63e3$export$PointLight","$bd91b0f0455505fd987424dc38ef63e3$export$OrthographicCamera","isOrthographicCamera","loaded","scaleW","scaleH","zoomH","$bd91b0f0455505fd987424dc38ef63e3$export$DirectionalLightShadow","$bd91b0f0455505fd987424dc38ef63e3$export$AmbientLight","isAmbientLight","$bd91b0f0455505fd987424dc38ef63e3$export$RectAreaLight","onImageError","getTexture","setTextures","$bd91b0f0455505fd987424dc38ef63e3$export$LoaderUtils","decodeText","TextDecoder","decode","extractUrlBase","lastIndexOf","getPointAt","typedArray","$bd91b0f0455505fd987424dc38ef63e3$var$TYPED_ARRAYS","Int8Array","Float64Array","getUtoTmapping","resourcePath","parseShape","parseGeometries","bufferGeometryLoader","geometryLoader","$bd91b0f0455505fd987424dc38ef63e3$export$MaterialLoader","parseAnimations","$bd91b0f0455505fd987424dc38ef63e3$var$TEXTURE_WRAPPING","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","imageBitmap","catch","tmpPath","tmpShape","subPaths","noHoles","solid","newShapes","tmpHoles","parseObject","curveType","$bd91b0f0455505fd987424dc38ef63e3$export$DirectionalLight","getMaterial","UVMapping","$bd91b0f0455505fd987424dc38ef63e3$var$TEXTURE_MAPPING","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","NearestMipMapNearestFilter","ClampToEdgeWrapping","MirroredRepeatWrapping","$bd91b0f0455505fd987424dc38ef63e3$var$TEXTURE_FILTER","NearestFilter","isCubicBezierCurve3","$bd91b0f0455505fd987424dc38ef63e3$export$DefaultLoadingManager","$bd91b0f0455505fd987424dc38ef63e3$export$ImageBitmapLoader","setOptions","fetch","blob","then","$bd91b0f0455505fd987424dc38ef63e3$export$ShapePath","currentPath","moveTo","quadraticCurveTo","toShapes","inPolygon","polyLen","edgeHighPt","edgeLowPt","edgeDx","perpEdge","holesFirst","isCCW","betterShapeHoles","tmpPoints","mainIdx","newShapeHoles","toChange","sIdx","sho","hIdx","s2Idx","froms","hole_unassigned","ambiguous","$bd91b0f0455505fd987424dc38ef63e3$export$Font","isFont","paths","$bd91b0f0455505fd987424dc38ef63e3$var$createPaths","chars","char","line_height","glyph","cpx1","outline","mapRoughnessRepeat","$bd91b0f0455505fd987424dc38ef63e3$var$context","eyeSep","instance","cameraNY","cameraPZ","cameraNZ","$bd91b0f0455505fd987424dc38ef63e3$export$CubeCamera","startTime","running","newTime","performance","oldTime","elapsedTime","detune","playbackRate","isPlaying","hasPlaybackControl","setMediaElementSource","mediaElement","sourceType","play","cpx2","$bd91b0f0455505fd987424dc38ef63e3$export$FontLoader","substring","handlers","regex","$bd91b0f0455505fd987424dc38ef63e3$export$Loader","onLoadStart","onLoadProgress","initMaterials","createMaterial","NoBlending","NormalBlending","SubtractiveBlending","CustomBlending","textureLoader","$bd91b0f0455505fd987424dc38ef63e3$export$TextureLoader","materialLoader","texturePath","fullPath","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","mapAORepeat","mapAOOffset","aRotation","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","$bd91b0f0455505fd987424dc38ef63e3$export$AudioContext","decodeAudioData","bufferCopy","audioBuffer","isHemisphereLight","eyeSepOnProjection","ymax","xmin","xmax","cameraPX","cameraNX","up","getElapsedTime","autoStart","getInput","gain","connect","filter","timeDelta","$bd91b0f0455505fd987424dc38ef63e3$export$AudioListener","removeFilter","disconnect","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","clock","$bd91b0f0455505fd987424dc38ef63e3$export$Clock","getDelta","endTime","currentTime","linearRampToValueAtTime","positionZ","forwardY","forwardZ","setOrientation","filters","$bd91b0f0455505fd987424dc38ef63e3$export$Audio","setNodeSource","getOutput","onended","getFilters","setFilters","setDetune","getDetune","getFilter","setPlaybackRate","onEnded","shading","loop","setLoop","getVolume","createPanner","panner","$bd91b0f0455505fd987424dc38ef63e3$export$PositionalAudio","getRefDistance","refDistance","rolloffFactor","setRolloffFactor","coneOuterGain","positionX","positionY","orientationX","orientationY","analyser","audio","createAnalyser","fftSize","$bd91b0f0455505fd987424dc38ef63e3$export$AudioAnalyser","getFrequencyData","getByteFrequencyData","getAverageFrequency","binding","_slerp","mixFunction","cumulativeWeight","useCount","$bd91b0f0455505fd987424dc38ef63e3$export$PropertyMixer","currentWeight","mix","_mixBufferRegion","getValue","originalValueOffset","parseMaterials","srcOffset","parsedPath","optionalParsedPath","_targetGroup","_bindings","bindings","unbind","$bd91b0f0455505fd987424dc38ef63e3$export$PropertyBinding","rootNode","Composite","root","sanitizeNodeName","reservedRe","parseTrackName","wordCharOrDot","$bd91b0f0455505fd987424dc38ef63e3$var$RESERVED_CHARS_RE","trackRe","RegExp","directoryRe","nodeRe","objectRe","supportedObjectNames","matches","objectName","objectIndex","propertyName","lastDot","nodeName","results","findNode","searchNodeSubtree","childNode","subTreeNode","BindingType","EntireArray","Direct","ArrayElement","HasFromToArray","Versioning","NeedsUpdate","GetterByBindingType","loadImage","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","propertyIndex","sourceArray","_setValue_unavailable","parseConstant","nodeProperty","None","versioning","MatrixWorldNeedsUpdate","bindingType","_setValue_unbound","_objects","_indicesByUUID","_paths","$bd91b0f0455505fd987424dc38ef63e3$export$AnimationObjectGroup","isAnimationObjectGroup","indicesByUUID","lastCachedObject","bindingsForPath","pop","warp","mixer","_startTime","glyphs","timeRunning","_cachedOutline","split","deltaTime","timeDirection","clipTime","interpolants","_interpolants","propertyMixers","_updateWeight","interpolant","_weightInterpolant","interpolantValue","_effectiveWeight","nCachedObjects_","nCachedObjects","firstActiveObject","lastCachedIndex","firstActiveIndex","lastIndex","indicesByPath","parsedPaths","unsubscribe_","_localRoot","_mixer","localRoot","nTracks","interpolantSettings","_byClipCacheIndex","_effectiveTimeScale","toShapesNoHoles","repetitions","$bd91b0f0455505fd987424dc38ef63e3$var$AnimationAction","_activateAction","paused","_loopCount","stopFading","isRunning","_isActiveAction","fadeIn","fadeOut","ho","_scheduleFading","crossFadeFrom","fadeOutAction","fadeInDuration","startEndRatio","endStartRatio","stopWarping","setDuration","syncWith","_lendControlInterpolant","now","_timeScaleInterpolant","String","yMax","yMin","underlineThickness","getClip","_clip","_root","startTimeScale","endTimeScale","_updateTime","loopCount","pingPong","$bd91b0f0455505fd987424dc38ef63e3$export$LoopOnce","_setEndings","handle_stop","action","loopDelta","pending","atEnd","_interpolantSettings","zeroSlopeAtEnd","weightNow","_initMemoryManager","_accuIndex","$bd91b0f0455505fd987424dc38ef63e3$export$AnimationMixer","_bindAction","bindingsByName","bindingsByRoot","actionsForClip","knownActions","mapLightWrap","mapLightAnisotropy","_lendBinding","saveOriginalState","_lendAction","_deactivateAction","_propertyBindings","_takeBackBinding","_takeBackAction","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","_actions","_actionsByClip","_bindingsByRootAndName","stats","actions","total","inUse","controlInterpolants","_addInactiveAction","actionByRoot","actionsByClip","clipUuid","_cacheIndex","_removeInactiveAction","lastInactiveAction","cacheIndex","$bd91b0f0455505fd987424dc38ef63e3$export$MinEquation","lastKnownAction","knownActionsForClip","byClipCacheIndex","rootUuid","_removeInactiveBindingsForAction","_controlInterpolants","lastActiveIndex","lastActiveAction","prevIndex","cubeResolution","_update","accuIndex","cameraPY","actionsToRemove","bindingByName","trackName","restoreOriginalState","_removeInactiveBinding","existingAction","$bd91b0f0455505fd987424dc38ef63e3$export$Uniform","createGain","$bd91b0f0455505fd987424dc38ef63e3$var$intersectObject","_select","_lerp","$bd91b0f0455505fd987424dc38ef63e3$export$ImmediateRenderObject","objGeometry","nNormals","remove_empty_map","firstInactiveBinding","firstInactiveIndex","lastActiveBinding","__cacheIndex","_takeBackControlInterpolant","lastActiveInterpolant","_controlInterpolantsResultBuffer","newAction","prototypeAction","optionalRoot","eyeRight","$bd91b0f0455505fd987424dc38ef63e3$export$InstancedBufferGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$InstancedInterleavedBuffer","isInstancedInterleavedBuffer","$bd91b0f0455505fd987424dc38ef63e3$export$InstancedBufferAttribute","isInstancedBufferAttribute","params","PointCloud","Mesh","Line","LOD","destination","Sprite","Points","linePrecision","$bd91b0f0455505fd987424dc38ef63e3$export$Raycaster","setFromCamera","coords","isPerspectiveCamera","$bd91b0f0455505fd987424dc38ef63e3$export$Spherical","setFromCartesianCoords","createBufferSource","setValueAtTime","$bd91b0f0455505fd987424dc38ef63e3$export$Cylindrical","other","$bd91b0f0455505fd987424dc38ef63e3$export$Box2","union","distanceModel","setMaxDistance","distanceSq","startP","startEnd","startEnd_startP","startEnd2","clampToLine","$bd91b0f0455505fd987424dc38ef63e3$export$VertexNormalsHelper","objPos","objNorm","$bd91b0f0455505fd987424dc38ef63e3$export$SpotLightHelper","matrixWorldInv","cone","boneList","$bd91b0f0455505fd987424dc38ef63e3$var$getBoneList","$bd91b0f0455505fd987424dc38ef63e3$export$BoxHelper","$bd91b0f0455505fd987424dc38ef63e3$export$Box3Helper","isIntersectionBox","shadowMapWidth","copyIndicesArray","clearDrawCalls","computeTangents","computeOffsets","wrapAround","unprojectVector","pickingRay","$bd91b0f0455505fd987424dc38ef63e3$export$SceneUtils","createMultiMaterialObject","attach","_gsDefine","globals","_baseParams","Ease","_func","_type","_power","_params","extraParams","_easeMap","_easeReg","names","color2","na","_class","ta","_calcEnd","getRatio","EventDispatcher","priority","_ticker","_tickerActive","wake","_eventTarget","dispatch","_self","_lagThreshold","_tinyNum","_adjustedLag","_fps","_gap","_nextTime","useRAF","_useRAF","sleep","Ticker","gs","events","_reversed","reversed","_rootTimeline","tl","Animation","ticker","_dirty","_gc","_totalTime","_time","_rawPrevTime","_next","_last","_onUpdate","_paused","_checkTimeout","unref","suppressEvents","pause","atTime","resume","timeline","isActive","_timeline","_enabled","vars","totalDuration","totalTime","uncapped","_lazyRender","progress","totalProgress","colorFrustum","colorCross","_lazyTweens","pointMap","raw","tween","_timeScale","rawTime","isSelector","overwrite","_overwrite","_siblings","_targets","targets","_slice","targ","TweenLite","_firstPT","_overwrittenProps","_startAt","_notifyPluginsOfEnabled","_lazy","defaultEase","_ease","defaultOverwrite","headWidth","headLength","adjustedLag","selector","_doc","currentNum","startNums","num","$bd91b0f0455505fd987424dc38ef63e3$var$Composite","coneLength","firstValidIndex","coneWidth","$bd91b0f0455505fd987424dc38ef63e3$export$SkeletonHelper","boneMatrix","$bd91b0f0455505fd987424dc38ef63e3$export$PointLightHelper","$bd91b0f0455505fd987424dc38ef63e3$export$RectAreaLightHelper","$bd91b0f0455505fd987424dc38ef63e3$export$HemisphereLightHelper","getAttribute","targetArray","$bd91b0f0455505fd987424dc38ef63e3$export$GridHelper","radials","circles","$bd91b0f0455505fd987424dc38ef63e3$export$PolarGridHelper","$bd91b0f0455505fd987424dc38ef63e3$export$FaceNormalsHelper","addLine","targetLine","$bd91b0f0455505fd987424dc38ef63e3$export$FaceColors","colorCone","colorUp","colorTarget","nObjects","nBindings","knownObject","addPoint","$bd91b0f0455505fd987424dc38ef63e3$export$CameraHelper","setPoint","lastObject","$bd91b0f0455505fd987424dc38ef63e3$export$PlaneHelper","isScheduled","$bd91b0f0455505fd987424dc38ef63e3$var$lineGeometry","$bd91b0f0455505fd987424dc38ef63e3$var$coneGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$ArrowHelper","weightInterpolant","$bd91b0f0455505fd987424dc38ef63e3$export$VertexColors","$bd91b0f0455505fd987424dc38ef63e3$export$AxesHelper","timeScaleInterpolant","getMixer","isMultiMaterial","_updateTimeScale","evaluate","$bd91b0f0455505fd987424dc38ef63e3$export$Float64BufferAttribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","$bd91b0f0455505fd987424dc38ef63e3$export$TriangleFanDrawMode","fromPoints","$bd91b0f0455505fd987424dc38ef63e3$export$ClosedSplineCurve3","$bd91b0f0455505fd987424dc38ef63e3$export$SplineCurve3","$bd91b0f0455505fd987424dc38ef63e3$export$Spline","initFromArray","clampWhenFinished","reparametrizeByArcLength","atStart","$bd91b0f0455505fd987424dc38ef63e3$export$ObjectLoader","isIntersectionSphere","$bd91b0f0455505fd987424dc38ef63e3$export$Line3","nextPowerOfTwo","referenceCount","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","flattenToArrayOffset","getPosition","multiplyToArray","rotateAxis","crossVector","rotateY","rotateZ","_nActiveBindings","isIntersectionPlane","area","barycoordFromPoint","extractAllPoints","extractPoints","extrude","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","propBinding","lastInactiveBinding","setEulerFromQuaternion","getPositionFromMatrix","getColumnFromMatrix","getChildByName","clipObject","getWorldRotation","eulerOrder","findByName","useQuaternion","nActions","_nActiveActions","setFocalLength","shadowCameraFov","shadowCameraLeft","shadowCameraTop","shadowCameraBottom","shadowDarkness","shadowMapHeight","addIndex","addDrawCall","drawcalls","getArrays","addShapeList","wrapRGB","$bd91b0f0455505fd987424dc38ef63e3$export$FlatShading","metal","$bd91b0f0455505fd987424dc38ef63e3$export$WebGLRenderer","animate","clearTarget","getCurrentRenderTarget","getRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","$bd91b0f0455505fd987424dc38ef63e3$var$WebGLShadowMap","renderReverseSided","renderSingleSided","audioLoader","$bd91b0f0455505fd987424dc38ef63e3$export$AudioLoader","setBuffer","$bd91b0f0455505fd987424dc38ef63e3$export$GeometryUtils","geometry1","closestPointToPointParameter","loadCompressedTextureCube","$484c66e3a460ef07203e1f96e603c15d$export$_gsScope","$484c66e3a460ef07203e1f96e603c15d$export$TweenLite","_exports","_namespace","ns","_globals","_emptyFunc","_isArray","Definition","sc","_defLookup","_classes","check","dependencies","missing","cur","cl","gsClass","pw","useParam","_reqAnimFrame","_lastUpdate","_cancelAnimFrame","elapsed","_getTime","clearTimeout","_req","seamless","_delay","_kill","_uncache","includeSelf","_swapSelfInParams","delay","lightPlane","smoothChildTiming","_duration","pauseTime","_pauseTime","SimpleTimeline","kill","_first","insert","prevTween","st","_prev","_recent","_remove","skipDisable","_propLookup","_register","_applyOverwrite","_target","_tween","fp","val","_blobRound","setColor","_numbersExp","endNums","_applyPT","nonNumbers","charIndex","autoCSS","lazy","stringFilter","yoyoEase","_overwriteLookup","none","concurrent","preexisting","_rootFramesTimeline","_lazyLookup","_active","tweens","_onOverwrite","r1","changed","curTween","globalStart","_checkOverlap","overlaps","oCount","ts","reference","dur","immediate","startAt","startVars","immediateRender","easeParams","_easePower","_initProps","_onPluginEvent","op","_initted","initPlugins","plugin","isIntersectionLine","_priority","_overwriteProps","overwrittenProps","propLookup","ratio","autoRemoveChildren","prevRawPrevTime","isComplete","rawPrevTime","_init","_callback","initBones","killProps","record","killed","simultaneousOverwrite","pg","invalidate","runBackwards","fromTo","toVars","delayedCall","onCompleteParams","callbackScope","onReverseCompleteParams","onlyActive","_propName","TweenPlugin","API","setRatio","lookup","_mod","_roundProps","first","pt2","activate","plugins","_plugins","config","boolean","initAll","Plugin","prop","$484c66e3a460ef07203e1f96e603c15d$export$globals","$484c66e3a460ef07203e1f96e603c15d$export$Animation","$484c66e3a460ef07203e1f96e603c15d$export$Ease","$484c66e3a460ef07203e1f96e603c15d$export$Power0","$484c66e3a460ef07203e1f96e603c15d$export$Power1","$484c66e3a460ef07203e1f96e603c15d$export$Power2","$484c66e3a460ef07203e1f96e603c15d$export$Power3","$484c66e3a460ef07203e1f96e603c15d$export$EventDispatcher","alt","cycle","each","distances","originX","isFromKeyword","originY","ease","_cycle","_yoyo","_repeat","TweenMax","killTweensOf","lagSmoothing","_repeatDelay","_yoyoEase","updateTo","inv","prevCycle","prevTotalTime","TweenLiteInternals","lazyTweens","fromVars","staggerFunc","_applyCycle","fromCycle","onComplete","onCompleteAll","staggerFrom","allFrom","staggerTo","staggerFromTo","allFromTo","onReverseComplete","includeTimelines","cnt","killAll","delayedCalls","killChildTweensOf","tweenLookup","curParent","parentNode","overlap","timelines","getAllTweens","allTrue","_changePause","globalTimeScale","repeatDelay","yoyo","$d49e49ed64d278aaecacffddb61f8f13$export$TweenMax","CSSPlugin","_totalDuration","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","fontSize","padding","margin","perspective","_numExp","toUpperCase","_horizExp","_ieGetMatrixExp","createElement","_dummyElement","_createElement","visibilityState","_tempDiv","_isSafariLT6","cssText","_getIEOpacity","_opacityExp","_log","includeDelay","_prefixCSS","_prefix","_computedStyleScope","_getComputedStyle","_getStyle","rv","calc","getPropertyValue","currentStyle","dflt","_convertToPixels","sfx","horiz","neg","lineHeight","_gsCache","removeChild","pix","precise","skewX","tr","_getTransform","_supports3D","rotationX","difs","mpt","_margins","_sortChildren","recObj","includeRepeats","oyr","ox","_index","_parseChange","_parseVal","isRelative","_parseAngle","directionalEnd","dif","cap","align","stagger","silver","_colorLookup","lime","maroon","black","teal","white","fuchsia","olive","orange","gray","green","red","cyan","_hue","_parseColor","jquery","nodeType","parsed","toHSL","_colorExp","temp","substr","combined","_formatColors","numVals","clr","vals","dSfx","multi","_commasOutsideParenExp","formatter","$","jQuery","delim","getElementById","pfx","_getEdgeParser","props","proxy","autoRotate","firstMPT","str","_parseToProxy","_internals","bpt","cssp","_transform","firstPT","_forcePT","oldForce","MiniPropTween","CSSPropTween","onOverwrite","_hasPriority","_addNonTweeningNumericPT","_parseComplex","colorStringFilter","autoSleep","ba","ea","bn","ev","clrs","bv","_tweenLookupNum","_supportsOpacity","hasAlpha","r2","bnums","enums","_relNumExp","ni","siblings","xi","cv","xfirst","appendXtra","xs0","rxp","_specialProps","keyword","allowFunc","defaults","defaultValue","pluginClass","pluginName","SpecialProp","kwd","bi","ei","useSVGTransformAttr","force3D","defaultForce3D","_SVGElement","SVGElement","_docElement","appendChild","getBoundingClientRect","rect","_transformOriginProp","_isFirefox","_parseSVGOrigin","tm","absolute","local","_parsePosition","decoratee","xOrigin","yOrigin","yOffset","smoothOrigin","skipRecord","setAttribute","_getBBoxHack","swapIfPossible","svg","bbox","getBBox","_originalGetBBox","oldParent","oldSibling","insertBefore","oldCSS","_isSVG","_identity2DMatrix","_getMatrix","force2D","_gsTransform","isDefault","display","_transformPropCSS","dec","nextSibling","getCTM","overwritingTween","getTransform","_useSVGTransformAttr","a34","zOrigin","t3","rotationY","ignoreTimeline","useFrames","invX","oxp","oyp","_ieSetMatrixExp","ieOffsetY","ieOffsetX","skewY","_DEG2RAD","rnd","isSVG","_transformProp","$484c66e3a460ef07203e1f96e603c15d$exports","comma","Transform","originalGSTransform","_transformProps","endRotations","skewType","rotationZ","orig","m2","transformOrigin","xPercent","yPercent","transformPerspective","dr","directionalRotation","hasChange","has3D","cycleDuration","totalDur","_registerComplexSpecialProp","_transformType","scaleFunc","offsetWidth","offsetHeight","ea1","bs2","_cs","es2","es","rel","esfx","_suffixMap","hn","em","vn","_getFormatter","bp","_ieVers","_tempImg","parseComplex","bw","allTo","onCompleteAllParams","onCompleteAllScope","_distribute","_blankArray","skip","xn1","isAutoAlpha","_setIEOpacityRatio","removeProperty","_setClassNameRatio","_gsClassPT","_removeProp","_getChildrenOf","isDC","_classNamePT","pr","cnptLookup","difData","_cssDif","_setClearPropsRatio","clearTransform","_registerPluginProp","_lastParsedTransform","_onInitTween","_vars","_reqSafariFix","cycleDur","_getAllStyles","className","_isSafari","threeD","zIndex","_addLazySet","tpt","_setTransformRatio","_setIETransformRatio","sp","_gsScope","isStr","_getDimension","bsfx","_agent","_calculateOffset","$1","en","xs1","xs2","xs3","lazySet","_linkCSSP","autoAlpha","_getChildStyles","childNodes","_NaNExp","$761a2dbf98eeeb632bb68c9e186fa8a9$export$CSSPlugin","$b7145f6498504d9875a1560a928a0b21$export$AttrPlugin","propName","$7792832b3a51fd812f4fab39325a6526$export$RoundPropsPlugin","$7792832b3a51fd812f4fab39325a6526$export$_getRoundFunc","$7792832b3a51fd812f4fab39325a6526$export$p","_onInitAllProps","rp","roundProps","_add","parseColor","$33e0341e1779675accb2d7bded159f57$export$DirectionalRotationPlugin","finals","useRadians","_addTween","_super","TimelineLite","_labels","_pauseCallback","dVals","dColor","_valuesExp","distribute","_forcingPlayhead","Engine","_defaultImmediateRender","_copy","ignoreDelayedCalls","hasNegativeStart","curTime","_parseTimeOrLabel","removeLabel","_hasPause","getLabelTime","clippedDuration","ignore","timeOrLabel","offsetOrLabel","pauseTween","internalForce","autoRound","_checkPropPrefix","prevStart","_hasPausedChild","getTweensOf","nested","disabled","_forceSVGTransformAttr","chrome","shiftChildren","$7aee3e49196a7bc5d2ba52456f08a3b2$export$TimelineLite","TimelineMax","addCallback","ownerSVGElement","removeCallback","_getBBox","removePause","pauseCallback","tweenTo","fromPosition","_locked","onRepeat","backwards","recTime","recRawPrevTime","getActive","labels","getLabelsArray","currentLabel","getLabelBefore","$d9314b56b47219aed72c6f38cfc87403$export$TimelineMax","$77ce4f4abe0a9f35d184dc199a7d6372$var$_correlate","q4","mab","mabc","m8","curviness","mm","seg","cp2","cp1","ca","quad","$77ce4f4abe0a9f35d184dc199a7d6372$var$cubicToQuadratic","ii","$77ce4f4abe0a9f35d184dc199a7d6372$var$_parseAnchors","prepend","correlate","$77ce4f4abe0a9f35d184dc199a7d6372$var$_r1","$77ce4f4abe0a9f35d184dc199a7d6372$var$_r2","$77ce4f4abe0a9f35d184dc199a7d6372$var$bezierThrough","parsingProp","$77ce4f4abe0a9f35d184dc199a7d6372$var$_corProps","da","$77ce4f4abe0a9f35d184dc199a7d6372$var$_r3","quadratic","$77ce4f4abe0a9f35d184dc199a7d6372$var$_calculateControlPoints","$77ce4f4abe0a9f35d184dc199a7d6372$var$_parseBezierData","inc","svgOrigin","body","soft","$77ce4f4abe0a9f35d184dc199a7d6372$var$Segment","$77ce4f4abe0a9f35d184dc199a7d6372$var$_addCubicLengths","bez","curLS","$77ce4f4abe0a9f35d184dc199a7d6372$export$BezierPlugin","_props","timeResolution","second","isFunc","_segCount","_beziers","ld","$77ce4f4abe0a9f35d184dc199a7d6372$var$_parseLengthData","_length","_lengths","_segments","_l1","_l2","_curSeg","_s2","_initialRotations","_autoRotate","_startRatio","curSeg","_li","_s1","_si","curIndex","ar","conv","$77ce4f4abe0a9f35d184dc199a7d6372$var$_RAD2DEG","$77ce4f4abe0a9f35d184dc199a7d6372$var$p","$77ce4f4abe0a9f35d184dc199a7d6372$var$_globals","pluginValues","C","easeOut","EaseOut","easeIn","EaseIn","easeInOut","EaseInOut","EasePoint","gap","_createBack","_alphaFilterExp","overshoot","_p1","linearRatio","_p","_p2","SlowMo","immediateStart","_p3","SteppedEase","ExpoScaleEase","template","bump","strength","randomize","pnt","transformParse","RoughEase","_create","invert","_wrap","suffixMap","_createElastic","def","amplitude","period","$b217c30179b8a4ef4e62edb6c3fd90c1$export$RoughEase","Back","WebkitBackfaceVisibility","$b217c30179b8a4ef4e62edb6c3fd90c1$export$Bounce","$b217c30179b8a4ef4e62edb6c3fd90c1$export$SlowMo","$b217c30179b8a4ef4e62edb6c3fd90c1$export$Circ","$b217c30179b8a4ef4e62edb6c3fd90c1$export$Expo","$b217c30179b8a4ef4e62edb6c3fd90c1$export$Sine","$b217c30179b8a4ef4e62edb6c3fd90c1$export$ExpoScaleEase","$af203f24f666d7bf6fa2271863d93da4$export$TweenMax","D","M","R","V","O","autoplay","A","intensity1","intensity2","dispFactor","_rgbhslExp","angle1","angle2","texture1","I","texture2","disp","dpr","devicePixelRatio","_suffixExp","U","E","$a8e668d127ca6f31cc58d36b5a865893$var$bundleURL","stack","toParts","divergeIndex","shift","xn2","xn3","xs4","$4714a15d4b8a8df0c9291815362d5586$var$dirname","querySelector","image1","imagesRatio","Expo","$4714a15d4b8a8df0c9291815362d5586$var$resolve","_filePath","filePath","slashIndex","$4714a15d4b8a8df0c9291815362d5586$var$relative","fromParts"],"version":3,"file":"index.669e7cad.js.map"}